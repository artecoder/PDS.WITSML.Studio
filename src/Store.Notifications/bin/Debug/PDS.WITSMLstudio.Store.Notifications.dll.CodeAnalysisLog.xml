<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio\2019\enterprise\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="16.0">
 <Namespaces>
  <Namespace Name="PDS.WITSMLstudio.Store.Configuration">
   <Messages>
    <Message Id="PDS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'PDS' in namespace name 'PDS.WITSMLstudio.Store.Configuration' by changing it to 'Pds'.</Issue>
    </Message>
    <Message Id="WITSM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'WITSM' in namespace name 'PDS.WITSMLstudio.Store.Configuration' by changing it to 'Witsm'.</Issue>
    </Message>
    <Message Id="Lstudio" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Lstudio' in namespace name 'PDS.WITSMLstudio.Store.Configuration'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="PDS.WITSMLstudio.Store.Providers.StoreNotification">
   <Messages>
    <Message Id="PDS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'PDS' in namespace name 'PDS.WITSMLstudio.Store.Providers.StoreNotification' by changing it to 'Pds'.</Issue>
    </Message>
    <Message Id="WITSM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'WITSM' in namespace name 'PDS.WITSMLstudio.Store.Providers.StoreNotification' by changing it to 'Witsm'.</Issue>
    </Message>
    <Message Id="Lstudio" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Lstudio' in namespace name 'PDS.WITSMLstudio.Store.Providers.StoreNotification'.</Issue>
    </Message>
   </Messages>
  </Namespace>
 </Namespaces>
 <Targets>
  <Target Name="C:\Users\rarteaga\Source\Repos\witsml\src\Store.Notifications\bin\Debug\PDS.WITSMLstudio.Store.Notifications.dll">
   <Modules>
    <Module Name="pds.witsmlstudio.store.notifications.dll">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Sign 'PDS.WITSMLstudio.Store.Notifications.dll' with a strong name key.</Issue>
      </Message>
      <Message Id="PDS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="85" Level="Error">Correct the casing of 'PDS' in assembly name 'PDS.WITSMLstudio.Store.Notifications.dll' by changing it to 'Pds'.</Issue>
      </Message>
      <Message Id="WITSM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="85" Level="Error">Correct the casing of 'WITSM' in assembly name 'PDS.WITSMLstudio.Store.Notifications.dll' by changing it to 'Witsm'.</Issue>
      </Message>
      <Message Id="Lstudio" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Lstudio' in assembly name 'PDS.WITSMLstudio.Store.Notifications.dll'.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'PDS.WITSMLstudio.Store.Notifications.dll' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="PDS.WITSMLstudio.Store.Configuration">
       <Types>
        <Type Name="KafkaSettings" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BrokerList" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'KafkaSettings.BrokerList' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DebugContexts" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'KafkaSettings.DebugContexts' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DeleteTopicName" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'KafkaSettings.DeleteTopicName' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EnableAutoCommit" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'KafkaSettings.EnableAutoCommit' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InsertTopicName" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'KafkaSettings.InsertTopicName' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PollingIntervalInMilliseconds" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'KafkaSettings.PollingIntervalInMilliseconds' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateTopicName" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'KafkaSettings.UpdateTopicName' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpsertTopicName" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Upsert" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Upsert' in member name 'KafkaSettings.UpsertTopicName' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'KafkaSettings.UpsertTopicName' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="PDS.WITSMLstudio.Store.Providers.StoreNotification">
       <Types>
        <Type Name="StoreNotification11StoreProvider" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#EnsureConnection()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Store.Notifications\Providers\StoreNotification" File="StoreNotification11StoreProvider.cs" Line="107">Modify 'StoreNotification11StoreProvider.EnsureConnection()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Store.Notifications\Providers\StoreNotification" File="StoreNotification11StoreProvider.cs" Line="92">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'StoreNotification11StoreProvider.EnsureConnection()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnMessage(System.Object,Confluent.Kafka.Message`2&lt;System.String,System.String&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Store.Notifications\Providers\StoreNotification" File="StoreNotification11StoreProvider.cs" Line="126">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'StoreNotification11StoreProvider.OnMessage(object, Message&lt;string, string&gt;)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="StoreNotification11StoreProviderBase" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetDataObject(System.String,System.String,System.String,System.Object,System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Store.Notifications\Providers\StoreNotification" File="StoreNotification11StoreProviderBase.cs" Line="152">In member 'StoreNotification11StoreProviderBase.GetDataObject(string, string, string, object, bool)', consider replacing the data type identifier 'Object' in parameter name 'dataObject' with a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnNotify(System.Func`3&lt;Energistics.Etp.Common.Datatypes.IMessageHeader,Energistics.Etp.v11.Datatypes.Object.ObjectChange,System.Int64&gt;,System.String,System.Object,System.DateTime,Energistics.Etp.v11.Datatypes.Object.ObjectChangeTypes)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Store.Notifications\Providers\StoreNotification" File="StoreNotification11StoreProviderBase.cs" Line="134">In member 'StoreNotification11StoreProviderBase.OnNotify(Func&lt;IMessageHeader, ObjectChange, long&gt;, string, object, DateTime, ObjectChangeTypes)', consider replacing the data type identifier 'Object' in parameter name 'dataObject' with a more generic term, such as 'value'.</Issue>
            </Message>
            <Message Id="1#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Store.Notifications\Providers\StoreNotification" File="StoreNotification11StoreProviderBase.cs" Line="136">Change the type of parameter 'uri' of method 'StoreNotification11StoreProviderBase.OnNotify(Func&lt;IMessageHeader, ObjectChange, long&gt;, string, object, DateTime, ObjectChangeTypes)' from string to System.Uri, or provide an overload of 'StoreNotification11StoreProviderBase.OnNotify(Func&lt;IMessageHeader, ObjectChange, long&gt;, string, object, DateTime, ObjectChangeTypes)', that allows 'uri' to be passed as a System.Uri object.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Store.Notifications\Providers\StoreNotification" File="StoreNotification11StoreProviderBase.cs" Line="143">In externally visible method 'StoreNotification11StoreProviderBase.OnNotify(Func&lt;IMessageHeader, ObjectChange, long&gt;, string, object, DateTime, ObjectChangeTypes)', validate parameter 'action' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnNotifyDelete(System.String,System.Object,System.DateTime)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Store.Notifications\Providers\StoreNotification" File="StoreNotification11StoreProviderBase.cs" Line="129">In member 'StoreNotification11StoreProviderBase.OnNotifyDelete(string, object, DateTime)', consider replacing the data type identifier 'Object' in parameter name 'dataObject' with a more generic term, such as 'value'.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Store.Notifications\Providers\StoreNotification" File="StoreNotification11StoreProviderBase.cs" Line="129">Change the type of parameter 'uri' of method 'StoreNotification11StoreProviderBase.OnNotifyDelete(string, object, DateTime)' from string to System.Uri, or provide an overload of 'StoreNotification11StoreProviderBase.OnNotifyDelete(string, object, DateTime)', that allows 'uri' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnNotifyUpsert(System.String,System.Object,System.DateTime)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="Upsert" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Store.Notifications\Providers\StoreNotification" File="StoreNotification11StoreProviderBase.cs" Line="124">Correct the spelling of 'Upsert' in member name 'StoreNotification11StoreProviderBase.OnNotifyUpsert(string, object, DateTime)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Store.Notifications\Providers\StoreNotification" File="StoreNotification11StoreProviderBase.cs" Line="124">In member 'StoreNotification11StoreProviderBase.OnNotifyUpsert(string, object, DateTime)', consider replacing the data type identifier 'Object' in parameter name 'dataObject' with a more generic term, such as 'value'.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Store.Notifications\Providers\StoreNotification" File="StoreNotification11StoreProviderBase.cs" Line="124">Change the type of parameter 'uri' of method 'StoreNotification11StoreProviderBase.OnNotifyUpsert(string, object, DateTime)' from string to System.Uri, or provide an overload of 'StoreNotification11StoreProviderBase.OnNotifyUpsert(string, object, DateTime)', that allows 'uri' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="StoreNotification12StoreProvider" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#EnsureConnection()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Store.Notifications\Providers\StoreNotification" File="StoreNotification12StoreProvider.cs" Line="107">Modify 'StoreNotification12StoreProvider.EnsureConnection()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Store.Notifications\Providers\StoreNotification" File="StoreNotification12StoreProvider.cs" Line="92">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'StoreNotification12StoreProvider.EnsureConnection()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnMessage(System.Object,Confluent.Kafka.Message`2&lt;System.String,System.String&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Store.Notifications\Providers\StoreNotification" File="StoreNotification12StoreProvider.cs" Line="126">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'StoreNotification12StoreProvider.OnMessage(object, Message&lt;string, string&gt;)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="StoreNotification12StoreProviderBase" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetDataObject(System.String,System.String,System.String,System.Object,System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Store.Notifications\Providers\StoreNotification" File="StoreNotification12StoreProviderBase.cs" Line="164">In member 'StoreNotification12StoreProviderBase.GetDataObject(string, string, string, object, bool)', consider replacing the data type identifier 'Object' in parameter name 'dataObject' with a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnNotify(System.Func`3&lt;Energistics.Etp.Common.Datatypes.IMessageHeader,Energistics.Etp.v12.Datatypes.Object.ObjectChange,System.Int64&gt;,System.String,System.Object,System.DateTime,Energistics.Etp.v12.Datatypes.Object.ObjectChangeKind)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Store.Notifications\Providers\StoreNotification" File="StoreNotification12StoreProviderBase.cs" Line="146">In member 'StoreNotification12StoreProviderBase.OnNotify(Func&lt;IMessageHeader, ObjectChange, long&gt;, string, object, DateTime, ObjectChangeKind)', consider replacing the data type identifier 'Object' in parameter name 'dataObject' with a more generic term, such as 'value'.</Issue>
            </Message>
            <Message Id="1#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Store.Notifications\Providers\StoreNotification" File="StoreNotification12StoreProviderBase.cs" Line="148">Change the type of parameter 'uri' of method 'StoreNotification12StoreProviderBase.OnNotify(Func&lt;IMessageHeader, ObjectChange, long&gt;, string, object, DateTime, ObjectChangeKind)' from string to System.Uri, or provide an overload of 'StoreNotification12StoreProviderBase.OnNotify(Func&lt;IMessageHeader, ObjectChange, long&gt;, string, object, DateTime, ObjectChangeKind)', that allows 'uri' to be passed as a System.Uri object.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Store.Notifications\Providers\StoreNotification" File="StoreNotification12StoreProviderBase.cs" Line="155">In externally visible method 'StoreNotification12StoreProviderBase.OnNotify(Func&lt;IMessageHeader, ObjectChange, long&gt;, string, object, DateTime, ObjectChangeKind)', validate parameter 'action' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnNotifyDelete(System.String,System.Object,System.DateTime)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Store.Notifications\Providers\StoreNotification" File="StoreNotification12StoreProviderBase.cs" Line="135">In member 'StoreNotification12StoreProviderBase.OnNotifyDelete(string, object, DateTime)', consider replacing the data type identifier 'Object' in parameter name 'dataObject' with a more generic term, such as 'value'.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Store.Notifications\Providers\StoreNotification" File="StoreNotification12StoreProviderBase.cs" Line="137">Change the type of parameter 'uri' of method 'StoreNotification12StoreProviderBase.OnNotifyDelete(string, object, DateTime)' from string to System.Uri, or provide an overload of 'StoreNotification12StoreProviderBase.OnNotifyDelete(string, object, DateTime)', that allows 'uri' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnNotifyInsert(System.String,System.Object,System.DateTime)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Store.Notifications\Providers\StoreNotification" File="StoreNotification12StoreProviderBase.cs" Line="125">In member 'StoreNotification12StoreProviderBase.OnNotifyInsert(string, object, DateTime)', consider replacing the data type identifier 'Object' in parameter name 'dataObject' with a more generic term, such as 'value'.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Store.Notifications\Providers\StoreNotification" File="StoreNotification12StoreProviderBase.cs" Line="125">Change the type of parameter 'uri' of method 'StoreNotification12StoreProviderBase.OnNotifyInsert(string, object, DateTime)' from string to System.Uri, or provide an overload of 'StoreNotification12StoreProviderBase.OnNotifyInsert(string, object, DateTime)', that allows 'uri' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnNotifyUpdate(System.String,System.Object,System.DateTime)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Store.Notifications\Providers\StoreNotification" File="StoreNotification12StoreProviderBase.cs" Line="130">In member 'StoreNotification12StoreProviderBase.OnNotifyUpdate(string, object, DateTime)', consider replacing the data type identifier 'Object' in parameter name 'dataObject' with a more generic term, such as 'value'.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Store.Notifications\Providers\StoreNotification" File="StoreNotification12StoreProviderBase.cs" Line="130">Change the type of parameter 'uri' of method 'StoreNotification12StoreProviderBase.OnNotifyUpdate(string, object, DateTime)' from string to System.Uri, or provide an overload of 'StoreNotification12StoreProviderBase.OnNotifyUpdate(string, object, DateTime)', that allows 'uri' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="StoreNotificationProducer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">Implement IDisposable on 'StoreNotificationProducer' because it creates members of the following IDisposable types: 'StringSerializer'. If 'StoreNotificationProducer' has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#SendNotification(System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Store.Notifications\Providers\StoreNotification" File="StoreNotificationProducer.cs" Line="105">Modify 'StoreNotificationProducer.SendNotification(string, string, string)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Store.Notifications\Providers\StoreNotification" File="StoreNotificationProducer.cs" Line="102">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'StoreNotificationProducer.SendNotification(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SendNotifications`1(!!0,PDS.WITSMLstudio.Data.ChangeLogs.DbAuditHistory)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="NonBreaking">
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Store.Notifications\Providers\StoreNotification" File="StoreNotificationProducer.cs" Line="71">In method 'StoreNotificationProducer.SendNotifications&lt;T&gt;(T, DbAuditHistory)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-19 20:25:51Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Store.Notifications\Providers\StoreNotification" File="StoreNotificationProducer.cs" Line="71">In externally visible method 'StoreNotificationProducer.SendNotifications&lt;T&gt;(T, DbAuditHistory)', validate parameter 'auditHistory' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>Assemblies should have valid strong names</Name>
   <Description>Either the assembly has no strong name, an invalid one, or the strong name is valid only because of the computer configuration. The assembly should not be deployed in this state. The most common causes of this are: 1) The assembly's contents were modified after it was signed. 2) The signing process failed. 3) The assembly was delay-signed. 4) A registry key existed that allowed the check to pass (where it would not have otherwise).</Description>
   <Resolution Name="NoStrongName">Sign {0} with a strong name key.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182127.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
   <Name>Do not catch general exception types</Name>
   <Description>You should not catch Exception or SystemException. Catching generic exception types can hide run-time problems from the library user, and can complicate debugging. You should catch only those exceptions that you can handle gracefully.</Description>
   <Resolution Name="Default">Modify {0} to catch a more specific exception than {1} or rethrow the exception.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182137.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>Identifiers should be cased correctly</Name>
   <Description>Type, namespace, and member identifiers are Pascal-cased. Parameter identifiers are camel-cased. Two letter acronyms within these identifiers should be upper-cased, for example, use System.IO instead of System.Io. Acronyms of three or more letters should be Pascal-cased, for example, use System.Xml instead of System.XML. The pascal-casing convention capitalizes the first letter of each word, as in BackColor. The camel-casing convention formats the first letter of the first word in lowercase and capitalizes the first letter of all subsequent words, as in backgroundColor. Although it may be common practice for some two letter acronyms to not be fully capitalized, violations of this rule should not be excluded for this reason. For example, 'DbConnection', is common but incorrect; use DBConnection. A violation of this rule might be required for compatibility with existing, non-managed symbol schemes. In general, however, these symbols should not be visible outside the assembly that uses them.</Description>
   <Resolution Name="Assembly">Correct the casing of '{0}' in assembly name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="Namespace">Correct the casing of '{0}' in namespace name '{1}' by changing it to '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182240.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="namingrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>Identifiers should be spelled correctly</Name>
   <Description>The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</Description>
   <Resolution Name="Assembly">Correct the spelling of '{0}' in assembly name {1}.</Resolution>
   <Resolution Name="Member">Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="Namespace">Correct the spelling of '{0}' in namespace name '{1}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264492.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="namingrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720">
   <Name>Identifiers should not contain type names</Name>
   <Description>Avoid using language-specific types name in parameters and members and data type identifiers in parameters. Types names might not be intuitive for all developers. It is recommended that you select a generic name, such as 'value', instead. If this is not sufficient, be sure to use the type name as it is defined in the .NET Framework Library and avoid language-specific type names completely. Some examples of C#-specific type names are 'float' (use 'Single' if a generic name is not sufficient), and 'ulong' (use 'UInt64' if a generic name is not sufficient).</Description>
   <Resolution Name="LanguageIndependentMemberParameter">In member {0}, consider replacing the data type identifier '{1}' in parameter name {2} with a more generic term, such as 'value'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb531486.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="namingrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>Mark assemblies with CLSCompliantAttribute</Name>
   <Description>Assemblies should explicitly state their CLS compliance using the CLSCompliant attribute. An assembly without this attribute is not CLS-compliant. Assemblies, modules, and types can be CLS-compliant even if some parts of the assembly, module, or type are not CLS-compliant. The following rules apply: 1) If the element is marked CLSCompliant, any noncompliant members must have the CLSCompliant attribute present with its argument set to false. 2) A comparable CLS-compliant alternative member must be supplied for each member that is not CLS-compliant.</Description>
   <Resolution Name="Default">Mark {0} with CLSCompliant(true) because it exposes externally visible types.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182156.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211">
   <Name>Non-constant fields should not be visible</Name>
   <Description>Static fields should be constant unless you carefully manage access to the field using locks. Using static variables without making them thread safe can compromise execution state. This rule applies to managed code libraries. If the analyzed assembly is an application, it is usually safe to exclude violations of this rule.</Description>
   <Resolution Name="Default">Consider making {0} non-public or a constant.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182353.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308">
   <Name>Normalize strings to uppercase</Name>
   <Description>Strings should be normalized to upper-case.</Description>
   <Resolution Name="ToUpperInvariant">In method {0}, replace the call to {1} with String.ToUpperInvariant().</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386042.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>Specify IFormatProvider</Name>
   <Description>If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="IFormatProviderAlternateString">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182190.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001">
   <Name>Types that own disposable fields should be disposable</Name>
   <Description>Types that declare disposable members should also implement IDisposable. If the type does not own any unmanaged resources, do not implement a finalizer on it.</Description>
   <Resolution Name="DependsOnFix">Implement IDisposable on {0} because it creates members of the following IDisposable types: {1}. If {0} has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182172.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054">
   <Name>URI parameters should not be strings</Name>
   <Description>If a parameter name contains "uri" or "url" or "urn", and it's typed as string, the parameter type should be changed to System.Uri, unless there is an overload method where the same parameter is typed as System.Uri.</Description>
   <Resolution Name="Default">Change the type of parameter {0} of method {1} from string to System.Uri, or provide an overload of {1}, that allows {0} to be passed as a System.Uri object.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182174.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="60">Error</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062">
   <Name>Validate arguments of public methods</Name>
   <Description>All reference arguments passed to externally visible methods should be checked against null (Nothing in VB). If appropriate, throw a System.ArgumentNullException when the argument is null.</Description>
   <Resolution Name="Default">In externally visible method {0}, validate parameter '{1}' before using it.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182182.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="16.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
