<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio\2019\enterprise\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="16.0">
 <Namespaces>
  <Namespace Name="PDS.WITSMLstudio">
   <Messages>
    <Message Id="PDS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'PDS' in namespace name 'PDS.WITSMLstudio' by changing it to 'Pds'.</Issue>
    </Message>
    <Message Id="WITSM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'WITSM' in namespace name 'PDS.WITSMLstudio' by changing it to 'Witsm'.</Issue>
    </Message>
    <Message Id="Lstudio" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Lstudio' in namespace name 'PDS.WITSMLstudio'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="PDS.WITSMLstudio.Adapters">
   <Messages>
    <Message Id="PDS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'PDS' in namespace name 'PDS.WITSMLstudio.Adapters' by changing it to 'Pds'.</Issue>
    </Message>
    <Message Id="WITSM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'WITSM' in namespace name 'PDS.WITSMLstudio.Adapters' by changing it to 'Witsm'.</Issue>
    </Message>
    <Message Id="Lstudio" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Lstudio' in namespace name 'PDS.WITSMLstudio.Adapters'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="PDS.WITSMLstudio.Compatibility">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'PDS.WITSMLstudio.Compatibility' with another namespace.</Issue>
    </Message>
    <Message Id="PDS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'PDS' in namespace name 'PDS.WITSMLstudio.Compatibility' by changing it to 'Pds'.</Issue>
    </Message>
    <Message Id="WITSM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'WITSM' in namespace name 'PDS.WITSMLstudio.Compatibility' by changing it to 'Witsm'.</Issue>
    </Message>
    <Message Id="Lstudio" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Lstudio' in namespace name 'PDS.WITSMLstudio.Compatibility'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="PDS.WITSMLstudio.Connections">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'PDS.WITSMLstudio.Connections' with another namespace.</Issue>
    </Message>
    <Message Id="PDS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'PDS' in namespace name 'PDS.WITSMLstudio.Connections' by changing it to 'Pds'.</Issue>
    </Message>
    <Message Id="WITSM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'WITSM' in namespace name 'PDS.WITSMLstudio.Connections' by changing it to 'Witsm'.</Issue>
    </Message>
    <Message Id="Lstudio" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Lstudio' in namespace name 'PDS.WITSMLstudio.Connections'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="PDS.WITSMLstudio.Data">
   <Messages>
    <Message Id="PDS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'PDS' in namespace name 'PDS.WITSMLstudio.Data' by changing it to 'Pds'.</Issue>
    </Message>
    <Message Id="WITSM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'WITSM' in namespace name 'PDS.WITSMLstudio.Data' by changing it to 'Witsm'.</Issue>
    </Message>
    <Message Id="Lstudio" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Lstudio' in namespace name 'PDS.WITSMLstudio.Data'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="PDS.WITSMLstudio.Data.ChangeLogs">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'PDS.WITSMLstudio.Data.ChangeLogs' with another namespace.</Issue>
    </Message>
    <Message Id="PDS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'PDS' in namespace name 'PDS.WITSMLstudio.Data.ChangeLogs' by changing it to 'Pds'.</Issue>
    </Message>
    <Message Id="WITSM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'WITSM' in namespace name 'PDS.WITSMLstudio.Data.ChangeLogs' by changing it to 'Witsm'.</Issue>
    </Message>
    <Message Id="Lstudio" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Lstudio' in namespace name 'PDS.WITSMLstudio.Data.ChangeLogs'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="PDS.WITSMLstudio.Data.Channels">
   <Messages>
    <Message Id="PDS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'PDS' in namespace name 'PDS.WITSMLstudio.Data.Channels' by changing it to 'Pds'.</Issue>
    </Message>
    <Message Id="WITSM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'WITSM' in namespace name 'PDS.WITSMLstudio.Data.Channels' by changing it to 'Witsm'.</Issue>
    </Message>
    <Message Id="Lstudio" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Lstudio' in namespace name 'PDS.WITSMLstudio.Data.Channels'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="PDS.WITSMLstudio.Data.Logs">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'PDS.WITSMLstudio.Data.Logs' with another namespace.</Issue>
    </Message>
    <Message Id="PDS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'PDS' in namespace name 'PDS.WITSMLstudio.Data.Logs' by changing it to 'Pds'.</Issue>
    </Message>
    <Message Id="WITSM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'WITSM' in namespace name 'PDS.WITSMLstudio.Data.Logs' by changing it to 'Witsm'.</Issue>
    </Message>
    <Message Id="Lstudio" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Lstudio' in namespace name 'PDS.WITSMLstudio.Data.Logs'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="PDS.WITSMLstudio.Data.MudLogs">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'PDS.WITSMLstudio.Data.MudLogs' with another namespace.</Issue>
    </Message>
    <Message Id="PDS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'PDS' in namespace name 'PDS.WITSMLstudio.Data.MudLogs' by changing it to 'Pds'.</Issue>
    </Message>
    <Message Id="WITSM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'WITSM' in namespace name 'PDS.WITSMLstudio.Data.MudLogs' by changing it to 'Witsm'.</Issue>
    </Message>
    <Message Id="Lstudio" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Lstudio' in namespace name 'PDS.WITSMLstudio.Data.MudLogs'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="PDS.WITSMLstudio.Data.Trajectories">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'PDS.WITSMLstudio.Data.Trajectories' with another namespace.</Issue>
    </Message>
    <Message Id="PDS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'PDS' in namespace name 'PDS.WITSMLstudio.Data.Trajectories' by changing it to 'Pds'.</Issue>
    </Message>
    <Message Id="WITSM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'WITSM' in namespace name 'PDS.WITSMLstudio.Data.Trajectories' by changing it to 'Witsm'.</Issue>
    </Message>
    <Message Id="Lstudio" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Lstudio' in namespace name 'PDS.WITSMLstudio.Data.Trajectories'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="PDS.WITSMLstudio.Linq">
   <Messages>
    <Message Id="PDS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'PDS' in namespace name 'PDS.WITSMLstudio.Linq' by changing it to 'Pds'.</Issue>
    </Message>
    <Message Id="WITSM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'WITSM' in namespace name 'PDS.WITSMLstudio.Linq' by changing it to 'Witsm'.</Issue>
    </Message>
    <Message Id="Lstudio" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Lstudio' in namespace name 'PDS.WITSMLstudio.Linq'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="PDS.WITSMLstudio.Query">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'PDS.WITSMLstudio.Query' with another namespace.</Issue>
    </Message>
    <Message Id="PDS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'PDS' in namespace name 'PDS.WITSMLstudio.Query' by changing it to 'Pds'.</Issue>
    </Message>
    <Message Id="WITSM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'WITSM' in namespace name 'PDS.WITSMLstudio.Query' by changing it to 'Witsm'.</Issue>
    </Message>
    <Message Id="Lstudio" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Lstudio' in namespace name 'PDS.WITSMLstudio.Query'.</Issue>
    </Message>
   </Messages>
  </Namespace>
 </Namespaces>
 <Targets>
  <Target Name="C:\Users\rarteaga\Source\Repos\witsml\src\Core\bin\Release\PDS.WITSMLstudio.Core.dll">
   <Modules>
    <Module Name="pds.witsmlstudio.core.dll">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Sign 'PDS.WITSMLstudio.Core.dll' with a strong name key.</Issue>
      </Message>
      <Message Id="PDS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="85" Level="Error">Correct the casing of 'PDS' in assembly name 'PDS.WITSMLstudio.Core.dll' by changing it to 'Pds'.</Issue>
      </Message>
      <Message Id="WITSM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="85" Level="Error">Correct the casing of 'WITSM' in assembly name 'PDS.WITSMLstudio.Core.dll' by changing it to 'Witsm'.</Issue>
      </Message>
      <Message Id="Lstudio" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Lstudio' in assembly name 'PDS.WITSMLstudio.Core.dll'.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'PDS.WITSMLstudio.Core.dll' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Warning">Because assembly 'PDS.WITSMLstudio.Core.dll' contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="PDS.WITSMLstudio">
       <Types>
        <Type Name="CompressionMethods" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OnlyFlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1717" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If the name 'CompressionMethods' is plural, change it to its singular form.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Gzip" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Gzip" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Gzip' in member name 'CompressionMethods.Gzip' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CompressionUtil" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Util" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Util' in type name 'CompressionUtil'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ErrorCodes" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="EnumStorageShouldBeInt32" Category="Microsoft.Design" CheckId="CA1028" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Name="NotInt32" Certainty="60" Level="Warning">If possible, make the underlying type of 'ErrorCodes' System.Int32 instead of 'Short'.</Issue>
          </Message>
          <Message TypeName="OnlyFlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1717" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If the name 'ErrorCodes' is plural, change it to its singular form.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ApiVersionNotMatch" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Api" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Api' in member name 'ErrorCodes.ApiVersionNotMatch' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ApiVersionNotSupported" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Api" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Api' in member name 'ErrorCodes.ApiVersionNotSupported' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CapabilitiesInNonConforming" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="NonConforming" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'NonConforming' in member name 'ErrorCodes.CapabilitiesInNonConforming' exists as a discrete term. If your usage is intended to be single word, case it as 'Nonconforming' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ChildUidNotUnique" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Uid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Uid' in member name 'ErrorCodes.ChildUidNotUnique' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CompressedInputNonConforming" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="NonConforming" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'NonConforming' in member name 'ErrorCodes.CompressedInputNonConforming' exists as a discrete term. If your usage is intended to be single word, case it as 'Nonconforming' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DataObjectTypesDontMatch" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dont" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Replace the term 'Dont' in member name 'ErrorCodes.DataObjectTypesDontMatch' with the preferred alternate 'DoNot'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DataObjectUidAlreadyExists" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Uid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Uid' in member name 'ErrorCodes.DataObjectUidAlreadyExists' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DataObjectUidMissing" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Uid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Uid' in member name 'ErrorCodes.DataObjectUidMissing' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EmptyElementNonConforming" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="NonConforming" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'NonConforming' in member name 'ErrorCodes.EmptyElementNonConforming' exists as a discrete term. If your usage is intended to be single word, case it as 'Nonconforming' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EmptyNonRecurringElementSpecified" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="NonRecurring" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'NonRecurring' in member name 'ErrorCodes.EmptyNonRecurringElementSpecified' exists as a discrete term. If your usage is intended to be single word, case it as 'Nonrecurring' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EmptyUidSpecified" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Uid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Uid' in member name 'ErrorCodes.EmptyUidSpecified' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EmptyUomSpecified" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Uom" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Uom' in member name 'ErrorCodes.EmptyUomSpecified' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IncorrectCaseParentUid" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Uid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Uid' in member name 'ErrorCodes.IncorrectCaseParentUid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IndexDataUomNotSame" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Uom" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Uom' in member name 'ErrorCodes.IndexDataUomNotSame' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InputTemplateNonConforming" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="NonConforming" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'NonConforming' in member name 'ErrorCodes.InputTemplateNonConforming' exists as a discrete term. If your usage is intended to be single word, case it as 'Nonconforming' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MissingDefaultWitsmlNamespace" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Witsml" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Witsml' in member name 'ErrorCodes.MissingDefaultWitsmlNamespace' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MissingElementUidForAdd" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Uid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Uid' in member name 'ErrorCodes.MissingElementUidForAdd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MissingElementUidForDelete" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Uid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Uid' in member name 'ErrorCodes.MissingElementUidForDelete' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MissingElementUidForUpdate" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Uid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Uid' in member name 'ErrorCodes.MissingElementUidForUpdate' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MixedStructuralRangeIndices" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Indices" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Replace the term 'Indices' in member name 'ErrorCodes.MixedStructuralRangeIndices' with the preferred alternate 'Indexes'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ParialSuccess" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Parial" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Parial' in member name 'ErrorCodes.ParialSuccess' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#QueryTemplateNonConforming" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="NonConforming" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'NonConforming' in member name 'ErrorCodes.QueryTemplateNonConforming' exists as a discrete term. If your usage is intended to be single word, case it as 'Nonconforming' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateTemplateNonConforming" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="NonConforming" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'NonConforming' in member name 'ErrorCodes.UpdateTemplateNonConforming' exists as a discrete term. If your usage is intended to be single word, case it as 'Nonconforming' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="EtpContentTypes" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Etp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Etp' in type name 'EtpContentTypes'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Eml210" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Eml" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Eml' in member name 'EtpContentTypes.Eml210' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Prodml200" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Prodml" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Prodml' in member name 'EtpContentTypes.Prodml200' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Resqml200" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Resqml" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Resqml' in member name 'EtpContentTypes.Resqml200' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Resqml201" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Resqml" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Resqml' in member name 'EtpContentTypes.Resqml201' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Resqml210" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Resqml" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Resqml' in member name 'EtpContentTypes.Resqml210' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Witsml131" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Witsml" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Witsml' in member name 'EtpContentTypes.Witsml131' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Witsml141" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Witsml" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Witsml' in member name 'EtpContentTypes.Witsml141' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Witsml200" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Witsml" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Witsml' in member name 'EtpContentTypes.Witsml200' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="EtpUris" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Etp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Etp' in type name 'EtpUris'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#AreSame(Energistics.Etp.Common.Datatypes.EtpUri,Energistics.Etp.Common.Datatypes.EtpUri)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="u" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="EtpUris.cs" Line="757">In method 'EtpUris.AreSame(EtpUri, EtpUri)', consider providing a more meaningful name than parameter name 'u'.</Issue>
            </Message>
            <Message Id="v" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="EtpUris.cs" Line="757">In method 'EtpUris.AreSame(EtpUri, EtpUri)', consider providing a more meaningful name than parameter name 'v'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Eml210" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Eml" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Eml' in member name 'EtpUris.Eml210' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetLeftPart(Energistics.Etp.Common.Datatypes.EtpUri)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.IndexOf(System.String,System.StringComparison)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="EtpUris.cs" Line="115">'EtpUris.GetLeftPart(EtpUri)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'String.IndexOf(String, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetRelatedHierarchyUris(Energistics.Etp.Common.Datatypes.EtpUri)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="EtpUris.cs" Line="467">Change 'List(Of EtpUri)' in 'EtpUris.GetRelatedHierarchyUris(EtpUri)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="System.Linq.Enumerable.ToDictionary&lt;System.Linq.IGrouping`2&lt;System.String,System.String&gt;,System.String,System.String&gt;(System.Collections.Generic.IEnumerable`1&lt;System.Linq.IGrouping`2&lt;System.String,System.String&gt;&gt;,System.Func`2&lt;System.Linq.IGrouping`2&lt;System.String,System.String&gt;,System.String&gt;,System.Func`2&lt;System.Linq.IGrouping`2&lt;System.String,System.String&gt;,System.String&gt;,System.Collections.Generic.IEqualityComparer`1&lt;System.String&gt;)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="StringComparer" Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="EtpUris.cs" Line="477">'EtpUris.GetRelatedHierarchyUris(EtpUri)' passes 'StringComparer.InvariantCultureIgnoreCase' as the 'StringComparer' parameter to 'Enumerable.ToDictionary(Of IGrouping(Of String, String), String, String)(IEnumerable(Of IGrouping(Of String, String)), Func(Of IGrouping(Of String, String), String), Func(Of IGrouping(Of String, String), String), IEqualityComparer(Of String))'. To perform a non-linguistic comparison, specify 'StringComparer.Ordinal' or 'StringComparer.OrdinalIgnoreCase' instead.</Issue>
            </Message>
            <Message Id="System.Linq.Enumerable.ToLookup&lt;Energistics.Etp.Common.Datatypes.EtpUri+Segment,System.String,System.String&gt;(System.Collections.Generic.IEnumerable`1&lt;Energistics.Etp.Common.Datatypes.EtpUri+Segment&gt;,System.Func`2&lt;Energistics.Etp.Common.Datatypes.EtpUri+Segment,System.String&gt;,System.Func`2&lt;Energistics.Etp.Common.Datatypes.EtpUri+Segment,System.String&gt;,System.Collections.Generic.IEqualityComparer`1&lt;System.String&gt;)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="StringComparer" Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="EtpUris.cs" Line="477">'EtpUris.GetRelatedHierarchyUris(EtpUri)' passes 'StringComparer.InvariantCultureIgnoreCase' as the 'StringComparer' parameter to 'Enumerable.ToLookup(Of EtpUri.Segment, String, String)(IEnumerable(Of EtpUri.Segment), Func(Of EtpUri.Segment, String), Func(Of EtpUri.Segment, String), IEqualityComparer(Of String))'. To perform a non-linguistic comparison, specify 'StringComparer.Ordinal' or 'StringComparer.OrdinalIgnoreCase' instead.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetResolvedHierarchyUri(Energistics.Etp.Common.Datatypes.EtpUri,Energistics.Etp.Common.Datatypes.EtpUri)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Linq.Enumerable.ToDictionary&lt;System.Linq.IGrouping`2&lt;System.String,System.String&gt;,System.String,System.String&gt;(System.Collections.Generic.IEnumerable`1&lt;System.Linq.IGrouping`2&lt;System.String,System.String&gt;&gt;,System.Func`2&lt;System.Linq.IGrouping`2&lt;System.String,System.String&gt;,System.String&gt;,System.Func`2&lt;System.Linq.IGrouping`2&lt;System.String,System.String&gt;,System.String&gt;,System.Collections.Generic.IEqualityComparer`1&lt;System.String&gt;)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="StringComparer" Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="EtpUris.cs" Line="661">'EtpUris.GetResolvedHierarchyUri(EtpUri, EtpUri)' passes 'StringComparer.InvariantCultureIgnoreCase' as the 'StringComparer' parameter to 'Enumerable.ToDictionary(Of IGrouping(Of String, String), String, String)(IEnumerable(Of IGrouping(Of String, String)), Func(Of IGrouping(Of String, String), String), Func(Of IGrouping(Of String, String), String), IEqualityComparer(Of String))'. To perform a non-linguistic comparison, specify 'StringComparer.Ordinal' or 'StringComparer.OrdinalIgnoreCase' instead.</Issue>
            </Message>
            <Message Id="System.Linq.Enumerable.ToLookup&lt;Energistics.Etp.Common.Datatypes.EtpUri+Segment,System.String,System.String&gt;(System.Collections.Generic.IEnumerable`1&lt;Energistics.Etp.Common.Datatypes.EtpUri+Segment&gt;,System.Func`2&lt;Energistics.Etp.Common.Datatypes.EtpUri+Segment,System.String&gt;,System.Func`2&lt;Energistics.Etp.Common.Datatypes.EtpUri+Segment,System.String&gt;,System.Collections.Generic.IEqualityComparer`1&lt;System.String&gt;)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="StringComparer" Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="EtpUris.cs" Line="661">'EtpUris.GetResolvedHierarchyUri(EtpUri, EtpUri)' passes 'StringComparer.InvariantCultureIgnoreCase' as the 'StringComparer' parameter to 'Enumerable.ToLookup(Of EtpUri.Segment, String, String)(IEnumerable(Of EtpUri.Segment), Func(Of EtpUri.Segment, String), Func(Of EtpUri.Segment, String), IEqualityComparer(Of String))'. To perform a non-linguistic comparison, specify 'StringComparer.Ordinal' or 'StringComparer.OrdinalIgnoreCase' instead.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUri(Energistics.DataAccess.IDataObject)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="EtpUris.cs" Line="219">In externally visible method 'EtpUris.GetUri(IDataObject)', validate parameter 'entity' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUri(Energistics.DataAccess.IWellboreObject)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="EtpUris.cs" Line="245">In externally visible method 'EtpUris.GetUri(IWellboreObject)', validate parameter 'entity' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUri(Energistics.DataAccess.IWellObject)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="EtpUris.cs" Line="232">In externally visible method 'EtpUris.GetUri(IWellObject)', validate parameter 'entity' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUri(Energistics.DataAccess.PRODML200.AbstractObject)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="EtpUris.cs" Line="290">In externally visible method 'EtpUris.GetUri(AbstractObject)', validate parameter 'entity' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUri(Energistics.DataAccess.RESQML210.AbstractObject)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="EtpUris.cs" Line="301">In externally visible method 'EtpUris.GetUri(AbstractObject)', validate parameter 'entity' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUri(Energistics.DataAccess.WITSML131.ComponentSchemas.LogCurveInfo,Energistics.DataAccess.WITSML131.Log)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="EtpUris.cs" Line="327">Consider changing the type of parameter 'log' in 'EtpUris.GetUri(LogCurveInfo, Log)' from 'Log' to its base type 'IWellboreObject'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="EtpUris.cs" Line="327">In externally visible method 'EtpUris.GetUri(LogCurveInfo, Log)', validate parameter 'entity' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUri(Energistics.DataAccess.WITSML141.ComponentSchemas.LogCurveInfo,Energistics.DataAccess.WITSML141.Log)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="EtpUris.cs" Line="339">Consider changing the type of parameter 'log' in 'EtpUris.GetUri(LogCurveInfo, Log)' from 'Log' to its base type 'IWellboreObject'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="EtpUris.cs" Line="339">In externally visible method 'EtpUris.GetUri(LogCurveInfo, Log)', validate parameter 'entity' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUri(Energistics.DataAccess.WITSML200.AbstractObject)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="EtpUris.cs" Line="279">In externally visible method 'EtpUris.GetUri(AbstractObject)', validate parameter 'entity' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUri(Energistics.DataAccess.WITSML200.AbstractObject,Energistics.Etp.Common.Datatypes.EtpUri)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="EtpUris.cs" Line="268">In externally visible method 'EtpUris.GetUri(AbstractObject, EtpUri)', validate parameter 'entity' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUri(Energistics.DataAccess.WITSML200.Channel,Energistics.DataAccess.WITSML200.ChannelSet)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="EtpUris.cs" Line="363">Consider changing the type of parameter 'channelSet' in 'EtpUris.GetUri(Channel, ChannelSet)' from 'ChannelSet' to its base type 'AbstractObject'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
             <Issue Certainty="50" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="EtpUris.cs" Line="363">Consider changing the type of parameter 'entity' in 'EtpUris.GetUri(Channel, ChannelSet)' from 'Channel' to its base type 'AbstractObject'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="EtpUris.cs" Line="363">In externally visible method 'EtpUris.GetUri(Channel, ChannelSet)', validate parameter 'entity' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUri(Energistics.DataAccess.WITSML200.Channel,Energistics.DataAccess.WITSML200.Log,Energistics.DataAccess.WITSML200.ChannelSet)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="EtpUris.cs" Line="376">Consider changing the type of parameter 'entity' in 'EtpUris.GetUri(Channel, Log, ChannelSet)' from 'Channel' to its base type 'AbstractObject'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="EtpUris.cs" Line="376">In externally visible method 'EtpUris.GetUri(Channel, Log, ChannelSet)', validate parameter 'entity' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUri(Energistics.DataAccess.WITSML200.ChannelSet,Energistics.DataAccess.WITSML200.Log)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="EtpUris.cs" Line="351">Consider changing the type of parameter 'entity' in 'EtpUris.GetUri(ChannelSet, Log)' from 'ChannelSet' to its base type 'AbstractObject'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
             <Issue Certainty="50" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="EtpUris.cs" Line="351">Consider changing the type of parameter 'log' in 'EtpUris.GetUri(ChannelSet, Log)' from 'Log' to its base type 'AbstractObject'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="EtpUris.cs" Line="351">In externally visible method 'EtpUris.GetUri(ChannelSet, Log)', validate parameter 'entity' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUri(Energistics.DataAccess.WITSML200.ComponentSchemas.ChannelIndex,Energistics.DataAccess.WITSML200.Channel)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="EtpUris.cs" Line="388">Consider changing the type of parameter 'channel' in 'EtpUris.GetUri(ChannelIndex, Channel)' from 'Channel' to its base type 'AbstractObject'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="EtpUris.cs" Line="388">In externally visible method 'EtpUris.GetUri(ChannelIndex, Channel)', validate parameter 'entity' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUri(Energistics.DataAccess.WITSML200.ComponentSchemas.ChannelIndex,Energistics.DataAccess.WITSML200.ChannelSet)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="EtpUris.cs" Line="400">Consider changing the type of parameter 'channelSet' in 'EtpUris.GetUri(ChannelIndex, ChannelSet)' from 'ChannelSet' to its base type 'AbstractObject'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="EtpUris.cs" Line="400">In externally visible method 'EtpUris.GetUri(ChannelIndex, ChannelSet)', validate parameter 'entity' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUri(Energistics.DataAccess.WITSML200.ComponentSchemas.ChannelIndex,Energistics.DataAccess.WITSML200.Log,Energistics.DataAccess.WITSML200.ChannelSet)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="EtpUris.cs" Line="413">In externally visible method 'EtpUris.GetUri(ChannelIndex, Log, ChannelSet)', validate parameter 'entity' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUri(Energistics.DataAccess.WITSML200.ComponentSchemas.DataObjectReference)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="EtpUris.cs" Line="312">In externally visible method 'EtpUris.GetUri(DataObjectReference)', validate parameter 'reference' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUriFamily(Energistics.Etp.Common.Datatypes.EtpUri)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="EtpUris.cs" Line="637">Because the behavior of 'String.Format(String, Object, Object, Object)' could vary based on the current user's locale settings, replace this call in 'EtpUris.GetUriFamily(EtpUri)' with a call to 'String.Format(IFormatProvider, String, ParamArray Object())'. If the result of 'String.Format(IFormatProvider, String, ParamArray Object())' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUriFamily(System.Type)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.EndsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="EtpUris.cs" Line="151">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'EtpUris.GetUriFamily(Type)' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsRootUri(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="EtpUris.cs" Line="127">Change the type of parameter 'uri' of method 'EtpUris.IsRootUri(String)' from string to System.Uri, or provide an overload of 'EtpUris.IsRootUri(String)', that allows 'uri' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Prodml200" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Prodml" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Prodml' in member name 'EtpUris.Prodml200' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Resqml210" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Resqml" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Resqml' in member name 'EtpUris.Resqml210' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TryGetObjectTypePrefix(Energistics.Etp.Common.Datatypes.EtpUri,System.String,System.Boolean&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="2#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="EtpUris.cs" Line="856">Consider a design that does not require that 'success' be an out parameter.</Issue>
            </Message>
            <Message Id="objec" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="EtpUris.cs" Line="856">In method 'EtpUris.TryGetObjectTypePrefix(EtpUri, String, ByRef Boolean)', correct the spelling of 'objec' in parameter name 'objecType' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TryGetObjectTypeSegment(Energistics.Etp.Common.Datatypes.EtpUri,System.String,System.Boolean&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="2#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="EtpUris.cs" Line="797">Consider a design that does not require that 'success' be an out parameter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TryReplaceObjectTypeSegment(Energistics.Etp.Common.Datatypes.EtpUri,Energistics.Etp.Common.Datatypes.EtpUri,System.String,System.Boolean&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="3#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="EtpUris.cs" Line="893">Consider a design that does not require that 'success' be an out parameter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TryReplaceObjectTypeSegment(Energistics.Etp.Common.Datatypes.EtpUri,Energistics.Etp.Common.Datatypes.EtpUri+Segment,System.Boolean&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="2#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="EtpUris.cs" Line="823">Consider a design that does not require that 'success' be an out parameter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Witsml131" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Witsml" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Witsml' in member name 'EtpUris.Witsml131' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Witsml141" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Witsml" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Witsml' in member name 'EtpUris.Witsml141' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Witsml200" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Witsml" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Witsml' in member name 'EtpUris.Witsml200' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Export131Attribute" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Warning">Seal 'Export131Attribute', if possible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Export141Attribute" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Warning">Seal 'Export141Attribute', if possible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Export200Attribute" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Warning">Seal 'Export200Attribute', if possible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Export210Attribute" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Warning">Seal 'Export210Attribute', if possible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ExportTypeAttribute" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Warning">Seal 'ExportTypeAttribute', if possible.</Issue>
          </Message>
          <Message TypeName="DefineAccessorsForAttributeArguments" Category="Microsoft.Design" CheckId="CA1019" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="Error">Add a public read-only property accessor for positional argument 'contractNameType' of Attribute 'ExportTypeAttribute'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Type)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="ExportType.cs" Line="35">In externally visible method 'ExportTypeAttribute.New(Type)', validate parameter 'contractNameType' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.Type,System.Type)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="ExportType.cs" Line="44">In externally visible method 'ExportTypeAttribute.New(Type, Type)', validate parameter 'contractNameType' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Extensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AsList`1(!!0)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Extensions.cs" Line="170">Change 'List(Of TObject)' in 'Extensions.AsList(Of TObject)(TObject)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CorrectNonConformingErrorCodes(PDS.WITSMLstudio.ErrorCodes,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="NonConforming" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Extensions.cs" Line="326">The compound word 'NonConforming' in member name 'Extensions.CorrectNonConformingErrorCodes(ErrorCodes, Boolean)' exists as a discrete term. If your usage is intended to be single word, case it as 'Nonconforming' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetEndIndex(Energistics.DataAccess.IWellboreObject,System.Nullable`1&lt;System.TimeSpan&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Extensions.cs" Line="461">'Extensions.GetEndIndex(IWellboreObject, TimeSpan?)' has a cyclomatic complexity of 43. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Extensions.cs" Line="461">Replace method 'Extensions.GetEndIndex(IWellboreObject, TimeSpan?)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMissingElementUidErrorCode(PDS.WITSMLstudio.Functions)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Uid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Extensions.cs" Line="339">Correct the spelling of 'Uid' in member name 'Extensions.GetMissingElementUidErrorCode(Functions)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMissingUomValueErrorCode(PDS.WITSMLstudio.Functions)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Uom" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Extensions.cs" Line="353">Correct the spelling of 'Uom' in member name 'Extensions.GetMissingUomValueErrorCode(Functions)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetNonConformingErrorCode(PDS.WITSMLstudio.Functions)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="NonConforming" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Extensions.cs" Line="311">The compound word 'NonConforming' in member name 'Extensions.GetNonConformingErrorCode(Functions)' exists as a discrete term. If your usage is intended to be single word, case it as 'Nonconforming' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetStartIndex(Energistics.DataAccess.IWellboreObject,System.Nullable`1&lt;System.TimeSpan&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Extensions.cs" Line="397">'Extensions.GetStartIndex(IWellboreObject, TimeSpan?)' has a cyclomatic complexity of 43. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Extensions.cs" Line="397">Replace method 'Extensions.GetStartIndex(IWellboreObject, TimeSpan?)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IndexFromScale(System.Int64,System.Int32,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Extensions.cs" Line="217">Replace method 'Extensions.IndexFromScale(Long, Integer, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IndexFromScale(System.Nullable`1&lt;System.Int64&gt;,System.Int32,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Extensions.cs" Line="205">Replace method 'Extensions.IndexFromScale(Long?, Integer, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IndexToScale(System.Double,System.Int32,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Extensions.cs" Line="243">Replace method 'Extensions.IndexToScale(Double, Integer, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IndexToScale(System.Nullable`1&lt;System.Double&gt;,System.Int32,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Extensions.cs" Line="231">Replace method 'Extensions.IndexToScale(Double?, Integer, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NewUid`1(!!0)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Uid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Extensions.cs" Line="49">Correct the spelling of 'Uid' in member name 'Extensions.NewUid(Of T)(T)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NewUuid`1(!!0)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Uuid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Extensions.cs" Line="62">Correct the spelling of 'Uuid' in member name 'Extensions.NewUuid(Of T)(T)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WithUserAgent(System.Web.Services.Protocols.SoapHttpClientProtocol,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Extensions.cs" Line="109">Replace method 'Extensions.WithUserAgent(SoapHttpClientProtocol, String)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Functions" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OnlyFlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1717" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If the name 'Functions' is plural, change it to its singular form.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#GetBaseMsg" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Msg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Msg' in member name 'Functions.GetBaseMsg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ObjectFamilies" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Eml" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Eml" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Eml' in member name 'ObjectFamilies.Eml' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Prodml" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Prodml" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Prodml' in member name 'ObjectFamilies.Prodml' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Resqml" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Resqml" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Resqml' in member name 'ObjectFamilies.Resqml' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Witsml" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Witsml" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Witsml' in member name 'ObjectFamilies.Witsml' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ObjectName" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Warning">'ObjectName' should override Equals.</Issue>
           <Issue Name="op_Equality" Certainty="75" Level="Warning">'ObjectName' should override the equality (==) and inequality (!=) operators.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="ObjectName.cs" Line="46">In externally visible method 'ObjectName.New(String, String, String)', validate parameter 'family' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ObjectNames" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BhaRun131" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Bha" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Bha' in member name 'ObjectNames.BhaRun131' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BhaRun141" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Bha" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Bha' in member name 'ObjectNames.BhaRun141' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BhaRun200" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Bha" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Bha' in member name 'ObjectNames.BhaRun200' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ConvCore131" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Conv" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Conv' in member name 'ObjectNames.ConvCore131' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ConvCore141" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Conv" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Conv' in member name 'ObjectNames.ConvCore141' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DownholeComponent141" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Downhole" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Downhole' in member name 'ObjectNames.DownholeComponent141' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DownholeComponent200" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Downhole" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Downhole' in member name 'ObjectNames.DownholeComponent200' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StimJob141" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Stim" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Stim' in member name 'ObjectNames.StimJob141' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StimJob200" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Stim" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Stim' in member name 'ObjectNames.StimJob200' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StimJobStage200" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Stim" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Stim' in member name 'ObjectNames.StimJobStage200' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WbGeometry131" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Wb" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Wb' in member name 'ObjectNames.WbGeometry131' by changing it to 'WB'.</Issue>
            </Message>
            <Message Id="Wb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Wb' in member name 'ObjectNames.WbGeometry131' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WbGeometry141" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Wb" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Wb' in member name 'ObjectNames.WbGeometry141' by changing it to 'WB'.</Issue>
            </Message>
            <Message Id="Wb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Wb' in member name 'ObjectNames.WbGeometry141' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ObjectTypes" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="ObjectTypes.cs" Line="154">Initialize all static fields in 'ObjectTypes' when those fields are declared and remove the explicit static constructor.</Issue>
            </Message>
            <Message Id="System.Linq.Enumerable.ToDictionary&lt;System.String,System.String&gt;(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.Func`2&lt;System.String,System.String&gt;,System.Collections.Generic.IEqualityComparer`1&lt;System.String&gt;)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="StringComparer" Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="ObjectTypes.cs" Line="186">'ObjectTypes.New()' passes 'StringComparer.InvariantCultureIgnoreCase' as the 'StringComparer' parameter to 'Enumerable.ToDictionary(Of String, String)(IEnumerable(Of String), Func(Of String, String), IEqualityComparer(Of String))'. To perform a non-linguistic comparison, specify 'StringComparer.Ordinal' or 'StringComparer.OrdinalIgnoreCase' instead.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BhaRun" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Bha" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Bha' in member name 'ObjectTypes.BhaRun' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ChildObjectReferences" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'ObjectTypes.ChildObjectReferences' or change the field to one that is an immutable reference type. If the reference type 'IDictionary(Of EtpContentType, String())' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ConvCore" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Conv" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Conv' in member name 'ObjectTypes.ConvCore' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DownholeComponent" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Downhole" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Downhole' in member name 'ObjectTypes.DownholeComponent' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetFamily(Energistics.DataAccess.IEnergisticsCollection)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="ObjectTypes.cs" Line="629">In externally visible method 'ObjectTypes.GetFamily(IEnergisticsCollection)', validate parameter 'pluralObject' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetFamily(System.Type)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="ObjectTypes.cs" Line="573">In externally visible method 'ObjectTypes.GetFamily(Type)', validate parameter 'type' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetObjectGroupType(System.Xml.Linq.XElement)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="ObjectTypes.cs" Line="503">Modify 'ObjectTypes.GetObjectGroupType(XElement)' to catch a more specific exception than 'Object' or rethrow the exception.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="ObjectTypes.cs" Line="501">In externally visible method 'ObjectTypes.GetObjectGroupType(XElement)', validate parameter 'element' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetObjectType(System.String,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="ObjectTypes.cs" Line="400">Because the behavior of 'String.Format(String, ParamArray Object())' could vary based on the current user's locale settings, replace this call in 'ObjectTypes.GetObjectType(String, String, String)' with a call to 'String.Format(IFormatProvider, String, ParamArray Object())'. If the result of 'String.Format(IFormatProvider, String, ParamArray Object())' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="ObjectTypes.cs" Line="378">In externally visible method 'ObjectTypes.GetObjectType(String, String, String)', validate parameter 'family' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetObjectType(System.Xml.Linq.XElement)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="ObjectTypes.cs" Line="339">Consider changing the type of parameter 'element' in 'ObjectTypes.GetObjectType(XElement)' from 'XElement' to its base type 'XContainer'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="ObjectTypes.cs" Line="344">Modify 'ObjectTypes.GetObjectType(XElement)' to catch a more specific exception than 'Object' or rethrow the exception.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="ObjectTypes.cs" Line="339">In externally visible method 'ObjectTypes.GetObjectType(XElement)', validate parameter 'element' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetObjectType`1()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="ObjectTypes.cs" Line="289">Consider a design where 'ObjectTypes.GetObjectType(Of T)()' doesn't require explicit type parameter 'T' in any call to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetObjectTypeFromGroup(System.Xml.Linq.XElement)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="ObjectTypes.cs" Line="486">Modify 'ObjectTypes.GetObjectTypeFromGroup(XElement)' to catch a more specific exception than 'Object' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSchemaType(System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="ObjectTypes.cs" Line="516">In member 'ObjectTypes.GetSchemaType(Object)', consider replacing the data type identifier 'Object' in parameter name 'dataObject' with a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetVersion(System.Type)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="ObjectTypes.cs" Line="559">Because the behavior of 'String.StartsWith(String)' could vary based on the current user's locale settings, replace this call in 'ObjectTypes.GetVersion(Type)' with a call to 'String.StartsWith(String, StringComparison)'. If the result of 'String.StartsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="ObjectTypes.cs" Line="559">Because the behavior of 'String.StartsWith(String)' could vary based on the current user's locale settings, replace this call in 'ObjectTypes.GetVersion(Type)' with a call to 'String.StartsWith(String, StringComparison)'. If the result of 'String.StartsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="ObjectTypes.cs" Line="556">In externally visible method 'ObjectTypes.GetVersion(Type)', validate parameter 'type' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetVersion(System.Xml.Linq.XElement)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="ObjectTypes.cs" Line="543">Modify 'ObjectTypes.GetVersion(XElement)' to catch a more specific exception than 'Object' or rethrow the exception.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="ObjectTypes.cs" Line="541">In externally visible method 'ObjectTypes.GetVersion(XElement)', validate parameter 'element' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsEnergisticsObjectType(System.Type)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Energistics" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="ObjectTypes.cs" Line="215">Correct the spelling of 'Energistics' in member name 'ObjectTypes.IsEnergisticsObjectType(Type)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="ObjectTypes.cs" Line="215">In externally visible method 'ObjectTypes.IsEnergisticsObjectType(Type)', validate parameter 'type' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ObjectTypeMap" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'ObjectTypes.ObjectTypeMap' or change the field to one that is an immutable reference type. If the reference type 'IDictionary(Of String, String)' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PluralToSingle(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="ObjectTypes.cs" Line="692">In member 'ObjectTypes.PluralToSingle(String)', consider replacing the data type identifier 'String' in parameter name 'pluralString' with a more generic term, such as 'value'.</Issue>
            </Message>
            <Message Id="System.String.EndsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="ObjectTypes.cs" Line="692">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'ObjectTypes.PluralToSingle(String)' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="ObjectTypes.cs" Line="692">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'ObjectTypes.PluralToSingle(String)' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="ObjectTypes.cs" Line="692">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'ObjectTypes.PluralToSingle(String)' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="ObjectTypes.cs" Line="692">In externally visible method 'ObjectTypes.PluralToSingle(String)', validate parameter 'pluralString' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SingleToPlural(System.String,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="ObjectTypes.cs" Line="673">Replace method 'ObjectTypes.SingleToPlural(String, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Witsml" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="ObjectTypes.cs" Line="673">In method 'ObjectTypes.SingleToPlural(String, Boolean)', correct the spelling of 'Witsml' in parameter name 'isWitsmlPlural' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="ObjectTypes.cs" Line="673">In member 'ObjectTypes.SingleToPlural(String, Boolean)', consider replacing the data type identifier 'String' in parameter name 'singleString' with a more generic term, such as 'value'.</Issue>
            </Message>
            <Message Id="System.String.EndsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="ObjectTypes.cs" Line="676">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'ObjectTypes.SingleToPlural(String, Boolean)' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="ObjectTypes.cs" Line="679">Because the behavior of 'String.EndsWith(String)' could vary based on the current user's locale settings, replace this call in 'ObjectTypes.SingleToPlural(String, Boolean)' with a call to 'String.EndsWith(String, StringComparison)'. If the result of 'String.EndsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="ObjectTypes.cs" Line="676">In externally visible method 'ObjectTypes.SingleToPlural(String, Boolean)', validate parameter 'singleString' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StimJob" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Stim" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Stim' in member name 'ObjectTypes.StimJob' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StimJobStage" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Stim" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Stim' in member name 'ObjectTypes.StimJobStage' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Uid" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Uid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Uid' in member name 'ObjectTypes.Uid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Uuid" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Uuid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Uuid' in member name 'ObjectTypes.Uuid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WbGeometry" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Wb" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Wb' in member name 'ObjectTypes.WbGeometry' by changing it to 'WB'.</Issue>
            </Message>
            <Message Id="Wb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Wb' in member name 'ObjectTypes.WbGeometry' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OptionsIn" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetValue(System.Collections.Generic.Dictionary`2&lt;System.String,System.String&gt;,PDS.WITSMLstudio.OptionsIn)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="OptionsIn.cs" Line="477">In externally visible method 'OptionsIn.GetValue(Dictionary(Of String, String), OptionsIn)', validate parameter 'options' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#op_Implicit(PDS.WITSMLstudio.OptionsIn):System.Collections.Generic.Dictionary`2&lt;System.String,System.String&gt;" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="OptionsIn.cs" Line="512">In externally visible method 'OptionsIn.Widening Operator CType(OptionsIn)', validate parameter 'option' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToString()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="OptionsIn.cs" Line="429">Because the behavior of 'String.Format(String, Object, Object)' could vary based on the current user's locale settings, replace this call in 'OptionsIn.ToString()' with a call to 'String.Format(IFormatProvider, String, ParamArray Object())'. If the result of 'String.Format(IFormatProvider, String, ParamArray Object())' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OptionsIn+CascadedDelete" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'OptionsIn.CascadedDelete'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#False" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'OptionsIn.CascadedDelete.False' or change the field to one that is an immutable reference type. If the reference type 'OptionsIn.CascadedDelete' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetValues()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'OptionsIn.CascadedDelete.GetValues()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#True" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'OptionsIn.CascadedDelete.True' or change the field to one that is an immutable reference type. If the reference type 'OptionsIn.CascadedDelete' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OptionsIn+CompressionMethod" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'OptionsIn.CompressionMethod'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#GetValues()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'OptionsIn.CompressionMethod.GetValues()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Gzip" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'OptionsIn.CompressionMethod.Gzip' or change the field to one that is an immutable reference type. If the reference type 'OptionsIn.CompressionMethod' is, in fact, immutable, exclude this message.</Issue>
            </Message>
            <Message Id="Gzip" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Gzip' in member name 'OptionsIn.CompressionMethod.Gzip' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#None" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'OptionsIn.CompressionMethod.None' or change the field to one that is an immutable reference type. If the reference type 'OptionsIn.CompressionMethod' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OptionsIn+DataVersion" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'OptionsIn.DataVersion'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Version131" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'OptionsIn.DataVersion.Version131' or change the field to one that is an immutable reference type. If the reference type 'OptionsIn.DataVersion' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Version141" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'OptionsIn.DataVersion.Version141' or change the field to one that is an immutable reference type. If the reference type 'OptionsIn.DataVersion' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Version200" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'OptionsIn.DataVersion.Version200' or change the field to one that is an immutable reference type. If the reference type 'OptionsIn.DataVersion' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Version210" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'OptionsIn.DataVersion.Version210' or change the field to one that is an immutable reference type. If the reference type 'OptionsIn.DataVersion' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OptionsIn+IntervalRangeInclusion" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'OptionsIn.IntervalRangeInclusion'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#AnyPart" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'OptionsIn.IntervalRangeInclusion.AnyPart' or change the field to one that is an immutable reference type. If the reference type 'OptionsIn.IntervalRangeInclusion' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetValues()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'OptionsIn.IntervalRangeInclusion.GetValues()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MinimumPoint" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'OptionsIn.IntervalRangeInclusion.MinimumPoint' or change the field to one that is an immutable reference type. If the reference type 'OptionsIn.IntervalRangeInclusion' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WholeInterval" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'OptionsIn.IntervalRangeInclusion.WholeInterval' or change the field to one that is an immutable reference type. If the reference type 'OptionsIn.IntervalRangeInclusion' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OptionsIn+MaxReturnNodes" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'OptionsIn.MaxReturnNodes'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="OptionsIn.cs" Line="158">Because the behavior of 'Integer.ToString()' could vary based on the current user's locale settings, replace this call in 'OptionsIn.MaxReturnNodes.New(Integer)' with a call to 'Integer.ToString(IFormatProvider)'. If the result of 'Integer.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Eq(System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Eq" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="OptionsIn.cs" Line="172">Correct the casing of 'Eq' in member name 'OptionsIn.MaxReturnNodes.Eq(Integer)' by changing it to 'EQ'.</Issue>
            </Message>
            <Message Id="Eq" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="OptionsIn.cs" Line="172">Correct the spelling of 'Eq' in member name 'OptionsIn.MaxReturnNodes.Eq(Integer)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OptionsIn+RequestLatestValues" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'OptionsIn.RequestLatestValues'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="OptionsIn.cs" Line="300">Because the behavior of 'Integer.ToString()' could vary based on the current user's locale settings, replace this call in 'OptionsIn.RequestLatestValues.New(Integer)' with a call to 'Integer.ToString(IFormatProvider)'. If the result of 'Integer.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Eq(System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Eq" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="OptionsIn.cs" Line="314">Correct the casing of 'Eq' in member name 'OptionsIn.RequestLatestValues.Eq(Integer)' by changing it to 'EQ'.</Issue>
            </Message>
            <Message Id="Eq" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="OptionsIn.cs" Line="314">Correct the spelling of 'Eq' in member name 'OptionsIn.RequestLatestValues.Eq(Integer)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OptionsIn+RequestObjectSelectionCapability" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'OptionsIn.RequestObjectSelectionCapability'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#GetValues()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'OptionsIn.RequestObjectSelectionCapability.GetValues()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#None" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'OptionsIn.RequestObjectSelectionCapability.None' or change the field to one that is an immutable reference type. If the reference type 'OptionsIn.RequestObjectSelectionCapability' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#True" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'OptionsIn.RequestObjectSelectionCapability.True' or change the field to one that is an immutable reference type. If the reference type 'OptionsIn.RequestObjectSelectionCapability' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OptionsIn+RequestPrivateGroupOnly" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'OptionsIn.RequestPrivateGroupOnly'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#False" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'OptionsIn.RequestPrivateGroupOnly.False' or change the field to one that is an immutable reference type. If the reference type 'OptionsIn.RequestPrivateGroupOnly' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetValues()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'OptionsIn.RequestPrivateGroupOnly.GetValues()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#True" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'OptionsIn.RequestPrivateGroupOnly.True' or change the field to one that is an immutable reference type. If the reference type 'OptionsIn.RequestPrivateGroupOnly' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OptionsIn+ReturnElements" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'OptionsIn.ReturnElements'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#All" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'OptionsIn.ReturnElements.All' or change the field to one that is an immutable reference type. If the reference type 'OptionsIn.ReturnElements' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DataOnly" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'OptionsIn.ReturnElements.DataOnly' or change the field to one that is an immutable reference type. If the reference type 'OptionsIn.ReturnElements' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Eq(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Eq" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="OptionsIn.cs" Line="130">Correct the casing of 'Eq' in member name 'OptionsIn.ReturnElements.Eq(String)' by changing it to 'EQ'.</Issue>
            </Message>
            <Message Id="Eq" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="OptionsIn.cs" Line="130">Correct the spelling of 'Eq' in member name 'OptionsIn.ReturnElements.Eq(String)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetValues()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'OptionsIn.ReturnElements.GetValues()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HeaderOnly" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'OptionsIn.ReturnElements.HeaderOnly' or change the field to one that is an immutable reference type. If the reference type 'OptionsIn.ReturnElements' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IdOnly" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'OptionsIn.ReturnElements.IdOnly' or change the field to one that is an immutable reference type. If the reference type 'OptionsIn.ReturnElements' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LatestChangeOnly" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'OptionsIn.ReturnElements.LatestChangeOnly' or change the field to one that is an immutable reference type. If the reference type 'OptionsIn.ReturnElements' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Requested" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'OptionsIn.ReturnElements.Requested' or change the field to one that is an immutable reference type. If the reference type 'OptionsIn.ReturnElements' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StationLocationOnly" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'OptionsIn.ReturnElements.StationLocationOnly' or change the field to one that is an immutable reference type. If the reference type 'OptionsIn.ReturnElements' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Range" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ComputeRange(System.Double,System.Int64,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Range.cs" Line="234">Replace method 'Range.ComputeRange(Double, Long, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Contains(PDS.WITSMLstudio.Framework.Range`1&lt;System.Nullable`1&lt;System.Double&gt;&gt;,System.Double,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Range.cs" Line="217">Replace method 'Range.Contains(Range(Of Double?), Double, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Range.cs" Line="217">Consider a design where 'Range.Contains(Range(Of Double?), Double, Boolean)' doesn't nest generic type 'Range(Of Double?)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Empty" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError">Consider a design where 'Range.Empty' doesn't nest generic type 'Range(Of Double?)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EndsAfter(PDS.WITSMLstudio.Framework.Range`1&lt;System.Nullable`1&lt;System.Double&gt;&gt;,System.Double,System.Boolean,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Range.cs" Line="200">Replace method 'Range.EndsAfter(Range(Of Double?), Double, Boolean, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Range.cs" Line="200">Consider a design where 'Range.EndsAfter(Range(Of Double?), Double, Boolean, Boolean)' doesn't nest generic type 'Range(Of Double?)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EndsBefore(PDS.WITSMLstudio.Framework.Range`1&lt;System.Nullable`1&lt;System.DateTimeOffset&gt;&gt;,System.Nullable`1&lt;System.DateTimeOffset&gt;,System.Boolean,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Range.cs" Line="182">Replace method 'Range.EndsBefore(Range(Of DateTimeOffset?), DateTimeOffset?, Boolean, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Range.cs" Line="182">Consider a design where 'Range.EndsBefore(Range(Of DateTimeOffset?), DateTimeOffset?, Boolean, Boolean)' doesn't nest generic type 'Range(Of DateTimeOffset?)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EndsBefore(PDS.WITSMLstudio.Framework.Range`1&lt;System.Nullable`1&lt;System.Double&gt;&gt;,System.Double,System.Boolean,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Range.cs" Line="164">Replace method 'Range.EndsBefore(Range(Of Double?), Double, Boolean, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Range.cs" Line="164">Consider a design where 'Range.EndsBefore(Range(Of Double?), Double, Boolean, Boolean)' doesn't nest generic type 'Range(Of Double?)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMaxRangeEnd(System.Collections.Generic.List`1&lt;PDS.WITSMLstudio.Framework.Range`1&lt;System.Nullable`1&lt;System.Double&gt;&gt;&gt;,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Range.cs" Line="269">Change 'List(Of Range(Of Double?))' in 'Range.GetMaxRangeEnd(List(Of Range(Of Double?)), Boolean)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Range.cs" Line="269">Consider a design where 'Range.GetMaxRangeEnd(List(Of Range(Of Double?)), Boolean)' doesn't nest generic type 'List(Of Range(Of Double?))'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMinRangeStart(System.Collections.Generic.List`1&lt;PDS.WITSMLstudio.Framework.Range`1&lt;System.Nullable`1&lt;System.Double&gt;&gt;&gt;,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Range.cs" Line="246">Change 'List(Of Range(Of Double?))' in 'Range.GetMinRangeStart(List(Of Range(Of Double?)), Boolean)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Range.cs" Line="246">Consider a design where 'Range.GetMinRangeStart(List(Of Range(Of Double?)), Boolean)' doesn't nest generic type 'List(Of Range(Of Double?))'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetOptimizeRangeStart(System.Collections.Generic.List`1&lt;PDS.WITSMLstudio.Framework.Range`1&lt;System.Nullable`1&lt;System.Double&gt;&gt;&gt;,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Range.cs" Line="258">Change 'List(Of Range(Of Double?))' in 'Range.GetOptimizeRangeStart(List(Of Range(Of Double?)), Boolean)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Range.cs" Line="258">Consider a design where 'Range.GetOptimizeRangeStart(List(Of Range(Of Double?)), Boolean)' doesn't nest generic type 'List(Of Range(Of Double?))'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsClosed(PDS.WITSMLstudio.Framework.Range`1&lt;System.Nullable`1&lt;System.Double&gt;&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Range.cs" Line="316">Consider a design where 'Range.IsClosed(Range(Of Double?))' doesn't nest generic type 'Range(Of Double?)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsEmpty(PDS.WITSMLstudio.Framework.Range`1&lt;System.Nullable`1&lt;System.Double&gt;&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Range.cs" Line="336">Consider a design where 'Range.IsEmpty(Range(Of Double?))' doesn't nest generic type 'Range(Of Double?)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsOpen(PDS.WITSMLstudio.Framework.Range`1&lt;System.Nullable`1&lt;System.Double&gt;&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Range.cs" Line="326">Consider a design where 'Range.IsOpen(Range(Of Double?))' doesn't nest generic type 'Range(Of Double?)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OptimizeLatestValuesRange(PDS.WITSMLstudio.Framework.Range`1&lt;System.Nullable`1&lt;System.Double&gt;&gt;,System.Nullable`1&lt;System.Int32&gt;,System.Boolean,System.Boolean,System.Nullable`1&lt;System.Double&gt;,System.Nullable`1&lt;System.Double&gt;,System.Nullable`1&lt;System.Double&gt;,System.Int32,System.Int64)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Range.cs" Line="287">Consider a design where 'Range.OptimizeLatestValuesRange(Range(Of Double?), Integer?, Boolean, Boolean, Double?, Double?, Double?, Integer, Long)' doesn't nest generic type 'Range(Of Double?)'.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Range.cs" Line="287">Consider a design where 'Range.OptimizeLatestValuesRange(Range(Of Double?), Integer?, Boolean, Boolean, Double?, Double?, Double?, Integer, Long)' doesn't nest generic type 'Range(Of Double?)'.</Issue>
            </Message>
            <Message Id="isTimeIndex" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Range.cs" Line="287">Parameter 'isTimeIndex' of 'Range.OptimizeLatestValuesRange(Range(Of Double?), Integer?, Boolean, Boolean, Double?, Double?, Double?, Integer, Long)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Overlaps(PDS.WITSMLstudio.Framework.Range`1&lt;System.Nullable`1&lt;System.Double&gt;&gt;,PDS.WITSMLstudio.Framework.Range`1&lt;System.Nullable`1&lt;System.Double&gt;&gt;,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Range.cs" Line="348">Consider a design where 'Range.Overlaps(Range(Of Double?), Range(Of Double?), Boolean)' doesn't nest generic type 'Range(Of Double?)'.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Range.cs" Line="348">Consider a design where 'Range.Overlaps(Range(Of Double?), Range(Of Double?), Boolean)' doesn't nest generic type 'Range(Of Double?)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Overlaps(System.Nullable`1&lt;PDS.WITSMLstudio.Framework.Range`1&lt;System.Nullable`1&lt;System.DateTimeOffset&gt;&gt;&gt;,PDS.WITSMLstudio.Framework.Range`1&lt;System.Nullable`1&lt;System.DateTime&gt;&gt;,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Range.cs" Line="366">Consider a design where 'Range.Overlaps(Range(Of DateTimeOffset?)?, Range(Of Date?), Boolean)' doesn't nest generic type 'Range(Of Date?)'.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Range.cs" Line="366">Consider a design where 'Range.Overlaps(Range(Of DateTimeOffset?)?, Range(Of Date?), Boolean)' doesn't nest generic type 'Range(Of DateTimeOffset?)?'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Parse(System.Object,System.Object,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Range.cs" Line="45">Consider a design where 'Range.Parse(Object, Object, Boolean)' doesn't nest generic type 'Range(Of Double?)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Sort(PDS.WITSMLstudio.Framework.Range`1&lt;System.Nullable`1&lt;System.Double&gt;&gt;,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Range.cs" Line="88">Replace method 'Range.Sort(Range(Of Double?), Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Range.cs" Line="88">Consider a design where 'Range.Sort(Range(Of Double?), Boolean)' doesn't nest generic type 'Range(Of Double?)'.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Range.cs" Line="88">Consider a design where 'Range.Sort(Range(Of Double?), Boolean)' doesn't nest generic type 'Range(Of Double?)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StartsAfter(PDS.WITSMLstudio.Framework.Range`1&lt;System.Nullable`1&lt;System.DateTimeOffset&gt;&gt;,System.Nullable`1&lt;System.DateTimeOffset&gt;,System.Boolean,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Range.cs" Line="128">Replace method 'Range.StartsAfter(Range(Of DateTimeOffset?), DateTimeOffset?, Boolean, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Range.cs" Line="128">Consider a design where 'Range.StartsAfter(Range(Of DateTimeOffset?), DateTimeOffset?, Boolean, Boolean)' doesn't nest generic type 'Range(Of DateTimeOffset?)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StartsAfter(PDS.WITSMLstudio.Framework.Range`1&lt;System.Nullable`1&lt;System.Double&gt;&gt;,System.Double,System.Boolean,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Range.cs" Line="110">Replace method 'Range.StartsAfter(Range(Of Double?), Double, Boolean, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Range.cs" Line="110">Consider a design where 'Range.StartsAfter(Range(Of Double?), Double, Boolean, Boolean)' doesn't nest generic type 'Range(Of Double?)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StartsBefore(PDS.WITSMLstudio.Framework.Range`1&lt;System.Nullable`1&lt;System.Double&gt;&gt;,System.Double,System.Boolean,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Range.cs" Line="146">Replace method 'Range.StartsBefore(Range(Of Double?), Double, Boolean, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Range.cs" Line="146">Consider a design where 'Range.StartsBefore(Range(Of Double?), Double, Boolean, Boolean)' doesn't nest generic type 'Range(Of Double?)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToString(PDS.WITSMLstudio.Framework.Range`1&lt;System.Nullable`1&lt;System.Double&gt;&gt;,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Range.cs" Line="385">Consider a design where 'Range.ToString(Range(Of Double?), Boolean)' doesn't nest generic type 'Range(Of Double?)'.</Issue>
            </Message>
            <Message Id="System.Double.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Range.cs" Line="399">Because the behavior of 'Double.ToString()' could vary based on the current user's locale settings, replace this call in 'Range.ToString(Range(Of Double?), Boolean)' with a call to 'Double.ToString(IFormatProvider)'. If the result of 'Double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Range.cs" Line="400">Because the behavior of 'Double.ToString()' could vary based on the current user's locale settings, replace this call in 'Range.ToString(Range(Of Double?), Boolean)' with a call to 'Double.ToString(IFormatProvider)'. If the result of 'Double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Units" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetUnit(Energistics.DataAccess.ExtensibleEnum`1&lt;Energistics.DataAccess.WITSML200.ReferenceData.UnitOfMeasure&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="uom" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Units.cs" Line="54">In method 'Units.GetUnit(ExtensibleEnum(Of UnitOfMeasure))', correct the spelling of 'uom' in parameter name 'uom' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUnit(System.Nullable`1&lt;Energistics.DataAccess.ExtensibleEnum`1&lt;Energistics.DataAccess.WITSML200.ReferenceData.UnitOfMeasure&gt;&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Units.cs" Line="64">Consider a design where 'Units.GetUnit(ExtensibleEnum(Of UnitOfMeasure)?)' doesn't nest generic type 'ExtensibleEnum(Of UnitOfMeasure)?'.</Issue>
            </Message>
            <Message Id="uom" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Units.cs" Line="64">In method 'Units.GetUnit(ExtensibleEnum(Of UnitOfMeasure)?)', correct the spelling of 'uom' in parameter name 'uom' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUnit(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="uom" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Units.cs" Line="44">In method 'Units.GetUnit(String)', correct the spelling of 'uom' in parameter name 'uom' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUnitOfMeasure(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Units.cs" Line="76">Consider a design where 'Units.GetUnitOfMeasure(String)' doesn't nest generic type 'ExtensibleEnum(Of UnitOfMeasure)?'.</Issue>
            </Message>
            <Message Id="uom" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="Units.cs" Line="76">In method 'Units.GetUnitOfMeasure(String)', correct the spelling of 'uom' in parameter name 'uom' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="WitsmlException" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Witsml" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Witsml' in type name 'WitsmlException'.</Issue>
          </Message>
          <Message TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
           <Issue Name="MissingConstructor" Certainty="95" Level="Error">Add the following constructor to 'WitsmlException': protected WitsmlException(SerializationInfo, StreamingContext).</Issue>
           <Issue Name="MissingConstructor" Certainty="95" Level="Error">Add the following constructor to 'WitsmlException': public WitsmlException().</Issue>
           <Issue Name="MissingConstructor" Certainty="95" Level="Error">Add the following constructor to 'WitsmlException': public WitsmlException(String).</Issue>
           <Issue Name="MissingConstructor" Certainty="95" Level="Error">Add the following constructor to 'WitsmlException': public WitsmlException(String, Exception).</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="WitsmlParser" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Witsml" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Witsml' in type name 'WitsmlParser'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="WitsmlParser.cs" Line="36">Initialize all static fields in 'WitsmlParser' when those fields are declared and remove the explicit static constructor.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Parse(System.String,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="WitsmlParser.cs" Line="94">Replace method 'WitsmlParser.Parse(String, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Parse(System.Type,System.Xml.Linq.XElement,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="WitsmlParser.cs" Line="155">Replace method 'WitsmlParser.Parse(Type, XElement, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Parse`1(System.Xml.Linq.XElement,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="WitsmlParser.cs" Line="122">Replace method 'WitsmlParser.Parse(Of T)(XElement, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="WitsmlParser.cs" Line="127">In externally visible method 'WitsmlParser.Parse(Of T)(XElement, Boolean)', validate parameter 'element' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RemoveEmptyAttributes(System.Xml.Linq.XElement,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="WitsmlParser.cs" Line="210">Replace method 'WitsmlParser.RemoveEmptyAttributes(XElement, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="WitsmlParser.cs" Line="218">In externally visible method 'WitsmlParser.RemoveEmptyAttributes(XElement, Boolean)', validate parameter 'element' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RemoveEmptyElements(System.Xml.Linq.XElement,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="WitsmlParser.cs" Line="229">Consider changing the type of parameter 'element' in 'WitsmlParser.RemoveEmptyElements(XElement, Boolean)' from 'XElement' to its base type 'XContainer'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="WitsmlParser.cs" Line="229">Replace method 'WitsmlParser.RemoveEmptyElements(XElement, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="WitsmlParser.cs" Line="234">In externally visible method 'WitsmlParser.RemoveEmptyElements(XElement, Boolean)', validate parameter 'element' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RemoveNaNElements`1(System.Xml.Linq.XElement)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="WitsmlParser.cs" Line="247">Consider a design where 'WitsmlParser.RemoveNaNElements(Of T)(XElement)' doesn't require explicit type parameter 'T' in any call to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToXml(System.Object,System.Boolean,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="WitsmlParser.cs" Line="175">Replace method 'WitsmlParser.ToXml(Object, Boolean, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="WitsmlParser.cs" Line="175">In member 'WitsmlParser.ToXml(Object, Boolean, Boolean)', consider replacing the data type identifier 'obj' in parameter name 'obj' with a more generic term, such as 'value'.</Issue>
            </Message>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="WitsmlParser.cs" Line="188">Because the behavior of 'String.StartsWith(String)' could vary based on the current user's locale settings, replace this call in 'WitsmlParser.ToXml(Object, Boolean, Boolean)' with a call to 'String.StartsWith(String, StringComparison)'. If the result of 'String.StartsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Transform(Energistics.DataAccess.IEnergisticsCollection,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core" File="WitsmlParser.cs" Line="77">Modify 'WitsmlParser.Transform(IEnergisticsCollection, String)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="WitsmlParserContext" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Witsml" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Witsml' in type name 'WitsmlParserContext'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="WitsmlParserContext`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Witsml" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Witsml' in type name 'WitsmlParserContext(Of T)'.</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="PDS.WITSMLstudio.Adapters">
       <Types>
        <Type Name="AxisDefinition" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Object)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="AxisDefinition.cs" Line="71">'axisDefinition', a parameter, is cast to type 'AxisDefinition' multiple times in method 'AxisDefinition.New(Object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="AxisDefinition.cs" Line="76">'axisDefinition', a parameter, is cast to type 'AxisDefinition' multiple times in method 'AxisDefinition.New(Object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DoubleValues" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="SameType" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="AxisDefinition.cs" Line="125">The property name 'AxisDefinition.DoubleValues()' is confusing given the existence of method 'AxisDefinition.GetDoubleValues()'. Rename or remove one of these members.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsSupportedObject(System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="AxisDefinition.cs" Line="90">In member 'AxisDefinition.IsSupportedObject(Object)', consider replacing the data type identifier 'Object' in parameter name 'dataObject' with a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StringValues" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="SameType" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="AxisDefinition.cs" Line="130">The property name 'AxisDefinition.StringValues()' is confusing given the existence of method 'AxisDefinition.GetStringValues()'. Rename or remove one of these members.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Etp11Protocols" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Etp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Etp' in type name 'Etp11Protocols'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Etp12Protocols" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Etp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Etp' in type name 'Etp12Protocols'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="GeologyInterval" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Object)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="GeologyInterval.cs" Line="74">'geologyInterval', a parameter, is cast to type 'GeologyInterval' multiple times in method 'GeologyInterval.New(Object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="GeologyInterval.cs" Line="79">'geologyInterval', a parameter, is cast to type 'GeologyInterval' multiple times in method 'GeologyInterval.New(Object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsSupportedObject(System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="GeologyInterval.cs" Line="95">In member 'GeologyInterval.IsSupportedObject(Object)', consider replacing the data type identifier 'Object' in parameter name 'dataObject' with a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Lithology" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="GeologyInterval.cs" Line="145">Change 'List(Of Lithology)' in 'GeologyInterval.Lithology()' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TvdBase" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Tvd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="GeologyInterval.cs" Line="140">Correct the spelling of 'Tvd' in member name 'GeologyInterval.TvdBase()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TvdTop" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Tvd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="GeologyInterval.cs" Line="135">Correct the spelling of 'Tvd' in member name 'GeologyInterval.TvdTop()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Uid" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Uid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="GeologyInterval.cs" Line="113">Correct the spelling of 'Uid' in member name 'GeologyInterval.Uid()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IEtpProtocols" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Etp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Etp' in type name 'IEtpProtocols'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#WitsmlSoap" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Witsml" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Witsml' in member name 'IEtpProtocols.WitsmlSoap()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="LengthMeasure" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Object)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="LengthMeasure.cs" Line="68">'lengthMeasure', a parameter, is cast to type 'LengthMeasure' multiple times in method 'LengthMeasure.New(Object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="LengthMeasure.cs" Line="73">'lengthMeasure', a parameter, is cast to type 'LengthMeasure' multiple times in method 'LengthMeasure.New(Object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsSupportedObject(System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="LengthMeasure.cs" Line="87">In member 'LengthMeasure.IsSupportedObject(Object)', consider replacing the data type identifier 'Object' in parameter name 'dataObject' with a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Uom" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Uom" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="LengthMeasure.cs" Line="106">Correct the spelling of 'Uom' in member name 'LengthMeasure.Uom()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Lithology" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Object)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="Lithology.cs" Line="71">'lithology', a parameter, is cast to type 'Lithology' multiple times in method 'Lithology.New(Object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="Lithology.cs" Line="76">'lithology', a parameter, is cast to type 'Lithology' multiple times in method 'Lithology.New(Object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsSupportedObject(System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="Lithology.cs" Line="90">In member 'Lithology.IsSupportedObject(Object)', consider replacing the data type identifier 'Object' in parameter name 'dataObject' with a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Location" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Object)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="Location.cs" Line="69">'location', a parameter, is cast to type 'Location' multiple times in method 'Location.New(Object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="Location.cs" Line="74">'location', a parameter, is cast to type 'Location' multiple times in method 'Location.New(Object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsSupportedObject(System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="Location.cs" Line="88">In member 'Location.IsSupportedObject(Object)', consider replacing the data type identifier 'Object' in parameter name 'dataObject' with a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Uid" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Uid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="Location.cs" Line="107">Correct the spelling of 'Uid' in member name 'Location.Uid()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Westing" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Westing" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="Location.cs" Line="204">Correct the spelling of 'Westing' in member name 'Location.Westing()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WestingSpecified" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Westing" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="Location.cs" Line="193">Correct the spelling of 'Westing' in member name 'Location.WestingSpecified()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Log" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Object)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="Log.cs" Line="75">'log', a parameter, is cast to type 'Log' multiple times in method 'Log.New(Object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="Log.cs" Line="80">'log', a parameter, is cast to type 'Log' multiple times in method 'Log.New(Object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DepthUom" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Uom" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="Log.cs" Line="246">Correct the spelling of 'Uom' in member name 'Log.DepthUom()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetIndexLogCurve()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="Log.cs" Line="267">Change 'Log.GetIndexLogCurve()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetLogCurves()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="Log.cs" Line="258">Change 'List(Of LogCurveInfo)' in 'Log.GetLogCurves()' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="Log.cs" Line="258">Change 'Log.GetLogCurves()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetReader()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="Log.cs" Line="280">Change 'Log.GetReader()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsDateTimeLogDataType(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="datatype" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="Log.cs" Line="291">In member 'Log.IsDateTimeLogDataType(String, String)', the discrete term 'datatype' in parameter name 'datatype' should be expressed as a compound word, 'dataType'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsSupportedObject(System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="Log.cs" Line="96">In member 'Log.IsSupportedObject(Object)', consider replacing the data type identifier 'Object' in parameter name 'dataObject' with a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LogData" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="Log.cs" Line="251">Change 'List(Of LogData)' in 'Log.LogData()' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetEndIndex(System.Nullable`1&lt;System.Double&gt;,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="uom" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="Log.cs" Line="348">In method 'Log.SetEndIndex(Double?, String)', correct the spelling of 'uom' in parameter name 'uom' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetLogCurves(System.Collections.Generic.List`1&lt;PDS.WITSMLstudio.Adapters.LogCurveInfo&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="Log.cs" Line="403">Change 'List(Of LogCurveInfo)' in 'Log.SetLogCurves(List(Of LogCurveInfo))' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="Infos" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="Log.cs" Line="403">In method 'Log.SetLogCurves(List(Of LogCurveInfo))', correct the spelling of 'Infos' in parameter name 'logCurveInfos' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetStartIndex(System.Nullable`1&lt;System.Double&gt;,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="uom" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="Log.cs" Line="311">In method 'Log.SetStartIndex(Double?, String)', correct the spelling of 'uom' in parameter name 'uom' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="LogCurveInfo" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Object)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="LogCurveInfo.cs" Line="72">'logCurveInfo', a parameter, is cast to type 'LogCurveInfo' multiple times in method 'LogCurveInfo.New(Object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="LogCurveInfo.cs" Line="77">'logCurveInfo', a parameter, is cast to type 'LogCurveInfo' multiple times in method 'LogCurveInfo.New(Object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DepthUom" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Uom" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="LogCurveInfo.cs" Line="160">Correct the spelling of 'Uom' in member name 'LogCurveInfo.DepthUom()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAxisDefinitions()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="LogCurveInfo.cs" Line="202">Change 'List(Of AxisDefinition)' in 'LogCurveInfo.GetAxisDefinitions()' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="LogCurveInfo.cs" Line="202">Change 'LogCurveInfo.GetAxisDefinitions()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsSupportedObject(System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="LogCurveInfo.cs" Line="91">In member 'LogCurveInfo.IsSupportedObject(Object)', consider replacing the data type identifier 'Object' in parameter name 'dataObject' with a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MnemAlias" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Mnem" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="LogCurveInfo.cs" Line="121">Correct the spelling of 'Mnem' in member name 'LogCurveInfo.MnemAlias()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetMaxIndex(System.Nullable`1&lt;System.Double&gt;,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="uom" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="LogCurveInfo.cs" Line="257">In method 'LogCurveInfo.SetMaxIndex(Double?, String)', correct the spelling of 'uom' in parameter name 'uom' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetMinIndex(System.Nullable`1&lt;System.Double&gt;,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="uom" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="LogCurveInfo.cs" Line="212">In method 'LogCurveInfo.SetMinIndex(Double?, String)', correct the spelling of 'uom' in parameter name 'uom' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="LogData" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#MnemonicList" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="LogData.cs" Line="34">Change 'LogData.MnemonicList()' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UnitList" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="LogData.cs" Line="39">Change 'LogData.UnitList()' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MudLog" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Object)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="MudLog.cs" Line="72">'mudLog', a parameter, is cast to type 'MudLog' multiple times in method 'MudLog.New(Object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="MudLog.cs" Line="74">'mudLog', a parameter, is cast to type 'MudLog' multiple times in method 'MudLog.New(Object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EndMDUom" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Uom" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="MudLog.cs" Line="176">Correct the spelling of 'Uom' in member name 'MudLog.EndMDUom()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GeologyInterval" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="MudLog.cs" Line="181">Change 'List(Of GeologyInterval)' in 'MudLog.GeologyInterval()' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsSupportedObject(System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="MudLog.cs" Line="90">In member 'MudLog.IsSupportedObject(Object)', consider replacing the data type identifier 'Object' in parameter name 'dataObject' with a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StartMDUom" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Uom" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="MudLog.cs" Line="171">Correct the spelling of 'Uom' in member name 'MudLog.StartMDUom()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Trajectory" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Object)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="Trajectory.cs" Line="73">'trajectory', a parameter, is cast to type 'Trajectory' multiple times in method 'Trajectory.New(Object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="Trajectory.cs" Line="75">'trajectory', a parameter, is cast to type 'Trajectory' multiple times in method 'Trajectory.New(Object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetReader()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="Trajectory.cs" Line="190">Change 'Trajectory.GetReader()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsSupportedObject(System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="Trajectory.cs" Line="91">In member 'Trajectory.IsSupportedObject(Object)', consider replacing the data type identifier 'Object' in parameter name 'dataObject' with a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MDMaxUom" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Uom" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="Trajectory.cs" Line="177">Correct the spelling of 'Uom' in member name 'Trajectory.MDMaxUom()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MDMinUom" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Uom" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="Trajectory.cs" Line="172">Correct the spelling of 'Uom' in member name 'Trajectory.MDMinUom()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TrajectoryStation" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="Trajectory.cs" Line="182">Change 'List(Of TrajectoryStation)' in 'Trajectory.TrajectoryStation()' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TrajectoryStation" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Object)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="TrajectoryStation.cs" Line="74">'trajectoryStation', a parameter, is cast to type 'TrajectoryStation' multiple times in method 'TrajectoryStation.New(Object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="TrajectoryStation.cs" Line="79">'trajectoryStation', a parameter, is cast to type 'TrajectoryStation' multiple times in method 'TrajectoryStation.New(Object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Azi" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Azi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="TrajectoryStation.cs" Line="135">Correct the spelling of 'Azi' in member name 'TrajectoryStation.Azi()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DispEW" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Disp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="TrajectoryStation.cs" Line="180">Correct the spelling of 'Disp' in member name 'TrajectoryStation.DispEW()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DispNS" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Disp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="TrajectoryStation.cs" Line="201">Correct the spelling of 'Disp' in member name 'TrajectoryStation.DispNS()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Gtf" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Gtf" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="TrajectoryStation.cs" Line="145">Correct the spelling of 'Gtf' in member name 'TrajectoryStation.Gtf()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Incl" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Incl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="TrajectoryStation.cs" Line="130">Correct the spelling of 'Incl' in member name 'TrajectoryStation.Incl()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsSupportedObject(System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="TrajectoryStation.cs" Line="95">In member 'TrajectoryStation.IsSupportedObject(Object)', consider replacing the data type identifier 'Object' in parameter name 'dataObject' with a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Location" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="TrajectoryStation.cs" Line="218">Change 'List(Of Location)' in 'TrajectoryStation.Location()' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Mtf" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Mtf" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="TrajectoryStation.cs" Line="140">Correct the spelling of 'Mtf' in member name 'TrajectoryStation.Mtf()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Tvd" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Tvd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="TrajectoryStation.cs" Line="125">Correct the spelling of 'Tvd' in member name 'TrajectoryStation.Tvd()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Uid" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Uid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="TrajectoryStation.cs" Line="113">Correct the spelling of 'Uid' in member name 'TrajectoryStation.Uid()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#VertSect" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Vert" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Adapters" File="TrajectoryStation.cs" Line="159">Correct the spelling of 'Vert' in member name 'TrajectoryStation.VertSect()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="PDS.WITSMLstudio.Compatibility">
       <Types>
        <Type Name="CompatibilitySettings" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Compatibility" File="CompatibilitySettings.cs" Line="64">Initialize all static fields in 'CompatibilitySettings' when those fields are declared and remove the explicit static constructor.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AllowDuplicateNonRecurringElements" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="NonRecurring" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'NonRecurring' in member name 'CompatibilitySettings.AllowDuplicateNonRecurringElements' exists as a discrete term. If your usage is intended to be single word, case it as 'Nonrecurring' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'CompatibilitySettings.AllowDuplicateNonRecurringElements' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InvalidDataRowSetting" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'CompatibilitySettings.InvalidDataRowSetting' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LogAllowPutObjectWithData" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'CompatibilitySettings.LogAllowPutObjectWithData' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MudLogAllowPutObjectWithData" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'CompatibilitySettings.MudLogAllowPutObjectWithData' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TrajectoryAllowPutObjectWithData" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'CompatibilitySettings.TrajectoryAllowPutObjectWithData' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UnknownElementSetting" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'CompatibilitySettings.UnknownElementSetting' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="PDS.WITSMLstudio.Connections">
       <Types>
        <Type Name="AuthenticationTypes" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OnlyFlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1717" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If the name 'AuthenticationTypes' is plural, change it to its singular form.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Connection" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#EtpCompression" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Etp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Connections" File="Connection.cs" Line="379">Correct the spelling of 'Etp' in member name 'Connection.EtpCompression()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EtpEncoding" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Etp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Connections" File="Connection.cs" Line="360">Correct the spelling of 'Etp' in member name 'Connection.EtpEncoding()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ProxyUsername" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Username" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeCompoundWord" Certainty="80" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Connections" File="Connection.cs" Line="226">The discrete term 'Username' in member name 'Connection.ProxyUsername()' should be expressed as a compound word, 'UserName'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToString()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Connections" File="Connection.cs" Line="514">Because the behavior of 'String.Format(String, Object)' could vary based on the current user's locale settings, replace this call in 'Connection.ToString()' with a call to 'String.Format(IFormatProvider, String, ParamArray Object())'. If the result of 'String.Format(IFormatProvider, String, ParamArray Object())' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Connections" File="Connection.cs" Line="514">Because the behavior of 'String.Format(String, Object)' could vary based on the current user's locale settings, replace this call in 'Connection.ToString()' with a call to 'String.Format(IFormatProvider, String, ParamArray Object())'. If the result of 'String.Format(IFormatProvider, String, ParamArray Object())' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Connections" File="Connection.cs" Line="514">Because the behavior of 'String.Format(String, Object)' could vary based on the current user's locale settings, replace this call in 'Connection.ToString()' with a call to 'String.Format(IFormatProvider, String, ParamArray Object())'. If the result of 'String.Format(IFormatProvider, String, ParamArray Object())' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Connections" File="Connection.cs" Line="514">Because the behavior of 'String.Format(String, ParamArray Object())' could vary based on the current user's locale settings, replace this call in 'Connection.ToString()' with a call to 'String.Format(IFormatProvider, String, ParamArray Object())'. If the result of 'String.Format(IFormatProvider, String, ParamArray Object())' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Connections" File="Connection.cs" Line="514">Because the behavior of 'String.Format(String, ParamArray Object())' could vary based on the current user's locale settings, replace this call in 'Connection.ToString()' with a call to 'String.Format(IFormatProvider, String, ParamArray Object())'. If the result of 'String.Format(IFormatProvider, String, ParamArray Object())' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Uri" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UriPropertiesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1056" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Connections" File="Connection.cs" Line="123">Change the type of property 'Connection.Uri()' from string to System.Uri.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Username" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Username" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeCompoundWord" Certainty="80" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Connections" File="Connection.cs" Line="275">The discrete term 'Username' in member name 'Connection.Username()' should be expressed as a compound word, 'UserName'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ConnectionExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CreateEtpClient(PDS.WITSMLstudio.Connections.Connection,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Connections" File="ConnectionExtensions.cs" Line="128">In method 'ConnectionExtensions.CreateEtpClient(Connection, String, String)', object 'client' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'client' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="Etp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Connections" File="ConnectionExtensions.cs" Line="123">Correct the spelling of 'Etp' in member name 'ConnectionExtensions.CreateEtpClient(Connection, String, String)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Connections" File="ConnectionExtensions.cs" Line="128">In externally visible method 'ConnectionExtensions.CreateEtpClient(Connection, String, String)', validate parameter 'connection' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateJsonClient(PDS.WITSMLstudio.Connections.Connection)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Connections" File="ConnectionExtensions.cs" Line="109">In externally visible method 'ConnectionExtensions.CreateJsonClient(Connection)', validate parameter 'connection' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateProxy(PDS.WITSMLstudio.Connections.Connection,Energistics.DataAccess.WMLSVersion)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Connections" File="ConnectionExtensions.cs" Line="42">In externally visible method 'ConnectionExtensions.CreateProxy(Connection, WMLSVersion)', validate parameter 'connection' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateWebProxy(PDS.WITSMLstudio.Connections.Connection)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Connections" File="ConnectionExtensions.cs" Line="85">In externally visible method 'ConnectionExtensions.CreateWebProxy(Connection)', validate parameter 'connection' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAuthorizationHeader(PDS.WITSMLstudio.Connections.Connection)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Connections" File="ConnectionExtensions.cs" Line="152">In externally visible method 'ConnectionExtensions.GetAuthorizationHeader(Connection)', validate parameter 'connection' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetEtpServerCapabilities(PDS.WITSMLstudio.Connections.Connection)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Etp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Connections" File="ConnectionExtensions.cs" Line="196">Correct the spelling of 'Etp' in member name 'ConnectionExtensions.GetEtpServerCapabilities(Connection)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetEtpServerCapabilitiesUrl(PDS.WITSMLstudio.Connections.Connection,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Connections" File="ConnectionExtensions.cs" Line="180">Replace method 'ConnectionExtensions.GetEtpServerCapabilitiesUrl(Connection, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Etp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Connections" File="ConnectionExtensions.cs" Line="180">Correct the spelling of 'Etp' in member name 'ConnectionExtensions.GetEtpServerCapabilitiesUrl(Connection, Boolean)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="UriReturnValuesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1055" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Connections" File="ConnectionExtensions.cs" Line="180">Change the return type of 'ConnectionExtensions.GetEtpServerCapabilitiesUrl(Connection, Boolean)' from string to System.Uri.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Connections" File="ConnectionExtensions.cs" Line="183">In externally visible method 'ConnectionExtensions.GetEtpServerCapabilitiesUrl(Connection, Boolean)', validate parameter 'connection' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetEtpVersions(PDS.WITSMLstudio.Connections.Connection)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Etp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Connections" File="ConnectionExtensions.cs" Line="205">Correct the spelling of 'Etp' in member name 'ConnectionExtensions.GetEtpVersions(Connection)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetServerCertificateValidation(PDS.WITSMLstudio.Connections.Connection)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Connections" File="ConnectionExtensions.cs" Line="163">In externally visible method 'ConnectionExtensions.SetServerCertificateValidation(Connection)', validate parameter 'connection' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateEtpSettings(PDS.WITSMLstudio.Connections.Connection,System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Etp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Connections" File="ConnectionExtensions.cs" Line="217">Correct the spelling of 'Etp' in member name 'ConnectionExtensions.UpdateEtpSettings(Connection, IDictionary(Of String, String))' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Connections" File="ConnectionExtensions.cs" Line="217">In externally visible method 'ConnectionExtensions.UpdateEtpSettings(Connection, IDictionary(Of String, String))', validate parameter 'connection' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Connections" File="ConnectionExtensions.cs" Line="218">In externally visible method 'ConnectionExtensions.UpdateEtpSettings(Connection, IDictionary(Of String, String))', validate parameter 'headers' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateProxy(PDS.WITSMLstudio.Connections.Connection,Energistics.DataAccess.WITSMLWebServiceConnection)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Connections" File="ConnectionExtensions.cs" Line="54">In externally visible method 'ConnectionExtensions.UpdateProxy(Connection, WITSMLWebServiceConnection)', validate parameter 'connection' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Connections" File="ConnectionExtensions.cs" Line="53">In externally visible method 'ConnectionExtensions.UpdateProxy(Connection, WITSMLWebServiceConnection)', validate parameter 'proxy' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ConnectionTypes" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OnlyFlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1717" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If the name 'ConnectionTypes' is plural, change it to its singular form.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Etp" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Etp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Etp' in member name 'ConnectionTypes.Etp' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Jwt" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Jwt" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Jwt' in member name 'ConnectionTypes.Jwt' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Witsml" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Witsml" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Witsml' in member name 'ConnectionTypes.Witsml' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="PDS.WITSMLstudio.Data">
       <Types>
        <Type Name="DataGenerator" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GenerateDateTimeIndex(System.DateTimeOffset)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataGenerator.cs" Line="122">The 'this' parameter (or 'Me' in Visual Basic) of 'DataGenerator.GenerateDateTimeIndex(DateTimeOffset)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="System.DateTimeOffset.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataGenerator.cs" Line="122">Because the behavior of 'DateTimeOffset.ToString(String)' could vary based on the current user's locale settings, replace this call in 'DataGenerator.GenerateDateTimeIndex(DateTimeOffset)' with a call to 'DateTimeOffset.ToString(String, IFormatProvider)'. If the result of 'DateTimeOffset.ToString(String, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GenerateDateTimeIndexes(System.Int32,System.DateTimeOffset,System.TimeSpan)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataGenerator.cs" Line="92">Change 'List(Of String)' in 'DataGenerator.GenerateDateTimeIndexes(Integer, DateTimeOffset, TimeSpan)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="num" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataGenerator.cs" Line="92">In method 'DataGenerator.GenerateDateTimeIndexes(Integer, DateTimeOffset, TimeSpan)', correct the spelling of 'num' in parameter name 'numOfRows' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GenerateNumericIndex(System.Double)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataGenerator.cs" Line="133">The 'this' parameter (or 'Me' in Visual Basic) of 'DataGenerator.GenerateNumericIndex(Double)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="System.Double.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataGenerator.cs" Line="133">Because the behavior of 'Double.ToString(String)' could vary based on the current user's locale settings, replace this call in 'DataGenerator.GenerateNumericIndex(Double)' with a call to 'Double.ToString(String, IFormatProvider)'. If the result of 'Double.ToString(String, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GenerateNumericIndexes(System.Int32,System.Double,System.Double)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataGenerator.cs" Line="108">Change 'List(Of String)' in 'DataGenerator.GenerateNumericIndexes(Integer, Double, Double)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="num" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataGenerator.cs" Line="108">In method 'DataGenerator.GenerateNumericIndexes(Integer, Double, Double)', correct the spelling of 'num' in parameter name 'numOfRows' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#List`1(!!0[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataGenerator.cs" Line="65">Change 'List(Of T)' in 'DataGenerator.List(Of T)(ParamArray T())' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataGenerator.cs" Line="65">The 'this' parameter (or 'Me' in Visual Basic) of 'DataGenerator.List(Of T)(ParamArray T())' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Name(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataGenerator.cs" Line="51">Replace method 'DataGenerator.Name(String)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="System.DateTime.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataGenerator.cs" Line="52">Because the behavior of 'Date.ToString(String)' could vary based on the current user's locale settings, replace this call in 'DataGenerator.Name(String)' with a call to 'Date.ToString(String, IFormatProvider)'. If the result of 'Date.ToString(String, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataGenerator.cs" Line="54">Because the behavior of 'Date.ToString(String)' could vary based on the current user's locale settings, replace this call in 'DataGenerator.Name(String)' with a call to 'Date.ToString(String, IFormatProvider)'. If the result of 'Date.ToString(String, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataGenerator.cs" Line="54">Because the behavior of 'String.Format(String, Object, Object)' could vary based on the current user's locale settings, replace this call in 'DataGenerator.Name(String)' with a call to 'String.Format(IFormatProvider, String, ParamArray Object())'. If the result of 'String.Format(IFormatProvider, String, ParamArray Object())' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TimestampFormat" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DataGenerator.TimestampFormat' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Uid()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Uid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataGenerator.cs" Line="41">Correct the spelling of 'Uid' in member name 'DataGenerator.Uid()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataGenerator.cs" Line="41">The 'this' parameter (or 'Me' in Visual Basic) of 'DataGenerator.Uid()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DataObjectMessage" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.String,System.Object)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectMessage.cs" Line="34">Replace method 'DataObjectMessage.New(String, Object)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectMessage.cs" Line="34">In member 'DataObjectMessage.New(String, Object)', consider replacing the data type identifier 'Object' in parameter name 'dataObject' with a more generic term, such as 'value'.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectMessage.cs" Line="34">Change the type of parameter 'uri' of method 'DataObjectMessage.New(String, Object)' from string to System.Uri, or provide an overload of 'DataObjectMessage.New(String, Object)', that allows 'uri' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CustomData" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectMessage.cs" Line="112">Change 'DataObjectMessage.CustomData()' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Uri" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UriPropertiesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1056" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectMessage.cs" Line="82">Change the type of property 'DataObjectMessage.Uri()' from string to System.Uri.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Username" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Username" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeCompoundWord" Certainty="80" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectMessage.cs" Line="62">The discrete term 'Username' in member name 'DataObjectMessage.Username()' should be expressed as a compound word, 'UserName'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Uuid" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Uuid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectMessage.cs" Line="47">Correct the spelling of 'Uuid' in member name 'DataObjectMessage.Uuid()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DataObjectNavigationContext" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Ignored" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigationContext.cs" Line="48">Change 'DataObjectNavigationContext.Ignored()' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigationContext.cs" Line="48">Change 'List(Of String)' in 'DataObjectNavigationContext.Ignored()' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Warnings" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigationContext.cs" Line="62">Change 'List(Of WitsmlValidationResult)' in 'DataObjectNavigationContext.Warnings()' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DataObjectNavigator`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetClrType(System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="849">'DataObjectNavigator(Of TContext).GetClrType(String)' has a cyclomatic complexity of 62. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetConcreteType(System.Xml.Linq.XElement,System.Type)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="814">In externally visible method 'DataObjectNavigator(Of TContext).GetConcreteType(XElement, Type)', validate parameter 'element' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="826">In externally visible method 'DataObjectNavigator(Of TContext).GetConcreteType(XElement, Type)', validate parameter 'propType' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPropertyInfo(System.Type,System.Xml.Linq.XElement)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="940">Replace method 'DataObjectNavigator(Of TContext).GetPropertyInfo(Type, XElement)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="940">In externally visible method 'DataObjectNavigator(Of TContext).GetPropertyInfo(Type, XElement)', validate parameter 'type' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPropertyInfoForAnElement(System.Collections.Generic.IList`1&lt;System.Reflection.PropertyInfo&gt;,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="745">In externally visible method 'DataObjectNavigator(Of TContext).GetPropertyInfoForAnElement(IList(Of PropertyInfo), String)', validate parameter 'properties' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPropertyPath(System.String,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="956">Because the behavior of 'String.Format(String, Object)' could vary based on the current user's locale settings, replace this call in 'DataObjectNavigator(Of TContext).GetPropertyPath(String, String)' with a call to 'String.Format(IFormatProvider, String, ParamArray Object())'. If the result of 'String.Format(IFormatProvider, String, ParamArray Object())' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="957">Because the behavior of 'String.Format(String, Object, Object)' could vary based on the current user's locale settings, replace this call in 'DataObjectNavigator(Of TContext).GetPropertyPath(String, String)' with a call to 'String.Format(IFormatProvider, String, ParamArray Object())'. If the result of 'String.Format(IFormatProvider, String, ParamArray Object())' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetXmlTextProperty(System.Type)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="1029">In externally visible method 'DataObjectNavigator(Of TContext).GetXmlTextProperty(Type)', validate parameter 'type' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HandleInvalidAttribute(System.Xml.Linq.XAttribute,System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="675">Replace method 'DataObjectNavigator(Of TContext).HandleInvalidAttribute(XAttribute, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="675">In externally visible method 'DataObjectNavigator(Of TContext).HandleInvalidAttribute(XAttribute, Boolean)', validate parameter 'attribute' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HandleInvalidElement(System.Xml.Linq.XElement,System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="665">Replace method 'DataObjectNavigator(Of TContext).HandleInvalidElement(XElement, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="665">In externally visible method 'DataObjectNavigator(Of TContext).HandleInvalidElement(XElement, Boolean)', validate parameter 'element' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HandleInvalidElementOrAttribute(System.Xml.Linq.XObject,System.String,System.String,System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="687">Replace method 'DataObjectNavigator(Of TContext).HandleInvalidElementOrAttribute(XObject, String, String, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HandleObjectValue(System.Reflection.PropertyInfo,System.Xml.Linq.XObject,System.Type,System.String,System.String,System.Object)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="581">In member 'DataObjectNavigator(Of TContext).HandleObjectValue(PropertyInfo, XObject, Type, String, String, Object)', consider replacing the data type identifier 'object' in parameter name 'objectValue' with a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HandleSpecialCase(System.Reflection.PropertyInfo,System.Collections.Generic.List`1&lt;System.Xml.Linq.XElement&gt;,System.String,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="646">Change 'List(Of XElement)' in 'DataObjectNavigator(Of TContext).HandleSpecialCase(PropertyInfo, List(Of XElement), String, String)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HasAttributesWithValues(System.Xml.Linq.XElement)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="969">In externally visible method 'DataObjectNavigator(Of TContext).HasAttributesWithValues(XElement)', validate parameter 'element' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HasSimpleContent(System.Type)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="1039">In externally visible method 'DataObjectNavigator(Of TContext).HasSimpleContent(Type)', validate parameter 'type' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HasUidProperty(System.Type)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="Uid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="979">Correct the spelling of 'Uid' in member name 'DataObjectNavigator(Of TContext).HasUidProperty(Type)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="979">In externally visible method 'DataObjectNavigator(Of TContext).HasUidProperty(Type)', validate parameter 'type' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HasXmlAnyElement(System.Type)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="1049">In externally visible method 'DataObjectNavigator(Of TContext).HasXmlAnyElement(Type)', validate parameter 'type' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsComplexType(System.Type)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="989">In externally visible method 'DataObjectNavigator(Of TContext).IsComplexType(Type)', validate parameter 'type' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsIgnored(System.String,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="721">Replace method 'DataObjectNavigator(Of TContext).IsIgnored(String, String)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsIgnoredAttribute(System.Xml.Linq.XAttribute)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="1088">In externally visible method 'DataObjectNavigator(Of TContext).IsIgnoredAttribute(XAttribute)', validate parameter 'attribute' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsNumeric(System.Type)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="1063">In externally visible method 'DataObjectNavigator(Of TContext).IsNumeric(Type)', validate parameter 'propertyType' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsSpecialCase(System.Reflection.PropertyInfo)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="1009">In externally visible method 'DataObjectNavigator(Of TContext).IsSpecialCase(PropertyInfo)', validate parameter 'propertyInfo' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NavigateArrayElementType(System.Reflection.PropertyInfo,System.Collections.Generic.List`1&lt;System.Xml.Linq.XElement&gt;,System.Type,System.Xml.Linq.XElement,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="257">Change 'List(Of XElement)' in 'DataObjectNavigator(Of TContext).NavigateArrayElementType(PropertyInfo, List(Of XElement), Type, XElement, String)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="267">In externally visible method 'DataObjectNavigator(Of TContext).NavigateArrayElementType(PropertyInfo, List(Of XElement), Type, XElement, String)', validate parameter 'propertyInfo' before using it.</Issue>
            </Message>
            <Message Id="3" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="265">In externally visible method 'DataObjectNavigator(Of TContext).NavigateArrayElementType(PropertyInfo, List(Of XElement), Type, XElement, String)', validate parameter 'element' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NavigateAttribute(System.Reflection.PropertyInfo,System.Xml.Linq.XAttribute,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="415">Replace method 'DataObjectNavigator(Of TContext).NavigateAttribute(PropertyInfo, XAttribute, String)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="415">In externally visible method 'DataObjectNavigator(Of TContext).NavigateAttribute(PropertyInfo, XAttribute, String)', validate parameter 'propertyInfo' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="418">In externally visible method 'DataObjectNavigator(Of TContext).NavigateAttribute(PropertyInfo, XAttribute, String)', validate parameter 'attribute' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NavigateAttributes(System.Xml.Linq.XElement,System.String,System.Collections.Generic.IList`1&lt;System.Reflection.PropertyInfo&gt;,System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="389">Replace method 'DataObjectNavigator(Of TContext).NavigateAttributes(XElement, String, IList(Of PropertyInfo), Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Uom" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="389">In method 'DataObjectNavigator(Of TContext).NavigateAttributes(XElement, String, IList(Of PropertyInfo), Boolean)', correct the spelling of 'Uom' in parameter name 'skipUom' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="389">In externally visible method 'DataObjectNavigator(Of TContext).NavigateAttributes(XElement, String, IList(Of PropertyInfo), Boolean)', validate parameter 'element' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NavigateElement(System.Xml.Linq.XElement,System.Type,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="122">Replace method 'DataObjectNavigator(Of TContext).NavigateElement(XElement, Type, String)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="122">In externally visible method 'DataObjectNavigator(Of TContext).NavigateElement(XElement, Type, String)', validate parameter 'element' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NavigateElementGroup(System.Reflection.PropertyInfo,System.Linq.IGrouping`2&lt;System.String,System.Xml.Linq.XElement&gt;,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="160">In externally visible method 'DataObjectNavigator(Of TContext).NavigateElementGroup(PropertyInfo, IGrouping(Of String, XElement), String)', validate parameter 'elements' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NavigateElementGroupItem(System.Reflection.PropertyInfo,System.Collections.Generic.List`1&lt;System.Xml.Linq.XElement&gt;,System.Xml.Linq.XElement,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="200">Change 'List(Of XElement)' in 'DataObjectNavigator(Of TContext).NavigateElementGroupItem(PropertyInfo, List(Of XElement), XElement, String)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="200">In externally visible method 'DataObjectNavigator(Of TContext).NavigateElementGroupItem(PropertyInfo, List(Of XElement), XElement, String)', validate parameter 'propertyInfo' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NavigateElementType(System.Reflection.PropertyInfo,System.Type,System.Xml.Linq.XElement,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="303">In externally visible method 'DataObjectNavigator(Of TContext).NavigateElementType(PropertyInfo, Type, XElement, String)', validate parameter 'elementType' before using it.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="310">In externally visible method 'DataObjectNavigator(Of TContext).NavigateElementType(PropertyInfo, Type, XElement, String)', validate parameter 'element' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NavigateElementTypeWithoutXmlText(System.Reflection.PropertyInfo,System.Type,System.Xml.Linq.XElement,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="356">In externally visible method 'DataObjectNavigator(Of TContext).NavigateElementTypeWithoutXmlText(PropertyInfo, Type, XElement, String)', validate parameter 'propertyInfo' before using it.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="348">In externally visible method 'DataObjectNavigator(Of TContext).NavigateElementTypeWithoutXmlText(PropertyInfo, Type, XElement, String)', validate parameter 'element' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NavigateProperty(System.Reflection.PropertyInfo,System.Xml.Linq.XObject,System.Type,System.String,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="444">In externally visible method 'DataObjectNavigator(Of TContext).NavigateProperty(PropertyInfo, XObject, Type, String, String)', validate parameter 'propertyType' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NavigateRecurringElements(System.Reflection.PropertyInfo,System.Collections.Generic.List`1&lt;System.Xml.Linq.XElement&gt;,System.Type,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="241">Change 'List(Of XElement)' in 'DataObjectNavigator(Of TContext).NavigateRecurringElements(PropertyInfo, List(Of XElement), Type, String)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="241">In externally visible method 'DataObjectNavigator(Of TContext).NavigateRecurringElements(PropertyInfo, List(Of XElement), Type, String)', validate parameter 'elements' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NavigateUomAttribute(System.Reflection.PropertyInfo,System.Xml.Linq.XObject,System.Type,System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="Uom" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="375">Correct the spelling of 'Uom' in member name 'DataObjectNavigator(Of TContext).NavigateUomAttribute(PropertyInfo, XObject, Type, String, String, String)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="uom" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="375">In method 'DataObjectNavigator(Of TContext).NavigateUomAttribute(PropertyInfo, XObject, Type, String, String, String)', correct the spelling of 'uom' in parameter name 'uomValue' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ParseEnum(System.Type,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.IndexOf(System.String,System.StringComparison)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="923">'DataObjectNavigator(Of TContext).ParseEnum(Type, String)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'String.IndexOf(String, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="923">'DataObjectNavigator(Of TContext).ParseEnum(Type, String)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'String.IndexOf(String, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="923">In externally visible method 'DataObjectNavigator(Of TContext).ParseEnum(Type, String)', validate parameter 'enumType' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ParseNestedElement(System.Type,System.Xml.Linq.XElement)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="511">Modify 'DataObjectNavigator(Of TContext).ParseNestedElement(Type, XElement)' to catch a more specific exception than 'Object' or rethrow the exception.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="502">In externally visible method 'DataObjectNavigator(Of TContext).ParseNestedElement(Type, XElement)', validate parameter 'element' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RemoveInvalidChildElementsAndAttributes(System.Reflection.PropertyInfo,System.Type,System.Xml.Linq.XElement)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="1104">In externally visible method 'DataObjectNavigator(Of TContext).RemoveInvalidChildElementsAndAttributes(PropertyInfo, Type, XElement)', validate parameter 'element' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ValidateMeasureUom(System.Xml.Linq.XElement,System.Reflection.PropertyInfo,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="Uom" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="785">Correct the spelling of 'Uom' in member name 'DataObjectNavigator(Of TContext).ValidateMeasureUom(XElement, PropertyInfo, String)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="uom" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="785">In method 'DataObjectNavigator(Of TContext).ValidateMeasureUom(XElement, PropertyInfo, String)', correct the spelling of 'uom' in parameter name 'uomProperty' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectNavigator.cs" Line="792">In externally visible method 'DataObjectNavigator(Of TContext).ValidateMeasureUom(XElement, PropertyInfo, String)', validate parameter 'element' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DataObjectTemplate" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectTemplate.cs" Line="46">Initialize all static fields in 'DataObjectTemplate' when those fields are declared and remove the explicit static constructor.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectTemplate.cs" Line="67">Replace method 'DataObjectTemplate.New(IEnumerable(Of String))' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Add(System.Xml.Linq.XDocument,System.String,System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="xpath" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectTemplate.cs" Line="174">In method 'DataObjectTemplate.Add(XDocument, String, ParamArray String())', correct the spelling of 'xpath' in parameter name 'xpath' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectTemplate.cs" Line="184">Because the behavior of 'String.StartsWith(String)' could vary based on the current user's locale settings, replace this call in 'DataObjectTemplate.Add(XDocument, String, ParamArray String())' with a call to 'String.StartsWith(String, StringComparison)'. If the result of 'String.StartsWith(String, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectTemplate.cs" Line="174">In externally visible method 'DataObjectTemplate.Add(XDocument, String, ParamArray String())', validate parameter 'document' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Add(System.Xml.Linq.XDocument,System.String,System.Xml.Linq.XObject[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="xpath" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectTemplate.cs" Line="202">In method 'DataObjectTemplate.Add(XDocument, String, ParamArray XObject())', correct the spelling of 'xpath' in parameter name 'xpath' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectTemplate.cs" Line="202">In externally visible method 'DataObjectTemplate.Add(XDocument, String, ParamArray XObject())', validate parameter 'document' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Clone(System.Xml.Linq.XDocument,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="xpath" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectTemplate.cs" Line="101">In method 'DataObjectTemplate.Clone(XDocument, String)', correct the spelling of 'xpath' in parameter name 'xpath' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectTemplate.cs" Line="101">The 'this' parameter (or 'Me' in Visual Basic) of 'DataObjectTemplate.Clone(XDocument, String)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Create`1()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectTemplate.cs" Line="79">Consider a design where 'DataObjectTemplate.Create(Of T)()' doesn't require explicit type parameter 'T' in any call to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Push(System.Xml.Linq.XDocument,System.String,System.Xml.Linq.XElement)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="xpath" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectTemplate.cs" Line="154">In method 'DataObjectTemplate.Push(XDocument, String, XElement)', correct the spelling of 'xpath' in parameter name 'xpath' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectTemplate.cs" Line="154">In externally visible method 'DataObjectTemplate.Push(XDocument, String, XElement)', validate parameter 'document' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Remove(System.Xml.Linq.XDocument,System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="xpaths" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectTemplate.cs" Line="226">In method 'DataObjectTemplate.Remove(XDocument, ParamArray String())', correct the spelling of 'xpaths' in parameter name 'xpaths' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectTemplate.cs" Line="226">In externally visible method 'DataObjectTemplate.Remove(XDocument, ParamArray String())', validate parameter 'document' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RemoveAll(System.Xml.Linq.XDocument,System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="xpaths" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectTemplate.cs" Line="244">In method 'DataObjectTemplate.RemoveAll(XDocument, ParamArray String())', correct the spelling of 'xpaths' in parameter name 'xpaths' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectTemplate.cs" Line="244">In externally visible method 'DataObjectTemplate.RemoveAll(XDocument, ParamArray String())', validate parameter 'document' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Set`1(System.Xml.Linq.XDocument,System.String,!!0)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="xpath" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectTemplate.cs" Line="114">In method 'DataObjectTemplate.Set(Of TValue)(XDocument, String, TValue)', correct the spelling of 'xpath' in parameter name 'xpath' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectTemplate.cs" Line="122">Because the behavior of 'String.Format(String, Object)' could vary based on the current user's locale settings, replace this call in 'DataObjectTemplate.Set(Of TValue)(XDocument, String, TValue)' with a call to 'String.Format(IFormatProvider, String, ParamArray Object())'. If the result of 'String.Format(IFormatProvider, String, ParamArray Object())' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="DataObjectTemplate.cs" Line="114">In externally visible method 'DataObjectTemplate.Set(Of TValue)(XDocument, String, TValue)', validate parameter 'document' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="EtpExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Etp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Etp' in type name 'EtpExtensions'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#CreateAndValidateUri(Energistics.Etp.Common.IProtocolHandler,System.String,System.Int64)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="47">Replace method 'EtpExtensions.CreateAndValidateUri(IProtocolHandler, String, Long)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="1#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="47">Change the type of parameter 'uri' of method 'EtpExtensions.CreateAndValidateUri(IProtocolHandler, String, Long)' from string to System.Uri, or provide an overload of 'EtpExtensions.CreateAndValidateUri(IProtocolHandler, String, Long)', that allows 'uri' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateChannelMetadata(Energistics.Etp.Common.IEtpAdapter,System.Nullable`1&lt;Energistics.Etp.Common.Datatypes.EtpUri&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="237">Replace method 'EtpExtensions.CreateChannelMetadata(IEtpAdapter, EtpUri?)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="etp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="237">In method 'EtpExtensions.CreateChannelMetadata(IEtpAdapter, EtpUri?)', correct the spelling of 'etp' in parameter name 'etpAdapter' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="237">In externally visible method 'EtpExtensions.CreateChannelMetadata(IEtpAdapter, EtpUri?)', validate parameter 'etpAdapter' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateChannelMetadataHeader(Energistics.Etp.Common.IEtpAdapter,System.Int64)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="267">Replace method 'EtpExtensions.CreateChannelMetadataHeader(IEtpAdapter, Long)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="etp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="267">In method 'EtpExtensions.CreateChannelMetadataHeader(IEtpAdapter, Long)', correct the spelling of 'etp' in parameter name 'etpAdapter' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="267">In externally visible method 'EtpExtensions.CreateChannelMetadataHeader(IEtpAdapter, Long)', validate parameter 'etpAdapter' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateChannelStreamingInfo(Energistics.Etp.Common.IEtpAdapter)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="etp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="406">In method 'EtpExtensions.CreateChannelStreamingInfo(IEtpAdapter)', correct the spelling of 'etp' in parameter name 'etpAdapter' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="406">In externally visible method 'EtpExtensions.CreateChannelStreamingInfo(IEtpAdapter)', validate parameter 'etpAdapter' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateDataItem(Energistics.Etp.Common.IEtpAdapter)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="etp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="382">In method 'EtpExtensions.CreateDataItem(IEtpAdapter)', correct the spelling of 'etp' in parameter name 'etpAdapter' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="382">In externally visible method 'EtpExtensions.CreateDataItem(IEtpAdapter)', validate parameter 'etpAdapter' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateDataItem(Energistics.Etp.Common.IEtpAdapter,System.Int64,System.Object,System.Collections.Generic.IList`1&lt;System.Object&gt;,System.Collections.Generic.IList`1&lt;System.Object&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="542">Replace method 'EtpExtensions.CreateDataItem(IEtpAdapter, Long, Object, IList(Of Object), IList(Of Object))' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="etp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="542">In method 'EtpExtensions.CreateDataItem(IEtpAdapter, Long, Object, IList(Of Object), IList(Of Object))', correct the spelling of 'etp' in parameter name 'etpAdapter' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="542">In externally visible method 'EtpExtensions.CreateDataItem(IEtpAdapter, Long, Object, IList(Of Object), IList(Of Object))', validate parameter 'etpAdapter' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateDataObject(Energistics.Etp.Common.IEtpAdapter)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="etp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="453">In method 'EtpExtensions.CreateDataObject(IEtpAdapter)', correct the spelling of 'etp' in parameter name 'etpAdapter' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="453">In externally visible method 'EtpExtensions.CreateDataObject(IEtpAdapter)', validate parameter 'etpAdapter' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateDataValue(Energistics.Etp.Common.IEtpAdapter)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="etp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="394">In method 'EtpExtensions.CreateDataValue(IEtpAdapter)', correct the spelling of 'etp' in parameter name 'etpAdapter' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="394">In externally visible method 'EtpExtensions.CreateDataValue(IEtpAdapter)', validate parameter 'etpAdapter' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateIndexMetadata(Energistics.Etp.Common.IEtpAdapter,System.Nullable`1&lt;Energistics.Etp.Common.Datatypes.EtpUri&gt;,System.Boolean,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="196">Replace method 'EtpExtensions.CreateIndexMetadata(IEtpAdapter, EtpUri?, Boolean, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="etp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="196">In method 'EtpExtensions.CreateIndexMetadata(IEtpAdapter, EtpUri?, Boolean, Boolean)', correct the spelling of 'etp' in parameter name 'etpAdapter' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="196">In externally visible method 'EtpExtensions.CreateIndexMetadata(IEtpAdapter, EtpUri?, Boolean, Boolean)', validate parameter 'etpAdapter' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateStreamingStartIndex(Energistics.Etp.Common.IEtpAdapter)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="etp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="418">In method 'EtpExtensions.CreateStreamingStartIndex(IEtpAdapter)', correct the spelling of 'etp' in parameter name 'etpAdapter' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="418">In externally visible method 'EtpExtensions.CreateStreamingStartIndex(IEtpAdapter)', validate parameter 'etpAdapter' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetChannelStatus(Energistics.Etp.Common.IEtpAdapter,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="etp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="297">In method 'EtpExtensions.GetChannelStatus(IEtpAdapter, Boolean)', correct the spelling of 'etp' in parameter name 'etpAdapter' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="297">In externally visible method 'EtpExtensions.GetChannelStatus(IEtpAdapter, Boolean)', validate parameter 'etpAdapter' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetDataType(Energistics.Etp.Common.IEtpAdapter,Energistics.Etp.Common.Datatypes.ChannelData.IIndexMetadataRecord)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="etp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="347">In method 'EtpExtensions.GetDataType(IEtpAdapter, IIndexMetadataRecord)', correct the spelling of 'etp' in parameter name 'etpAdapter' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="349">In externally visible method 'EtpExtensions.GetDataType(IEtpAdapter, IIndexMetadataRecord)', validate parameter 'etpAdapter' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetEtpProtocols(Energistics.Etp.Common.IEtpAdapter)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Etp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="181">Correct the spelling of 'Etp' in member name 'EtpExtensions.GetEtpProtocols(IEtpAdapter)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="etp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="181">In method 'EtpExtensions.GetEtpProtocols(IEtpAdapter)', correct the spelling of 'etp' in parameter name 'etpAdapter' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="181">In externally visible method 'EtpExtensions.GetEtpProtocols(IEtpAdapter)', validate parameter 'etpAdapter' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetIndexValue(Energistics.Etp.Common.IEtpAdapter,Energistics.Etp.Common.Datatypes.ChannelData.IIndexMetadataRecord,System.Nullable`1&lt;System.Int64&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="etp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="365">In method 'EtpExtensions.GetIndexValue(IEtpAdapter, IIndexMetadataRecord, Long?)', correct the spelling of 'etp' in parameter name 'etpAdapter' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="369">In externally visible method 'EtpExtensions.GetIndexValue(IEtpAdapter, IIndexMetadataRecord, Long?)', validate parameter 'etpAdapter' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsChannelSubscribable(Energistics.Etp.Common.Datatypes.EtpUri)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Subscribable" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="119">Correct the spelling of 'Subscribable' in member name 'EtpExtensions.IsChannelSubscribable(EtpUri)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsIncreasing(Energistics.Etp.Common.IEtpAdapter,Energistics.Etp.Common.Datatypes.ChannelData.IIndexMetadataRecord)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="etp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="332">In method 'EtpExtensions.IsIncreasing(IEtpAdapter, IIndexMetadataRecord)', correct the spelling of 'etp' in parameter name 'etpAdapter' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="334">In externally visible method 'EtpExtensions.IsIncreasing(IEtpAdapter, IIndexMetadataRecord)', validate parameter 'etpAdapter' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsTimeIndex(Energistics.Etp.Common.IEtpAdapter,Energistics.Etp.Common.Datatypes.ChannelData.IIndexMetadataRecord)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="etp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="317">In method 'EtpExtensions.IsTimeIndex(IEtpAdapter, IIndexMetadataRecord)', correct the spelling of 'etp' in parameter name 'etpAdapter' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="319">In externally visible method 'EtpExtensions.IsTimeIndex(IEtpAdapter, IIndexMetadataRecord)', validate parameter 'etpAdapter' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToArray(Energistics.Etp.Common.IEtpAdapter,System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="521">'values', a variable, is cast to type 'IList(Of Boolean)' multiple times in method 'EtpExtensions.ToArray(IEtpAdapter, Object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="497">'values', a variable, is cast to type 'IList(Of Double)' multiple times in method 'EtpExtensions.ToArray(IEtpAdapter, Object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="515">'values', a variable, is cast to type 'IList(Of Integer)' multiple times in method 'EtpExtensions.ToArray(IEtpAdapter, Object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="509">'values', a variable, is cast to type 'IList(Of Long)' multiple times in method 'EtpExtensions.ToArray(IEtpAdapter, Object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="503">'values', a variable, is cast to type 'IList(Of Single)' multiple times in method 'EtpExtensions.ToArray(IEtpAdapter, Object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
            <Message Id="etp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="492">In method 'EtpExtensions.ToArray(IEtpAdapter, Object)', correct the spelling of 'etp' in parameter name 'etpAdapter' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="497">In externally visible method 'EtpExtensions.ToArray(IEtpAdapter, Object)', validate parameter 'etpAdapter' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToDataAttributes(Energistics.Etp.Common.IEtpAdapter,System.Collections.IList)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="etp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="433">In method 'EtpExtensions.ToDataAttributes(IEtpAdapter, IList)', correct the spelling of 'etp' in parameter name 'etpAdapter' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="437">In externally visible method 'EtpExtensions.ToDataAttributes(IEtpAdapter, IList)', validate parameter 'etpAdapter' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="435">In externally visible method 'EtpExtensions.ToDataAttributes(IEtpAdapter, IList)', validate parameter 'dataAttributes' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToList(Energistics.Etp.Common.IEtpAdapter,System.Collections.Generic.IList`1&lt;Energistics.Etp.Common.Datatypes.ChannelData.IChannelMetadataRecord&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="etp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="479">In method 'EtpExtensions.ToList(IEtpAdapter, IList(Of IChannelMetadataRecord))', correct the spelling of 'etp' in parameter name 'etpAdapter' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="479">In externally visible method 'EtpExtensions.ToList(IEtpAdapter, IList(Of IChannelMetadataRecord))', validate parameter 'etpAdapter' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToList(Energistics.Etp.Common.IEtpAdapter,System.Collections.Generic.IList`1&lt;Energistics.Etp.Common.Datatypes.ChannelData.IIndexMetadataRecord&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="etp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="466">In method 'EtpExtensions.ToList(IEtpAdapter, IList(Of IIndexMetadataRecord))', correct the spelling of 'etp' in parameter name 'etpAdapter' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="466">In externally visible method 'EtpExtensions.ToList(IEtpAdapter, IList(Of IIndexMetadataRecord))', validate parameter 'etpAdapter' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ValidateUriObjectType(Energistics.Etp.Common.IProtocolHandler,Energistics.Etp.Common.Datatypes.EtpUri,System.Int64)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="66">Replace method 'EtpExtensions.ValidateUriObjectType(IProtocolHandler, EtpUri, Long)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="etp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="66">In method 'EtpExtensions.ValidateUriObjectType(IProtocolHandler, EtpUri, Long)', correct the spelling of 'etp' in parameter name 'etpUri' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ValidateUriParentHierarchy(Energistics.Etp.Common.Datatypes.EtpUri)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="etp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="80">In method 'EtpExtensions.ValidateUriParentHierarchy(EtpUri)', correct the spelling of 'etp' in parameter name 'etpUri' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ValidateUriParentHierarchy(Energistics.Etp.Common.IProtocolHandler,Energistics.Etp.Common.Datatypes.EtpUri,System.Int64)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="100">Replace method 'EtpExtensions.ValidateUriParentHierarchy(IProtocolHandler, EtpUri, Long)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="etp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="100">In method 'EtpExtensions.ValidateUriParentHierarchy(IProtocolHandler, EtpUri, Long)', correct the spelling of 'etp' in parameter name 'etpUri' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data" File="EtpExtensions.cs" Line="103">Because the behavior of 'String.Format(String, Object)' could vary based on the current user's locale settings, replace this call in 'EtpExtensions.ValidateUriParentHierarchy(IProtocolHandler, EtpUri, Long)' with a call to 'String.Format(IFormatProvider, String, ParamArray Object())'. If the result of 'String.Format(IFormatProvider, String, ParamArray Object())' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IndexedDataItem" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Warning">'IndexedDataItem' should override Equals.</Issue>
           <Issue Name="op_Equality" Certainty="75" Level="Warning">'IndexedDataItem' should override the equality (==) and inequality (!=) operators.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="TransferModes" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OnlyFlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1717" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If the name 'TransferModes' is plural, change it to its singular form.</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="PDS.WITSMLstudio.Data.ChangeLogs">
       <Types>
        <Type Name="DbAuditHistory" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Uri" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UriPropertiesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1056" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\ChangeLogs" File="DbAuditHistory.cs" Line="35">Change the type of property 'DbAuditHistory.Uri()' from string to System.Uri.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="PDS.WITSMLstudio.Data.Channels">
       <Types>
        <Type Name="ChannelDataBlock" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataBlock.cs" Line="48">Change the type of parameter 'uri' of method 'ChannelDataBlock.New(String)' from string to System.Uri, or provide an overload of 'ChannelDataBlock.New(String)', that allows 'uri' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddChannel(System.Int64,System.String,System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataBlock.cs" Line="131">Replace method 'ChannelDataBlock.AddChannel(Long, String, String, String, String)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddIndex(System.String,System.String,System.String,System.Boolean,System.Boolean,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataBlock.cs" Line="107">Replace method 'ChannelDataBlock.AddIndex(String, String, String, Boolean, Boolean, String)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Append(System.Int64,System.Collections.Generic.IList`1&lt;System.Object&gt;,System.Object)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataBlock.cs" Line="170">In externally visible method 'ChannelDataBlock.Append(Long, IList(Of Object), Object)', validate parameter 'indexes' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ChannelIds" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataBlock.cs" Line="74">Change 'List(Of Long)' in 'ChannelDataBlock.ChannelIds()' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DataTypes" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataBlock.cs" Line="89">Change 'List(Of String)' in 'ChannelDataBlock.DataTypes()' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetReader()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataBlock.cs" Line="200">In method 'ChannelDataBlock.GetReader()', call System.IDisposable.Dispose on object 'New ChannelDataReader(New List(Of List(Of List(Of Object)))(Me._records), Me.Mnemonics.ToArray(), Me.Units.ToArray(), Me.DataTypes.ToArray(), Me.NullValues.ToArray(), Me.Uri, Nothing)' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataBlock.cs" Line="198">Change 'ChannelDataBlock.GetReader()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Indices" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataBlock.cs" Line="69">Change 'List(Of ChannelIndexInfo)' in 'ChannelDataBlock.Indices()' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="Indices" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataBlock.cs" Line="69">Replace the term 'Indices' in member name 'ChannelDataBlock.Indices()' with the preferred alternate 'Indexes'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Mnemonics" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataBlock.cs" Line="79">Change 'List(Of String)' in 'ChannelDataBlock.Mnemonics()' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NullValues" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataBlock.cs" Line="94">Change 'List(Of String)' in 'ChannelDataBlock.NullValues()' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Units" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataBlock.cs" Line="84">Change 'List(Of String)' in 'ChannelDataBlock.Units()' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Uri" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UriPropertiesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1056" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataBlock.cs" Line="64">Change the type of property 'ChannelDataBlock.Uri()' from string to System.Uri.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ChannelDataExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AddChannel(PDS.WITSMLstudio.Data.Channels.ChannelDataBlock,System.Int32,Energistics.DataAccess.WITSML200.Channel)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Name="Reassigned" Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataExtensions.cs" Line="296">In externally visible method 'ChannelDataExtensions.AddChannel(ChannelDataBlock, Integer, Channel)', validate local variable ''...'', which was reassigned from parameter 'dataBlock', before using it.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataExtensions.cs" Line="296">In externally visible method 'ChannelDataExtensions.AddChannel(ChannelDataBlock, Integer, Channel)', validate parameter 'channel' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddIndex(PDS.WITSMLstudio.Data.Channels.ChannelDataBlock,Energistics.DataAccess.WITSML200.ComponentSchemas.ChannelIndex)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataExtensions.cs" Line="310">In externally visible method 'ChannelDataExtensions.AddIndex(ChannelDataBlock, ChannelIndex)', validate parameter 'dataBlock' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataExtensions.cs" Line="310">In externally visible method 'ChannelDataExtensions.AddIndex(ChannelDataBlock, ChannelIndex)', validate parameter 'channelIndex' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetReader(Energistics.DataAccess.WITSML131.Log)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataExtensions.cs" Line="129">In method 'ChannelDataExtensions.GetReader(Log)', call System.IDisposable.Dispose on object 'New ChannelDataReader(..., ..., Local7.Value, mnemonics, units, dataTypes, nullValues, CType(EtpUris.GetUri(log), EtpUri), Nothing, Nothing)' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataExtensions.cs" Line="114">In externally visible method 'ChannelDataExtensions.GetReader(Log)', validate parameter 'log' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetReader(Energistics.DataAccess.WITSML200.ChannelSet)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataExtensions.cs" Line="214">In method 'ChannelDataExtensions.GetReader(ChannelSet)', call System.IDisposable.Dispose on object 'New ChannelDataReader(data, mnemonics, units, dataTypes, nullValues, CType(EtpUris.GetUri(channelSet), EtpUri), Nothing)' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataExtensions.cs" Line="206">In externally visible method 'ChannelDataExtensions.GetReader(ChannelSet)', validate parameter 'channelSet' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetReaders(Energistics.DataAccess.WITSML141.Log)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataExtensions.cs" Line="171">In method 'ChannelDataExtensions.GetReaders(Log)', call System.IDisposable.Dispose on object 'New ChannelDataReader(logData.Data, (mnemonics.Length + 1), mnemonics, units, dataTypes, nullValues, CType(EtpUris.GetUri(Me.log), EtpUri), Nothing, LogExtensions.GetDataDelimiterOrDefault(Me.log))' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HandleInvalidDataRow(PDS.WITSMLstudio.WitsmlException,System.Collections.Generic.ICollection`1&lt;Energistics.DataAccess.Validation.WitsmlValidationResult&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataExtensions.cs" Line="351">Replace method 'ChannelDataExtensions.HandleInvalidDataRow(WitsmlException, ICollection(Of WitsmlValidationResult))' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataExtensions.cs" Line="354">In externally visible method 'ChannelDataExtensions.HandleInvalidDataRow(WitsmlException, ICollection(Of WitsmlValidationResult))', validate parameter 'error' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsIncreasing(Energistics.DataAccess.WITSML200.ChannelSet)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataExtensions.cs" Line="70">In externally visible method 'ChannelDataExtensions.IsIncreasing(ChannelSet)', validate parameter 'channelSet' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsIncreasing(Energistics.DataAccess.WITSML200.ComponentSchemas.ChannelIndex)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataExtensions.cs" Line="80">In externally visible method 'ChannelDataExtensions.IsIncreasing(ChannelIndex)', validate parameter 'channelIndex' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsTimeIndex(Energistics.DataAccess.WITSML200.ChannelSet,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataExtensions.cs" Line="91">Replace method 'ChannelDataExtensions.IsTimeIndex(ChannelSet, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataExtensions.cs" Line="92">In externally visible method 'ChannelDataExtensions.IsTimeIndex(ChannelSet, Boolean)', validate parameter 'channelSet' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsTimeIndex(Energistics.DataAccess.WITSML200.ComponentSchemas.ChannelIndex,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataExtensions.cs" Line="103">Replace method 'ChannelDataExtensions.IsTimeIndex(ChannelIndex, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataExtensions.cs" Line="103">In externally visible method 'ChannelDataExtensions.IsTimeIndex(ChannelIndex, Boolean)', validate parameter 'channelIndex' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToChannelIndexInfo(Energistics.DataAccess.WITSML200.ComponentSchemas.ChannelIndex)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataExtensions.cs" Line="279">In externally visible method 'ChannelDataExtensions.ToChannelIndexInfo(ChannelIndex)', validate parameter 'channelIndex' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ValidateRowDataCount(System.String[],System.String,System.Nullable`1&lt;System.Int32&gt;,System.Collections.Generic.ICollection`1&lt;Energistics.DataAccess.Validation.WitsmlValidationResult&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataExtensions.cs" Line="328">Replace method 'ChannelDataExtensions.ValidateRowDataCount(String(), String, Integer?, ICollection(Of WitsmlValidationResult))' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataExtensions.cs" Line="335">Because the behavior of 'String.Format(String, Object, Object, Object)' could vary based on the current user's locale settings, replace this call in 'ChannelDataExtensions.ValidateRowDataCount(String(), String, Integer?, ICollection(Of WitsmlValidationResult))' with a call to 'String.Format(IFormatProvider, String, ParamArray Object())'. If the result of 'String.Format(IFormatProvider, String, ParamArray Object())' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataExtensions.cs" Line="328">In externally visible method 'ChannelDataExtensions.ValidateRowDataCount(String(), String, Integer?, ICollection(Of WitsmlValidationResult))', validate parameter 'values' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WithIndex(PDS.WITSMLstudio.Data.Channels.ChannelDataReader,System.String,System.String,System.Boolean,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataExtensions.cs" Line="240">In externally visible method 'ChannelDataExtensions.WithIndex(ChannelDataReader, String, String, Boolean, Boolean)', validate parameter 'reader' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WithIndices(PDS.WITSMLstudio.Data.Channels.ChannelDataReader,System.Collections.Generic.IEnumerable`1&lt;PDS.WITSMLstudio.Data.Channels.ChannelIndexInfo&gt;,System.Boolean,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataExtensions.cs" Line="256">Replace method 'ChannelDataExtensions.WithIndices(ChannelDataReader, IEnumerable(Of ChannelIndexInfo), Boolean, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Indices" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataExtensions.cs" Line="256">Replace the term 'Indices' in member name 'ChannelDataExtensions.WithIndices(ChannelDataReader, IEnumerable(Of ChannelIndexInfo), Boolean, Boolean)' with the preferred alternate 'Indexes'.</Issue>
            </Message>
            <Message Id="indices" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataExtensions.cs" Line="256">In member 'ChannelDataExtensions.WithIndices(ChannelDataReader, IEnumerable(Of ChannelIndexInfo), Boolean, Boolean)', replace the term 'indices' in parameter name 'indices' with the preferred alternate 'indexes'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataExtensions.cs" Line="260">In externally visible method 'ChannelDataExtensions.WithIndices(ChannelDataReader, IEnumerable(Of ChannelIndexInfo), Boolean, Boolean)', validate parameter 'reader' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataExtensions.cs" Line="258">In externally visible method 'ChannelDataExtensions.WithIndices(ChannelDataReader, IEnumerable(Of ChannelIndexInfo), Boolean, Boolean)', validate parameter 'indices' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ChannelDataReader" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="Warning">'ChannelDataReader' is coupled with 81 different types from 20 different namespaces. Rewrite or refactor this class's methods to decrease its class coupling, or consider moving some of the class's methods to some of the other types it is tightly coupled with. A class coupling above 95 indicates poor maintainability, a class coupling between 95 and 80 indicates moderate maintainability, and a class coupling below 80 indicates good maintainability.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Collections.Generic.IList`1&lt;System.String&gt;,System.Int32,System.Collections.Generic.IList`1&lt;System.String&gt;,System.Collections.Generic.IList`1&lt;System.String&gt;,System.Collections.Generic.IList`1&lt;System.String&gt;,System.Collections.Generic.IList`1&lt;System.String&gt;,System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="126">Replace method 'ChannelDataReader.New(IList(Of String), Integer, IList(Of String), IList(Of String), IList(Of String), IList(Of String), String, String, String)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="6#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="126">Change the type of parameter 'uri' of method 'ChannelDataReader.New(IList(Of String), Integer, IList(Of String), IList(Of String), IList(Of String), IList(Of String), String, String, String)' from string to System.Uri, or provide an overload of 'ChannelDataReader.New(IList(Of String), Integer, IList(Of String), IList(Of String), IList(Of String), IList(Of String), String, String, String)', that allows 'uri' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.Collections.Generic.IList`1&lt;System.String&gt;,System.Int32,System.Int32,System.String[],System.String[],System.String[],System.String[],System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="144">Replace method 'ChannelDataReader.New(IList(Of String), Integer, Integer, String(), String(), String(), String(), String, String, String)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="7#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="144">Change the type of parameter 'uri' of method 'ChannelDataReader.New(IList(Of String), Integer, Integer, String(), String(), String(), String(), String, String, String)' from string to System.Uri, or provide an overload of 'ChannelDataReader.New(IList(Of String), Integer, Integer, String(), String(), String(), String(), String, String, String)', that allows 'uri' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.Collections.Generic.IList`1&lt;System.String&gt;,System.Collections.Generic.IList`1&lt;System.String&gt;,System.Collections.Generic.IList`1&lt;System.String&gt;,System.Collections.Generic.IList`1&lt;System.String&gt;,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="159">Replace method 'ChannelDataReader.New(String, IList(Of String), IList(Of String), IList(Of String), IList(Of String), String, String)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="5#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="159">Change the type of parameter 'uri' of method 'ChannelDataReader.New(String, IList(Of String), IList(Of String), IList(Of String), IList(Of String), String, String)' from string to System.Uri, or provide an overload of 'ChannelDataReader.New(String, IList(Of String), IList(Of String), IList(Of String), IList(Of String), String, String)', that allows 'uri' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CalculateChannelIndexRanges()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="log4net.ILog.DebugFormat(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="1953">Because the behavior of 'ILog.DebugFormat(String, ParamArray Object())' could vary based on the current user's locale settings, replace this call in 'ChannelDataReader.CalculateChannelIndexRanges()' with a call to 'ILog.DebugFormat(IFormatProvider, String, ParamArray Object())'. If the result of 'ILog.DebugFormat(IFormatProvider, String, ParamArray Object())' will be based on input from the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Combine(System.Collections.Generic.IList`1&lt;System.String&gt;,System.String,System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="2066">Because the behavior of 'String.Format(String, Object, Object)' could vary based on the current user's locale settings, replace this call in 'ChannelDataReader.Combine(IList(Of String), String, Integer, Integer)' with a call to 'String.Format(IFormatProvider, String, ParamArray Object())'. If the result of 'String.Format(IFormatProvider, String, ParamArray Object())' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="2094">Because the behavior of 'String.Format(String, Object, Object, Object)' could vary based on the current user's locale settings, replace this call in 'ChannelDataReader.Combine(IList(Of String), String, Integer, Integer)' with a call to 'String.Format(IFormatProvider, String, ParamArray Object())'. If the result of 'String.Format(IFormatProvider, String, ParamArray Object())' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CopyChannelSettings(PDS.WITSMLstudio.Data.Channels.IChannelDataRecord,PDS.WITSMLstudio.Framework.Range`1&lt;System.Nullable`1&lt;System.Double&gt;&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="748">In externally visible method 'ChannelDataReader.CopyChannelSettings(IChannelDataRecord, Range(Of Double?))', validate parameter 'record' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="NotCalled" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="2352">Change 'ChannelDataReader.Dispose()' to call 'GC.SuppressFinalize(Object)'. This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FormatColumnName(System.String,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="2222">The 'this' parameter (or 'Me' in Visual Basic) of 'ChannelDataReader.FormatColumnName(String, String)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetByte(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Byte.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="895">Because the behavior of 'Byte.Parse(String)' could vary based on the current user's locale settings, replace this call in 'ChannelDataReader.GetByte(Integer)' with a call to 'Byte.Parse(String, IFormatProvider)'. If the result of 'Byte.Parse(String, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetChannelRanges()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="826">Consider a design where 'ChannelDataReader.GetChannelRanges()' doesn't nest generic type 'Dictionary(Of String, Range(Of Double?))'.</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="826">Change 'ChannelDataReader.GetChannelRanges()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetData(PDS.WITSMLstudio.Data.Channels.IQueryContext,System.Collections.Generic.IDictionary`2&lt;System.Int32,System.String&gt;,System.Collections.Generic.IDictionary`2&lt;System.Int32,System.String&gt;,System.Collections.Generic.IDictionary`2&lt;System.Int32,System.String&gt;,System.Collections.Generic.IDictionary`2&lt;System.Int32,System.String&gt;,System.Collections.Generic.Dictionary`2&lt;System.String,PDS.WITSMLstudio.Framework.Range`1&lt;System.Nullable`1&lt;System.Double&gt;&gt;&gt;&amp;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="1558">'ChannelDataReader.GetData(IQueryContext, IDictionary(Of Integer, String), IDictionary(Of Integer, String), IDictionary(Of Integer, String), IDictionary(Of Integer, String), ByRef Dictionary(Of String, Range(Of Double?)))' has a cyclomatic complexity of 27. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message Id="5#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="1558">Consider a design that does not require that 'ranges' be an out parameter.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="1679">In method 'ChannelDataReader.GetData(IQueryContext, IDictionary(Of Integer, String), IDictionary(Of Integer, String), IDictionary(Of Integer, String), IDictionary(Of Integer, String), ByRef Dictionary(Of String, Range(Of Double?)))', call System.IDisposable.Dispose on object 'New ChannelDataReader(channelData, Enumerable.ToList(Of String)(FrameworkExtensions.Skip(Of String)(slicedMnemonics, MyBase.Depth)), Enumerable.ToList(Of String)(Enumerable.Skip(Of String)(units.Values, MyBase.Depth)), Enumerable.ToList(Of String)(Enumerable.Skip(Of String)(dataTypes.Values, MyBase.Depth)), Enumerable.ToList(Of String)(Enumerable.Skip(Of String)(nullValues.Values, MyBase.Depth)), Nothing, Nothing)' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="1558">Change 'List(Of List(Of List(Of Object)))' in 'ChannelDataReader.GetData(IQueryContext, IDictionary(Of Integer, String), IDictionary(Of Integer, String), IDictionary(Of Integer, String), IDictionary(Of Integer, String), ByRef Dictionary(Of String, Range(Of Double?)))' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="1558">Consider a design where 'ChannelDataReader.GetData(IQueryContext, IDictionary(Of Integer, String), IDictionary(Of Integer, String), IDictionary(Of Integer, String), IDictionary(Of Integer, String), ByRef Dictionary(Of String, Range(Of Double?)))' doesn't nest generic type 'List(Of List(Of List(Of Object)))'.</Issue>
            </Message>
            <Message Id="System.DateTimeOffset.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="1618">Because the behavior of 'DateTimeOffset.ToString(String)' could vary based on the current user's locale settings, replace this call in 'ChannelDataReader.GetData(IQueryContext, IDictionary(Of Integer, String), IDictionary(Of Integer, String), IDictionary(Of Integer, String), IDictionary(Of Integer, String), ByRef Dictionary(Of String, Range(Of Double?)))' with a call to 'DateTimeOffset.ToString(String, IFormatProvider)'. If the result of 'DateTimeOffset.ToString(String, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="1560">In externally visible method 'ChannelDataReader.GetData(IQueryContext, IDictionary(Of Integer, String), IDictionary(Of Integer, String), IDictionary(Of Integer, String), IDictionary(Of Integer, String), ByRef Dictionary(Of String, Range(Of Double?)))', validate parameter 'context' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="1568">In externally visible method 'ChannelDataReader.GetData(IQueryContext, IDictionary(Of Integer, String), IDictionary(Of Integer, String), IDictionary(Of Integer, String), IDictionary(Of Integer, String), ByRef Dictionary(Of String, Range(Of Double?)))', validate parameter 'mnemonicSlices' before using it.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="1679">In externally visible method 'ChannelDataReader.GetData(IQueryContext, IDictionary(Of Integer, String), IDictionary(Of Integer, String), IDictionary(Of Integer, String), IDictionary(Of Integer, String), ByRef Dictionary(Of String, Range(Of Double?)))', validate parameter 'units' before using it.</Issue>
            </Message>
            <Message Id="3" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="1679">In externally visible method 'ChannelDataReader.GetData(IQueryContext, IDictionary(Of Integer, String), IDictionary(Of Integer, String), IDictionary(Of Integer, String), IDictionary(Of Integer, String), ByRef Dictionary(Of String, Range(Of Double?)))', validate parameter 'dataTypes' before using it.</Issue>
            </Message>
            <Message Id="4" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="1679">In externally visible method 'ChannelDataReader.GetData(IQueryContext, IDictionary(Of Integer, String), IDictionary(Of Integer, String), IDictionary(Of Integer, String), IDictionary(Of Integer, String), ByRef Dictionary(Of String, Range(Of Double?)))', validate parameter 'nullValues' before using it.</Issue>
            </Message>
            <Message Id="5" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Name="Reassigned" Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="1671">In externally visible method 'ChannelDataReader.GetData(IQueryContext, IDictionary(Of Integer, String), IDictionary(Of Integer, String), IDictionary(Of Integer, String), IDictionary(Of Integer, String), ByRef Dictionary(Of String, Range(Of Double?)))', validate local variable ''(*ranges)'', which was reassigned from parameter 'ranges', before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetDateTime(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.DateTime.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="979">Because the behavior of 'Date.Parse(String)' could vary based on the current user's locale settings, replace this call in 'ChannelDataReader.GetDateTime(Integer)' with a call to 'Date.Parse(String, IFormatProvider)'. If the result of 'Date.Parse(String, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetDateTimeOffset(System.Collections.Generic.IEnumerable`1&lt;System.Object&gt;,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="i" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="1001">In method 'ChannelDataReader.GetDateTimeOffset(IEnumerable(Of Object), Integer)', consider providing a more meaningful name than parameter name 'i'.</Issue>
            </Message>
            <Message Id="System.DateTimeOffset.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="1002">Because the behavior of 'DateTimeOffset.Parse(String)' could vary based on the current user's locale settings, replace this call in 'ChannelDataReader.GetDateTimeOffset(IEnumerable(Of Object), Integer)' with a call to 'DateTimeOffset.Parse(String, IFormatProvider)'. If the result of 'DateTimeOffset.Parse(String, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetDateTimeOffset(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.DateTimeOffset.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="990">Because the behavior of 'DateTimeOffset.Parse(String)' could vary based on the current user's locale settings, replace this call in 'ChannelDataReader.GetDateTimeOffset(Integer)' with a call to 'DateTimeOffset.Parse(String, IFormatProvider)'. If the result of 'DateTimeOffset.Parse(String, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetDecimal(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Decimal.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="1024">Because the behavior of 'Decimal.Parse(String)' could vary based on the current user's locale settings, replace this call in 'ChannelDataReader.GetDecimal(Integer)' with a call to 'Decimal.Parse(String, IFormatProvider)'. If the result of 'Decimal.Parse(String, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetDouble(System.Collections.Generic.IEnumerable`1&lt;System.Object&gt;,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="i" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="1051">In method 'ChannelDataReader.GetDouble(IEnumerable(Of Object), Integer)', consider providing a more meaningful name than parameter name 'i'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetIndex(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="767">Replace method 'ChannelDataReader.GetIndex(Integer)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetIndexRange(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="808">Replace method 'ChannelDataReader.GetIndexRange(Integer)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetIndexValue(System.Collections.Generic.IEnumerable`1&lt;System.Object&gt;,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="794">Replace method 'ChannelDataReader.GetIndexValue(IEnumerable(Of Object), Integer, Integer)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetIndexValue(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="778">Replace method 'ChannelDataReader.GetIndexValue(Integer, Integer)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetInt16(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int16.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="1124">Because the behavior of 'Short.Parse(String)' could vary based on the current user's locale settings, replace this call in 'ChannelDataReader.GetInt16(Integer)' with a call to 'Short.Parse(String, IFormatProvider)'. If the result of 'Short.Parse(String, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetInt32(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="1136">Because the behavior of 'Integer.Parse(String)' could vary based on the current user's locale settings, replace this call in 'ChannelDataReader.GetInt32(Integer)' with a call to 'Integer.Parse(String, IFormatProvider)'. If the result of 'Integer.Parse(String, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetInt64(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int64.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="1148">Because the behavior of 'Long.Parse(String)' could vary based on the current user's locale settings, replace this call in 'ChannelDataReader.GetInt64(Integer)' with a call to 'Long.Parse(String, IFormatProvider)'. If the result of 'Long.Parse(String, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetOrdinal(System.String,System.Collections.Generic.Dictionary`2&lt;System.String,System.Int32&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="1197">The 'this' parameter (or 'Me' in Visual Basic) of 'ChannelDataReader.GetOrdinal(String, Dictionary(Of String, Integer))' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSchemaTable()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="1215">Be sure to set the DataTable Locale property wherever 'ChannelDataReader.GetSchemaTable()' creates an instance of that type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetString(System.Collections.Generic.IEnumerable`1&lt;System.Object&gt;,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="i" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="1249">In method 'ChannelDataReader.GetString(IEnumerable(Of Object), Integer)', consider providing a more meaningful name than parameter name 'i'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="1249">Because the behavior of 'String.Format(String, Object)' could vary based on the current user's locale settings, replace this call in 'ChannelDataReader.GetString(IEnumerable(Of Object), Integer)' with a call to 'String.Format(IFormatProvider, String, ParamArray Object())'. If the result of 'String.Format(IFormatProvider, String, ParamArray Object())' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetString(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="1236">Because the behavior of 'String.Format(String, Object)' could vary based on the current user's locale settings, replace this call in 'ChannelDataReader.GetString(Integer)' with a call to 'String.Format(IFormatProvider, String, ParamArray Object())'. If the result of 'String.Format(IFormatProvider, String, ParamArray Object())' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetValue(System.Collections.Generic.IEnumerable`1&lt;System.Object&gt;,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="i" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="1291">In method 'ChannelDataReader.GetValue(IEnumerable(Of Object), Integer)', consider providing a more meaningful name than parameter name 'i'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HasRequestedValuesForAllChannels(System.Collections.Generic.Dictionary`2&lt;System.Int32,System.Int32&gt;,System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="1826">The 'this' parameter (or 'Me' in Visual Basic) of 'ChannelDataReader.HasRequestedValuesForAllChannels(Dictionary(Of Integer, Integer), Integer)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Indices" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="324">Change 'List(Of ChannelIndexInfo)' in 'ChannelDataReader.Indices()' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeSliceRanges(System.String[])" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="1739">The 'this' parameter (or 'Me' in Visual Basic) of 'ChannelDataReader.InitializeSliceRanges(String())' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MergeRecord(PDS.WITSMLstudio.Data.Channels.IChannelDataRecord,System.Int64,PDS.WITSMLstudio.Data.Channels.IndexOrder,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="522">In externally visible method 'ChannelDataReader.MergeRecord(IChannelDataRecord, Long, IndexOrder, Boolean)', validate parameter 'update' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PartialDeleteRecord(System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.Dictionary`2&lt;System.String,PDS.WITSMLstudio.Framework.Range`1&lt;System.Nullable`1&lt;System.Double&gt;&gt;&gt;,System.Collections.Generic.Dictionary`2&lt;System.String,System.Collections.Generic.List`1&lt;System.Nullable`1&lt;System.Double&gt;&gt;&gt;,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="704">Change 'List(Of String)' in 'ChannelDataReader.PartialDeleteRecord(List(Of String), Dictionary(Of String, Range(Of Double?)), Dictionary(Of String, List(Of Double?)), Boolean)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="711">In externally visible method 'ChannelDataReader.PartialDeleteRecord(List(Of String), Dictionary(Of String, Range(Of Double?)), Dictionary(Of String, List(Of Double?)), Boolean)', validate parameter 'deletedChannels' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="714">In externally visible method 'ChannelDataReader.PartialDeleteRecord(List(Of String), Dictionary(Of String, Range(Of Double?)), Dictionary(Of String, List(Of Double?)), Boolean)', validate parameter 'ranges' before using it.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="717">In externally visible method 'ChannelDataReader.PartialDeleteRecord(List(Of String), Dictionary(Of String, Range(Of Double?)), Dictionary(Of String, List(Of Double?)), Boolean)', validate parameter 'updatedRanges' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Sort(System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="1445">Replace method 'ChannelDataReader.Sort(Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="1456">Because the behavior of 'Convert.ToDouble(Object)' could vary based on the current user's locale settings, replace this call in 'ChannelDataReader.Sort(Boolean)' with a call to 'Convert.ToDouble(Object, IFormatProvider)'. If the result of 'Convert.ToDouble(Object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Split(System.String,System.String,System.Nullable`1&lt;System.Int32&gt;,System.Collections.Generic.ICollection`1&lt;Energistics.DataAccess.Validation.WitsmlValidationResult&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="406">Replace method 'ChannelDataReader.Split(String, String, Integer?, ICollection(Of WitsmlValidationResult))' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="421">Modify 'ChannelDataReader.Split(String, String, Integer?, ICollection(Of WitsmlValidationResult))' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="449">Modify 'ChannelDataReader.Split(String, String, Integer?, ICollection(Of WitsmlValidationResult))' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="410">In externally visible method 'ChannelDataReader.Split(String, String, Integer?, ICollection(Of WitsmlValidationResult))', validate parameter 'delimiter' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateChannelSettings(PDS.WITSMLstudio.Data.Channels.IChannelDataRecord,System.Boolean,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="617">Replace method 'ChannelDataReader.UpdateChannelSettings(IChannelDataRecord, Boolean, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="625">In externally visible method 'ChannelDataReader.UpdateChannelSettings(IChannelDataRecord, Boolean, Boolean)', validate parameter 'record' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WithinDeleteRange(System.Double,PDS.WITSMLstudio.Framework.Range`1&lt;System.Nullable`1&lt;System.Double&gt;&gt;,System.Boolean)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelDataReader.cs" Line="2307">The 'this' parameter (or 'Me' in Visual Basic) of 'ChannelDataReader.WithinDeleteRange(Double, Range(Of Double?), Boolean)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ChannelStreamingContext" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CustomData" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Channels" File="ChannelStreamingContext.cs" Line="109">Change 'ChannelStreamingContext.CustomData()' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ChannelStreamingTypes" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OnlyFlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1717" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If the name 'ChannelStreamingTypes' is plural, change it to its singular form.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="IChannelDataRecord" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CopyChannelSettings(PDS.WITSMLstudio.Data.Channels.IChannelDataRecord,PDS.WITSMLstudio.Framework.Range`1&lt;System.Nullable`1&lt;System.Double&gt;&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError">Consider a design where 'IChannelDataRecord.CopyChannelSettings(IChannelDataRecord, Range(Of Double?))' doesn't nest generic type 'Range(Of Double?)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetChannelIndexRange(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError">Consider a design where 'IChannelDataRecord.GetChannelIndexRange(Integer)' doesn't nest generic type 'Range(Of Double?)'.</Issue>
            </Message>
            <Message Id="i" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">In method 'IChannelDataRecord.GetChannelIndexRange(Integer)', consider providing a more meaningful name than parameter name 'i'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetDateTimeOffset(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="i" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">In method 'IChannelDataRecord.GetDateTimeOffset(Integer)', consider providing a more meaningful name than parameter name 'i'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetIndex(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error">Replace method 'IChannelDataRecord.GetIndex(Integer)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetIndexRange(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error">Replace method 'IChannelDataRecord.GetIndexRange(Integer)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError">Consider a design where 'IChannelDataRecord.GetIndexRange(Integer)' doesn't nest generic type 'Range(Of Double?)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetIndexValue(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error">Replace method 'IChannelDataRecord.GetIndexValue(Integer, Integer)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetJson()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'IChannelDataRecord.GetJson()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUnixTimeMicroseconds(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="i" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">In method 'IChannelDataRecord.GetUnixTimeMicroseconds(Integer)', consider providing a more meaningful name than parameter name 'i'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Indices" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List(Of ChannelIndexInfo)' in 'IChannelDataRecord.Indices()' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="Indices" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Replace the term 'Indices' in member name 'IChannelDataRecord.Indices()' with the preferred alternate 'Indexes'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PartialDeleteRecord(System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.Dictionary`2&lt;System.String,PDS.WITSMLstudio.Framework.Range`1&lt;System.Nullable`1&lt;System.Double&gt;&gt;&gt;,System.Collections.Generic.Dictionary`2&lt;System.String,System.Collections.Generic.List`1&lt;System.Nullable`1&lt;System.Double&gt;&gt;&gt;,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List(Of String)' in 'IChannelDataRecord.PartialDeleteRecord(List(Of String), Dictionary(Of String, Range(Of Double?)), Dictionary(Of String, List(Of Double?)), Boolean)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError">Consider a design where 'IChannelDataRecord.PartialDeleteRecord(List(Of String), Dictionary(Of String, Range(Of Double?)), Dictionary(Of String, List(Of Double?)), Boolean)' doesn't nest generic type 'Dictionary(Of String, List(Of Double?))'.</Issue>
             <Issue Certainty="95" Level="CriticalError">Consider a design where 'IChannelDataRecord.PartialDeleteRecord(List(Of String), Dictionary(Of String, Range(Of Double?)), Dictionary(Of String, List(Of Double?)), Boolean)' doesn't nest generic type 'Dictionary(Of String, Range(Of Double?))'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetValue(System.Int32,System.Object)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="i" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">In method 'IChannelDataRecord.SetValue(Integer, Object)', consider providing a more meaningful name than parameter name 'i'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Uri" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UriPropertiesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1056" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error">Change the type of property 'IChannelDataRecord.Uri()' from string to System.Uri.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="PDS.WITSMLstudio.Data.Logs">
       <Types>
        <Type Name="Log131Generator" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CreateLogCurveInfo(System.String,System.String,Energistics.DataAccess.WITSML131.ReferenceData.LogDataType,System.Int16)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log131Generator.cs" Line="108">The 'this' parameter (or 'Me' in Visual Basic) of 'Log131Generator.CreateLogCurveInfo(String, String, LogDataType, Short)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DepthIndexTypes" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ArrayFieldsShouldNotBeReadOnly" Category="Microsoft.Security" CheckId="CA2105" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="CriticalWarning">Either replace 'Log131Generator.DepthIndexTypes' with a strongly typed collection that cannot be changed, or replace the public field with a method that returns a clone of a private array.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Log131Generator.DepthIndexTypes' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GenerateLogData(Energistics.DataAccess.WITSML131.Log,System.Int32,System.Double,System.Double,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log131Generator.cs" Line="129">Replace method 'Log131Generator.GenerateLogData(Log, Integer, Double, Double, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="num" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log131Generator.cs" Line="129">In method 'Log131Generator.GenerateLogData(Log, Integer, Double, Double, Boolean)', correct the spelling of 'num' in parameter name 'numOfRows' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log131Generator.cs" Line="130">In externally visible method 'Log131Generator.GenerateLogData(Log, Integer, Double, Double, Boolean)', validate parameter 'log' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GenerateLogData(System.Collections.Generic.List`1&lt;Energistics.DataAccess.WITSML131.ComponentSchemas.LogCurveInfo&gt;,System.Collections.Generic.List`1&lt;System.String&gt;,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log131Generator.cs" Line="197">Replace method 'Log131Generator.GenerateLogData(List(Of LogCurveInfo), List(Of String), Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log131Generator.cs" Line="197">Change 'List(Of LogCurveInfo)' in 'Log131Generator.GenerateLogData(List(Of LogCurveInfo), List(Of String), Boolean)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log131Generator.cs" Line="197">Change 'List(Of String)' in 'Log131Generator.GenerateLogData(List(Of LogCurveInfo), List(Of String), Boolean)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log131Generator.cs" Line="197">Change 'List(Of String)' in 'Log131Generator.GenerateLogData(List(Of LogCurveInfo), List(Of String), Boolean)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="Infos" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log131Generator.cs" Line="197">In method 'Log131Generator.GenerateLogData(List(Of LogCurveInfo), List(Of String), Boolean)', correct the spelling of 'Infos' in parameter name 'logCurveInfos' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="System.DateTimeOffset.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log131Generator.cs" Line="225">Because the behavior of 'DateTimeOffset.ToString(String)' could vary based on the current user's locale settings, replace this call in 'Log131Generator.GenerateLogData(List(Of LogCurveInfo), List(Of String), Boolean)' with a call to 'DateTimeOffset.ToString(String, IFormatProvider)'. If the result of 'DateTimeOffset.ToString(String, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log131Generator.cs" Line="202">In externally visible method 'Log131Generator.GenerateLogData(List(Of LogCurveInfo), List(Of String), Boolean)', validate parameter 'logCurveInfos' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log131Generator.cs" Line="202">In externally visible method 'Log131Generator.GenerateLogData(List(Of LogCurveInfo), List(Of String), Boolean)', validate parameter 'indexes' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GenerateLogDataIndexes(Energistics.DataAccess.WITSML131.Log,System.Int32,System.Double,System.Double)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log131Generator.cs" Line="151">Replace method 'Log131Generator.GenerateLogDataIndexes(Log, Integer, Double, Double)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log131Generator.cs" Line="151">Change 'List(Of String)' in 'Log131Generator.GenerateLogDataIndexes(Log, Integer, Double, Double)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="num" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log131Generator.cs" Line="151">In method 'Log131Generator.GenerateLogDataIndexes(Log, Integer, Double, Double)', correct the spelling of 'num' in parameter name 'numOfRows' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log131Generator.cs" Line="153">In externally visible method 'Log131Generator.GenerateLogDataIndexes(Log, Integer, Double, Double)', validate parameter 'log' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OtherIndexTypes" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ArrayFieldsShouldNotBeReadOnly" Category="Microsoft.Security" CheckId="CA2105" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="CriticalWarning">Either replace 'Log131Generator.OtherIndexTypes' with a strongly typed collection that cannot be changed, or replace the public field with a method that returns a clone of a private array.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Log131Generator.OtherIndexTypes' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TimeIndexTypes" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ArrayFieldsShouldNotBeReadOnly" Category="Microsoft.Security" CheckId="CA2105" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="CriticalWarning">Either replace 'Log131Generator.TimeIndexTypes' with a strongly typed collection that cannot be changed, or replace the public field with a method that returns a clone of a private array.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Log131Generator.TimeIndexTypes' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Log141Generator" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CreateLogCurveInfo(System.String,System.String,Energistics.DataAccess.WITSML141.ReferenceData.LogDataType)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log141Generator.cs" Line="105">The 'this' parameter (or 'Me' in Visual Basic) of 'Log141Generator.CreateLogCurveInfo(String, String, LogDataType)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DepthIndexTypes" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ArrayFieldsShouldNotBeReadOnly" Category="Microsoft.Security" CheckId="CA2105" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="CriticalWarning">Either replace 'Log141Generator.DepthIndexTypes' with a strongly typed collection that cannot be changed, or replace the public field with a method that returns a clone of a private array.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Log141Generator.DepthIndexTypes' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GenerateLogData(Energistics.DataAccess.WITSML141.Log,System.Int32,System.Double,System.Double,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log141Generator.cs" Line="125">Replace method 'Log141Generator.GenerateLogData(Log, Integer, Double, Double, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="num" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log141Generator.cs" Line="125">In method 'Log141Generator.GenerateLogData(Log, Integer, Double, Double, Boolean)', correct the spelling of 'num' in parameter name 'numOfRows' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log141Generator.cs" Line="126">In externally visible method 'Log141Generator.GenerateLogData(Log, Integer, Double, Double, Boolean)', validate parameter 'log' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GenerateLogData(System.Collections.Generic.List`1&lt;Energistics.DataAccess.WITSML141.ComponentSchemas.LogCurveInfo&gt;,System.Collections.Generic.List`1&lt;System.String&gt;,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log141Generator.cs" Line="193">Replace method 'Log141Generator.GenerateLogData(List(Of LogCurveInfo), List(Of String), Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log141Generator.cs" Line="193">Change 'List(Of LogCurveInfo)' in 'Log141Generator.GenerateLogData(List(Of LogCurveInfo), List(Of String), Boolean)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log141Generator.cs" Line="193">Change 'List(Of String)' in 'Log141Generator.GenerateLogData(List(Of LogCurveInfo), List(Of String), Boolean)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="Infos" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log141Generator.cs" Line="193">In method 'Log141Generator.GenerateLogData(List(Of LogCurveInfo), List(Of String), Boolean)', correct the spelling of 'Infos' in parameter name 'logCurveInfos' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="System.DateTimeOffset.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log141Generator.cs" Line="233">Because the behavior of 'DateTimeOffset.ToString(String)' could vary based on the current user's locale settings, replace this call in 'Log141Generator.GenerateLogData(List(Of LogCurveInfo), List(Of String), Boolean)' with a call to 'DateTimeOffset.ToString(String, IFormatProvider)'. If the result of 'DateTimeOffset.ToString(String, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log141Generator.cs" Line="205">In externally visible method 'Log141Generator.GenerateLogData(List(Of LogCurveInfo), List(Of String), Boolean)', validate parameter 'logCurveInfos' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log141Generator.cs" Line="205">In externally visible method 'Log141Generator.GenerateLogData(List(Of LogCurveInfo), List(Of String), Boolean)', validate parameter 'indexes' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GenerateLogDataIndexes(Energistics.DataAccess.WITSML141.Log,System.Int32,System.Double,System.Double)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log141Generator.cs" Line="147">Replace method 'Log141Generator.GenerateLogDataIndexes(Log, Integer, Double, Double)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log141Generator.cs" Line="147">Change 'List(Of String)' in 'Log141Generator.GenerateLogDataIndexes(Log, Integer, Double, Double)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="num" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log141Generator.cs" Line="147">In method 'Log141Generator.GenerateLogDataIndexes(Log, Integer, Double, Double)', correct the spelling of 'num' in parameter name 'numOfRows' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log141Generator.cs" Line="149">In externally visible method 'Log141Generator.GenerateLogDataIndexes(Log, Integer, Double, Double)', validate parameter 'log' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OtherIndexTypes" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ArrayFieldsShouldNotBeReadOnly" Category="Microsoft.Security" CheckId="CA2105" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="CriticalWarning">Either replace 'Log141Generator.OtherIndexTypes' with a strongly typed collection that cannot be changed, or replace the public field with a method that returns a clone of a private array.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Log141Generator.OtherIndexTypes' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TimeIndexTypes" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ArrayFieldsShouldNotBeReadOnly" Category="Microsoft.Security" CheckId="CA2105" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="CriticalWarning">Either replace 'Log141Generator.TimeIndexTypes' with a strongly typed collection that cannot be changed, or replace the public field with a method that returns a clone of a private array.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Log141Generator.TimeIndexTypes' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Log200Generator" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CreateChannel(Energistics.DataAccess.WITSML200.Log,System.Collections.Generic.List`1&lt;Energistics.DataAccess.WITSML200.ComponentSchemas.ChannelIndex&gt;,System.String,System.String,System.Nullable`1&lt;Energistics.DataAccess.ExtensibleEnum`1&lt;Energistics.DataAccess.WITSML200.ReferenceData.UnitOfMeasure&gt;&gt;,System.String,Energistics.DataAccess.WITSML200.ReferenceData.EtpDataType,System.Collections.Generic.List`1&lt;Energistics.DataAccess.WITSML200.ComponentSchemas.PointMetadata&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log200Generator.cs" Line="191">Change 'List(Of ChannelIndex)' in 'Log200Generator.CreateChannel(Log, List(Of ChannelIndex), String, String, ExtensibleEnum(Of UnitOfMeasure)?, String, EtpDataType, List(Of PointMetadata))' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log200Generator.cs" Line="191">Change 'List(Of PointMetadata)' in 'Log200Generator.CreateChannel(Log, List(Of ChannelIndex), String, String, ExtensibleEnum(Of UnitOfMeasure)?, String, EtpDataType, List(Of PointMetadata))' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log200Generator.cs" Line="191">Consider a design where 'Log200Generator.CreateChannel(Log, List(Of ChannelIndex), String, String, ExtensibleEnum(Of UnitOfMeasure)?, String, EtpDataType, List(Of PointMetadata))' doesn't nest generic type 'ExtensibleEnum(Of UnitOfMeasure)?'.</Issue>
            </Message>
            <Message Id="etp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log200Generator.cs" Line="191">In method 'Log200Generator.CreateChannel(Log, List(Of ChannelIndex), String, String, ExtensibleEnum(Of UnitOfMeasure)?, String, EtpDataType, List(Of PointMetadata))', correct the spelling of 'etp' in parameter name 'etpDataType' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="uom" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log200Generator.cs" Line="191">In method 'Log200Generator.CreateChannel(Log, List(Of ChannelIndex), String, String, ExtensibleEnum(Of UnitOfMeasure)?, String, EtpDataType, List(Of PointMetadata))', correct the spelling of 'uom' in parameter name 'uom' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log200Generator.cs" Line="191">In externally visible method 'Log200Generator.CreateChannel(Log, List(Of ChannelIndex), String, String, ExtensibleEnum(Of UnitOfMeasure)?, String, EtpDataType, List(Of PointMetadata))', validate parameter 'log' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateChannelIndex(Energistics.DataAccess.WITSML200.ReferenceData.ChannelIndexType,Energistics.DataAccess.WITSML200.ReferenceData.IndexDirection,System.String,System.Nullable`1&lt;Energistics.DataAccess.ExtensibleEnum`1&lt;Energistics.DataAccess.WITSML200.ReferenceData.UnitOfMeasure&gt;&gt;,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log200Generator.cs" Line="118">Consider a design where 'Log200Generator.CreateChannelIndex(ChannelIndexType, IndexDirection, String, ExtensibleEnum(Of UnitOfMeasure)?, String)' doesn't nest generic type 'ExtensibleEnum(Of UnitOfMeasure)?'.</Issue>
            </Message>
            <Message Id="uom" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log200Generator.cs" Line="118">In method 'Log200Generator.CreateChannelIndex(ChannelIndexType, IndexDirection, String, ExtensibleEnum(Of UnitOfMeasure)?, String)', correct the spelling of 'uom' in parameter name 'uom' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log200Generator.cs" Line="118">The 'this' parameter (or 'Me' in Visual Basic) of 'Log200Generator.CreateChannelIndex(ChannelIndexType, IndexDirection, String, ExtensibleEnum(Of UnitOfMeasure)?, String)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateChannelSet(Energistics.DataAccess.WITSML200.Log)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log200Generator.cs" Line="241">In externally visible method 'Log200Generator.CreateChannelSet(Log)', validate parameter 'log' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreatePointMetadata(System.String,System.String,Energistics.DataAccess.WITSML200.ReferenceData.EtpDataType)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="etp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log200Generator.cs" Line="99">In method 'Log200Generator.CreatePointMetadata(String, String, EtpDataType)', correct the spelling of 'etp' in parameter name 'etpDataType' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log200Generator.cs" Line="99">The 'this' parameter (or 'Me' in Visual Basic) of 'Log200Generator.CreatePointMetadata(String, String, EtpDataType)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DepthIndexTypes" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ArrayFieldsShouldNotBeReadOnly" Category="Microsoft.Security" CheckId="CA2105" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="CriticalWarning">Either replace 'Log200Generator.DepthIndexTypes' with a strongly typed collection that cannot be changed, or replace the public field with a method that returns a clone of a private array.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Log200Generator.DepthIndexTypes' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DeserializeChannelSetData(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log200Generator.cs" Line="221">Change 'List(Of List(Of List(Of Object)))' in 'Log200Generator.DeserializeChannelSetData(String)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log200Generator.cs" Line="221">Consider a design where 'Log200Generator.DeserializeChannelSetData(String)' doesn't nest generic type 'List(Of List(Of List(Of Object)))'.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log200Generator.cs" Line="221">The 'this' parameter (or 'Me' in Visual Basic) of 'Log200Generator.DeserializeChannelSetData(String)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DeserializeChannelValues(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log200Generator.cs" Line="231">Change 'List(Of Object)' in 'Log200Generator.DeserializeChannelValues(String)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log200Generator.cs" Line="231">The 'this' parameter (or 'Me' in Visual Basic) of 'Log200Generator.DeserializeChannelValues(String)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GenerateChannelData(PDS.WITSMLstudio.Data.Channels.ChannelDataBlock,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="num" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log200Generator.cs" Line="323">In method 'Log200Generator.GenerateChannelData(ChannelDataBlock, Integer)', correct the spelling of 'num' in parameter name 'numRows' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log200Generator.cs" Line="329">In externally visible method 'Log200Generator.GenerateChannelData(ChannelDataBlock, Integer)', validate parameter 'dataBlock' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GenerateChannelData(System.Collections.Generic.List`1&lt;Energistics.DataAccess.WITSML200.ChannelSet&gt;,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log200Generator.cs" Line="288">Replace method 'Log200Generator.GenerateChannelData(List(Of ChannelSet), Integer)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log200Generator.cs" Line="288">Change 'List(Of ChannelSet)' in 'Log200Generator.GenerateChannelData(List(Of ChannelSet), Integer)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="num" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log200Generator.cs" Line="288">In method 'Log200Generator.GenerateChannelData(List(Of ChannelSet), Integer)', correct the spelling of 'num' in parameter name 'numDataValue' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log200Generator.cs" Line="290">In externally visible method 'Log200Generator.GenerateChannelData(List(Of ChannelSet), Integer)', validate parameter 'channelSetList' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GenerateChannelValues(System.Random,Energistics.DataAccess.WITSML200.ChannelSet)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log200Generator.cs" Line="384">Replace the call to 'String.Operator =(String, String)' in 'Log200Generator.GenerateChannelValues(Random, ChannelSet)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GenerateDataValue(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Enum.TryParse&lt;Energistics.DataAccess.WITSML200.ReferenceData.EtpDataType&gt;(System.String,Energistics.DataAccess.WITSML200.ReferenceData.EtpDataType@)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log200Generator.cs" Line="509">'Log200Generator.GenerateDataValue(String)' calls 'Enum.TryParse(Of EtpDataType)(String, ByRef EtpDataType)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GenerateIndexValues(System.Random,Energistics.DataAccess.WITSML200.ChannelSet,System.Object[])" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.DateTime.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log200Generator.cs" Line="360">Because the behavior of 'Date.ToString(String)' could vary based on the current user's locale settings, replace this call in 'Log200Generator.GenerateIndexValues(Random, ChannelSet, Object())' with a call to 'Date.ToString(String, IFormatProvider)'. If the result of 'Date.ToString(String, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log200Generator.cs" Line="365">Because the behavior of 'String.Format(String, Object)' could vary based on the current user's locale settings, replace this call in 'Log200Generator.GenerateIndexValues(Random, ChannelSet, Object())' with a call to 'String.Format(IFormatProvider, String, ParamArray Object())'. If the result of 'String.Format(IFormatProvider, String, ParamArray Object())' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log200Generator.cs" Line="370">Because the behavior of 'String.Format(String, Object)' could vary based on the current user's locale settings, replace this call in 'Log200Generator.GenerateIndexValues(Random, ChannelSet, Object())' with a call to 'String.Format(IFormatProvider, String, ParamArray Object())'. If the result of 'String.Format(IFormatProvider, String, ParamArray Object())' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log200Generator.cs" Line="353">Replace the call to 'String.Operator =(String, String)' in 'Log200Generator.GenerateIndexValues(Random, ChannelSet, Object())' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GenerateValuesByType(System.Random,System.Nullable`1&lt;Energistics.DataAccess.WITSML200.ReferenceData.EtpDataType&gt;,System.Boolean)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log200Generator.cs" Line="450">The 'this' parameter (or 'Me' in Visual Basic) of 'Log200Generator.GenerateValuesByType(Random, EtpDataType?, Boolean)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="System.Double.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log200Generator.cs" Line="473">Because the behavior of 'Double.ToString()' could vary based on the current user's locale settings, replace this call in 'Log200Generator.GenerateValuesByType(Random, EtpDataType?, Boolean)' with a call to 'Double.ToString(IFormatProvider)'. If the result of 'Double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log200Generator.cs" Line="479">Because the behavior of 'Integer.ToString()' could vary based on the current user's locale settings, replace this call in 'Log200Generator.GenerateValuesByType(Random, EtpDataType?, Boolean)' with a call to 'Integer.ToString(IFormatProvider)'. If the result of 'Integer.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitStartIndexes(System.DateTimeOffset,System.Collections.Generic.List`1&lt;Energistics.DataAccess.WITSML200.ComponentSchemas.ChannelIndex&gt;,System.Object[])" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="Log200Generator.cs" Line="422">The 'this' parameter (or 'Me' in Visual Basic) of 'Log200Generator.InitStartIndexes(DateTimeOffset, List(Of ChannelIndex), Object())' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OtherIndexTypes" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ArrayFieldsShouldNotBeReadOnly" Category="Microsoft.Security" CheckId="CA2105" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="CriticalWarning">Either replace 'Log200Generator.OtherIndexTypes' with a strongly typed collection that cannot be changed, or replace the public field with a method that returns a clone of a private array.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Log200Generator.OtherIndexTypes' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TimeIndexTypes" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ArrayFieldsShouldNotBeReadOnly" Category="Microsoft.Security" CheckId="CA2105" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="CriticalWarning">Either replace 'Log200Generator.TimeIndexTypes' with a strongly typed collection that cannot be changed, or replace the public field with a method that returns a clone of a private array.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Log200Generator.TimeIndexTypes' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="LogExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#_dataDelimiterExclusions" Kind="Field" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="UseLiteralsWhereAppropriate" Category="Microsoft.Performance" CheckId="CA1802" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning">Field 'LogExtensions._dataDelimiterExclusions' is declared as 'static readonly' but is initialized with a constant value '[\d\s\.\+\-]'. Mark this field as 'const' instead.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_log" Kind="Field" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'LogExtensions._log' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetByMnemonic(System.Collections.Generic.IEnumerable`1&lt;Energistics.DataAccess.WITSML131.ComponentSchemas.LogCurveInfo&gt;,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Infos" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="LogExtensions.cs" Line="179">In method 'LogExtensions.GetByMnemonic(IEnumerable(Of LogCurveInfo), String)', correct the spelling of 'Infos' in parameter name 'logCurveInfos' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetByMnemonic(System.Collections.Generic.IEnumerable`1&lt;Energistics.DataAccess.WITSML141.ComponentSchemas.LogCurveInfo&gt;,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Infos" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="LogExtensions.cs" Line="192">In method 'LogExtensions.GetByMnemonic(IEnumerable(Of LogCurveInfo), String)', correct the spelling of 'Infos' in parameter name 'logCurveInfos' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetByUid(System.Collections.Generic.IEnumerable`1&lt;Energistics.DataAccess.WITSML131.ComponentSchemas.LogCurveInfo&gt;,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Infos" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="LogExtensions.cs" Line="140">In method 'LogExtensions.GetByUid(IEnumerable(Of LogCurveInfo), String)', correct the spelling of 'Infos' in parameter name 'logCurveInfos' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Uid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="LogExtensions.cs" Line="140">Correct the spelling of 'Uid' in member name 'LogExtensions.GetByUid(IEnumerable(Of LogCurveInfo), String)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="uid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="LogExtensions.cs" Line="140">In method 'LogExtensions.GetByUid(IEnumerable(Of LogCurveInfo), String)', correct the spelling of 'uid' in parameter name 'uid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetByUid(System.Collections.Generic.IEnumerable`1&lt;Energistics.DataAccess.WITSML141.ComponentSchemas.LogCurveInfo&gt;,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Infos" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="LogExtensions.cs" Line="153">In method 'LogExtensions.GetByUid(IEnumerable(Of LogCurveInfo), String)', correct the spelling of 'Infos' in parameter name 'logCurveInfos' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Uid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="LogExtensions.cs" Line="153">Correct the spelling of 'Uid' in member name 'LogExtensions.GetByUid(IEnumerable(Of LogCurveInfo), String)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="uid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="LogExtensions.cs" Line="153">In method 'LogExtensions.GetByUid(IEnumerable(Of LogCurveInfo), String)', correct the spelling of 'uid' in parameter name 'uid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetByUuid(System.Collections.Generic.IEnumerable`1&lt;Energistics.DataAccess.WITSML200.Channel&gt;,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Uuid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="LogExtensions.cs" Line="166">Correct the spelling of 'Uuid' in member name 'LogExtensions.GetByUuid(IEnumerable(Of Channel), String)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="uuid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="LogExtensions.cs" Line="166">In method 'LogExtensions.GetByUuid(IEnumerable(Of Channel), String)', correct the spelling of 'uuid' in parameter name 'uuid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetEndIndex(Energistics.DataAccess.WITSML131.ComponentSchemas.LogCurveInfo)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="LogExtensions.cs" Line="380">In externally visible method 'LogExtensions.GetEndIndex(LogCurveInfo)', validate parameter 'logCurveInfo' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetEndIndex(Energistics.DataAccess.WITSML141.ComponentSchemas.LogCurveInfo)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="LogExtensions.cs" Line="404">In externally visible method 'LogExtensions.GetEndIndex(LogCurveInfo)', validate parameter 'logCurveInfo' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetIndexRange(Energistics.DataAccess.WITSML131.ComponentSchemas.LogCurveInfo,System.Boolean,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="LogExtensions.cs" Line="220">Replace method 'LogExtensions.GetIndexRange(LogCurveInfo, Boolean, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="LogExtensions.cs" Line="220">Consider a design where 'LogExtensions.GetIndexRange(LogCurveInfo, Boolean, Boolean)' doesn't nest generic type 'Range(Of Double?)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetIndexRange(Energistics.DataAccess.WITSML141.ComponentSchemas.LogCurveInfo,System.Boolean,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="LogExtensions.cs" Line="259">Replace method 'LogExtensions.GetIndexRange(LogCurveInfo, Boolean, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="LogExtensions.cs" Line="259">Consider a design where 'LogExtensions.GetIndexRange(LogCurveInfo, Boolean, Boolean)' doesn't nest generic type 'Range(Of Double?)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetStartIndex(Energistics.DataAccess.WITSML131.ComponentSchemas.LogCurveInfo)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="LogExtensions.cs" Line="368">In externally visible method 'LogExtensions.GetStartIndex(LogCurveInfo)', validate parameter 'logCurveInfo' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetStartIndex(Energistics.DataAccess.WITSML141.ComponentSchemas.LogCurveInfo)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="LogExtensions.cs" Line="392">In externally visible method 'LogExtensions.GetStartIndex(LogCurveInfo)', validate parameter 'logCurveInfo' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsFirstValueDateTime(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="LogExtensions.cs" Line="127">Replace method 'LogExtensions.IsFirstValueDateTime(String, String)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsIncreasing(Energistics.DataAccess.WITSML131.Log)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="LogExtensions.cs" Line="52">In externally visible method 'LogExtensions.IsIncreasing(Log)', validate parameter 'log' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsIncreasing(Energistics.DataAccess.WITSML141.Log)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="LogExtensions.cs" Line="64">In externally visible method 'LogExtensions.IsIncreasing(Log)', validate parameter 'log' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsTimeLog(Energistics.DataAccess.WITSML131.Log,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="LogExtensions.cs" Line="77">Replace method 'LogExtensions.IsTimeLog(Log, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="LogExtensions.cs" Line="77">In externally visible method 'LogExtensions.IsTimeLog(Log, Boolean)', validate parameter 'log' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsTimeLog(Energistics.DataAccess.WITSML141.Log,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="LogExtensions.cs" Line="102">Replace method 'LogExtensions.IsTimeLog(Log, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="LogExtensions.cs" Line="102">In externally visible method 'LogExtensions.IsTimeLog(Log, Boolean)', validate parameter 'log' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsValidDataDelimiter(Energistics.DataAccess.WITSML141.Log)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Logs" File="LogExtensions.cs" Line="352">In externally visible method 'LogExtensions.IsValidDataDelimiter(Log)', validate parameter 'log' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="PDS.WITSMLstudio.Data.MudLogs">
       <Types>
        <Type Name="MudLog131Generator" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GenerateChromatograph(System.Double)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\MudLogs" File="MudLog131Generator.cs" Line="112">The 'this' parameter (or 'Me' in Visual Basic) of 'MudLog131Generator.GenerateChromatograph(Double)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GenerateGeologyIntervals(System.Int32,System.Double,Energistics.DataAccess.WITSML131.ReferenceData.MeasuredDepthUom,Energistics.DataAccess.WITSML131.ReferenceData.WellVerticalCoordinateUom,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\MudLogs" File="MudLog131Generator.cs" Line="59">Replace method 'MudLog131Generator.GenerateGeologyIntervals(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, Boolean, Boolean, Boolean, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\MudLogs" File="MudLog131Generator.cs" Line="59">Change 'List(Of GeologyInterval)' in 'MudLog131Generator.GenerateGeologyIntervals(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, Boolean, Boolean, Boolean, Boolean)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="Md" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\MudLogs" File="MudLog131Generator.cs" Line="59">In member 'MudLog131Generator.GenerateGeologyIntervals(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, Boolean, Boolean, Boolean, Boolean)', correct the casing of 'Md' in parameter name 'startMd' by changing it to 'MD'.</Issue>
            </Message>
            <Message Id="Intrepreted" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\MudLogs" File="MudLog131Generator.cs" Line="59">In method 'MudLog131Generator.GenerateGeologyIntervals(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, Boolean, Boolean, Boolean, Boolean)', correct the spelling of 'Intrepreted' in parameter name 'mixInIntrepreted' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Md" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\MudLogs" File="MudLog131Generator.cs" Line="59">In method 'MudLog131Generator.GenerateGeologyIntervals(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, Boolean, Boolean, Boolean, Boolean)', correct the spelling of 'Md' in parameter name 'startMd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Uom" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\MudLogs" File="MudLog131Generator.cs" Line="59">In method 'MudLog131Generator.GenerateGeologyIntervals(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, Boolean, Boolean, Boolean, Boolean)', correct the spelling of 'Uom' in parameter name 'mdUom' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\MudLogs" File="MudLog131Generator.cs" Line="59">In method 'MudLog131Generator.GenerateGeologyIntervals(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, Boolean, Boolean, Boolean, Boolean)', correct the spelling of 'Uom' in parameter name 'tvdUom' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="num" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\MudLogs" File="MudLog131Generator.cs" Line="59">In method 'MudLog131Generator.GenerateGeologyIntervals(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, Boolean, Boolean, Boolean, Boolean)', correct the spelling of 'num' in parameter name 'numOfIntervals' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="tvd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\MudLogs" File="MudLog131Generator.cs" Line="59">In method 'MudLog131Generator.GenerateGeologyIntervals(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, Boolean, Boolean, Boolean, Boolean)', correct the spelling of 'tvd' in parameter name 'tvdUom' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="numOfIntervals*2" TypeName="OperationsShouldNotOverflow" Category="Microsoft.Usage" CheckId="CA2233" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\MudLogs" File="MudLog131Generator.cs" Line="60">Correct the potential overflow in the operation 'numOfIntervals*2' in 'MudLog131Generator.GenerateGeologyIntervals(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, Boolean, Boolean, Boolean, Boolean)'.</Issue>
            </Message>
            <Message Id="numOfIntervals+1" TypeName="OperationsShouldNotOverflow" Category="Microsoft.Usage" CheckId="CA2233" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\MudLogs" File="MudLog131Generator.cs" Line="62">Correct the potential overflow in the operation 'numOfIntervals+1' in 'MudLog131Generator.GenerateGeologyIntervals(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, Boolean, Boolean, Boolean, Boolean)'.</Issue>
            </Message>
            <Message Id="mixInIntrepreted" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\MudLogs" File="MudLog131Generator.cs" Line="59">Parameter 'mixInIntrepreted' of 'MudLog131Generator.GenerateGeologyIntervals(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, Boolean, Boolean, Boolean, Boolean)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="tvdUom" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\MudLogs" File="MudLog131Generator.cs" Line="59">Parameter 'tvdUom' of 'MudLog131Generator.GenerateGeologyIntervals(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, Boolean, Boolean, Boolean, Boolean)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\MudLogs" File="MudLog131Generator.cs" Line="67">Because the behavior of 'Integer.ToString()' could vary based on the current user's locale settings, replace this call in 'MudLog131Generator.GenerateGeologyIntervals(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, Boolean, Boolean, Boolean, Boolean)' with a call to 'Integer.ToString(IFormatProvider)'. If the result of 'Integer.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GenerateLithology(System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\MudLogs" File="MudLog131Generator.cs" Line="102">The 'this' parameter (or 'Me' in Visual Basic) of 'MudLog131Generator.GenerateLithology(Integer)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\MudLogs" File="MudLog131Generator.cs" Line="102">Because the behavior of 'Integer.ToString()' could vary based on the current user's locale settings, replace this call in 'MudLog131Generator.GenerateLithology(Integer)' with a call to 'Integer.ToString(IFormatProvider)'. If the result of 'Integer.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MdUom" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Md" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Md' in member name 'MudLog131Generator.MdUom' by changing it to 'MD'.</Issue>
            </Message>
            <Message Id="Md" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Md' in member name 'MudLog131Generator.MdUom' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Uom" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Uom' in member name 'MudLog131Generator.MdUom' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TvdUom" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Tvd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Tvd' in member name 'MudLog131Generator.TvdUom' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Uom" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Uom' in member name 'MudLog131Generator.TvdUom' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MudLog141Generator" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GenerateChromatograph(System.Double)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\MudLogs" File="MudLog141Generator.cs" Line="112">The 'this' parameter (or 'Me' in Visual Basic) of 'MudLog141Generator.GenerateChromatograph(Double)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GenerateGeologyIntervals(System.Int32,System.Double,Energistics.DataAccess.WITSML141.ReferenceData.MeasuredDepthUom,Energistics.DataAccess.WITSML141.ReferenceData.WellVerticalCoordinateUom,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\MudLogs" File="MudLog141Generator.cs" Line="59">Replace method 'MudLog141Generator.GenerateGeologyIntervals(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, Boolean, Boolean, Boolean, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\MudLogs" File="MudLog141Generator.cs" Line="59">Change 'List(Of GeologyInterval)' in 'MudLog141Generator.GenerateGeologyIntervals(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, Boolean, Boolean, Boolean, Boolean)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="Md" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\MudLogs" File="MudLog141Generator.cs" Line="59">In member 'MudLog141Generator.GenerateGeologyIntervals(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, Boolean, Boolean, Boolean, Boolean)', correct the casing of 'Md' in parameter name 'startMd' by changing it to 'MD'.</Issue>
            </Message>
            <Message Id="Intrepreted" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\MudLogs" File="MudLog141Generator.cs" Line="59">In method 'MudLog141Generator.GenerateGeologyIntervals(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, Boolean, Boolean, Boolean, Boolean)', correct the spelling of 'Intrepreted' in parameter name 'mixInIntrepreted' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Md" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\MudLogs" File="MudLog141Generator.cs" Line="59">In method 'MudLog141Generator.GenerateGeologyIntervals(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, Boolean, Boolean, Boolean, Boolean)', correct the spelling of 'Md' in parameter name 'startMd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Uom" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\MudLogs" File="MudLog141Generator.cs" Line="59">In method 'MudLog141Generator.GenerateGeologyIntervals(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, Boolean, Boolean, Boolean, Boolean)', correct the spelling of 'Uom' in parameter name 'mdUom' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\MudLogs" File="MudLog141Generator.cs" Line="59">In method 'MudLog141Generator.GenerateGeologyIntervals(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, Boolean, Boolean, Boolean, Boolean)', correct the spelling of 'Uom' in parameter name 'tvdUom' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="num" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\MudLogs" File="MudLog141Generator.cs" Line="59">In method 'MudLog141Generator.GenerateGeologyIntervals(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, Boolean, Boolean, Boolean, Boolean)', correct the spelling of 'num' in parameter name 'numOfIntervals' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="tvd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\MudLogs" File="MudLog141Generator.cs" Line="59">In method 'MudLog141Generator.GenerateGeologyIntervals(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, Boolean, Boolean, Boolean, Boolean)', correct the spelling of 'tvd' in parameter name 'tvdUom' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="numOfIntervals*2" TypeName="OperationsShouldNotOverflow" Category="Microsoft.Usage" CheckId="CA2233" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\MudLogs" File="MudLog141Generator.cs" Line="60">Correct the potential overflow in the operation 'numOfIntervals*2' in 'MudLog141Generator.GenerateGeologyIntervals(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, Boolean, Boolean, Boolean, Boolean)'.</Issue>
            </Message>
            <Message Id="numOfIntervals+1" TypeName="OperationsShouldNotOverflow" Category="Microsoft.Usage" CheckId="CA2233" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\MudLogs" File="MudLog141Generator.cs" Line="62">Correct the potential overflow in the operation 'numOfIntervals+1' in 'MudLog141Generator.GenerateGeologyIntervals(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, Boolean, Boolean, Boolean, Boolean)'.</Issue>
            </Message>
            <Message Id="mixInIntrepreted" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\MudLogs" File="MudLog141Generator.cs" Line="59">Parameter 'mixInIntrepreted' of 'MudLog141Generator.GenerateGeologyIntervals(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, Boolean, Boolean, Boolean, Boolean)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="tvdUom" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\MudLogs" File="MudLog141Generator.cs" Line="59">Parameter 'tvdUom' of 'MudLog141Generator.GenerateGeologyIntervals(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, Boolean, Boolean, Boolean, Boolean)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\MudLogs" File="MudLog141Generator.cs" Line="67">Because the behavior of 'Integer.ToString()' could vary based on the current user's locale settings, replace this call in 'MudLog141Generator.GenerateGeologyIntervals(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, Boolean, Boolean, Boolean, Boolean)' with a call to 'Integer.ToString(IFormatProvider)'. If the result of 'Integer.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GenerateLithology(System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\MudLogs" File="MudLog141Generator.cs" Line="102">The 'this' parameter (or 'Me' in Visual Basic) of 'MudLog141Generator.GenerateLithology(Integer)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\MudLogs" File="MudLog141Generator.cs" Line="102">Because the behavior of 'Integer.ToString()' could vary based on the current user's locale settings, replace this call in 'MudLog141Generator.GenerateLithology(Integer)' with a call to 'Integer.ToString(IFormatProvider)'. If the result of 'Integer.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MdUom" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Md" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Md' in member name 'MudLog141Generator.MdUom' by changing it to 'MD'.</Issue>
            </Message>
            <Message Id="Md" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Md' in member name 'MudLog141Generator.MdUom' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Uom" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Uom' in member name 'MudLog141Generator.MdUom' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TvdUom" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Tvd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Tvd' in member name 'MudLog141Generator.TvdUom' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Uom" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Uom' in member name 'MudLog141Generator.TvdUom' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="PDS.WITSMLstudio.Data.Trajectories">
       <Types>
        <Type Name="Trajectory131Generator" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AngleUom" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Uom" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Uom' in member name 'Trajectory131Generator.AngleUom' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GenerationStations(System.Int32,System.Double,Energistics.DataAccess.WITSML131.ReferenceData.MeasuredDepthUom,Energistics.DataAccess.WITSML131.ReferenceData.WellVerticalCoordinateUom,Energistics.DataAccess.WITSML131.ReferenceData.PlaneAngleUom,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Trajectories" File="Trajectory131Generator.cs" Line="60">Replace method 'Trajectory131Generator.GenerationStations(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, PlaneAngleUom, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Trajectories" File="Trajectory131Generator.cs" Line="60">Change 'List(Of TrajectoryStation)' in 'Trajectory131Generator.GenerationStations(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, PlaneAngleUom, Boolean)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="Md" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Trajectories" File="Trajectory131Generator.cs" Line="60">In member 'Trajectory131Generator.GenerationStations(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, PlaneAngleUom, Boolean)', correct the casing of 'Md' in parameter name 'startMd' by changing it to 'MD'.</Issue>
            </Message>
            <Message Id="Md" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Trajectories" File="Trajectory131Generator.cs" Line="60">In method 'Trajectory131Generator.GenerationStations(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, PlaneAngleUom, Boolean)', correct the spelling of 'Md' in parameter name 'startMd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Uom" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Trajectories" File="Trajectory131Generator.cs" Line="60">In method 'Trajectory131Generator.GenerationStations(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, PlaneAngleUom, Boolean)', correct the spelling of 'Uom' in parameter name 'angleUom' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Trajectories" File="Trajectory131Generator.cs" Line="60">In method 'Trajectory131Generator.GenerationStations(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, PlaneAngleUom, Boolean)', correct the spelling of 'Uom' in parameter name 'mdUom' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Trajectories" File="Trajectory131Generator.cs" Line="60">In method 'Trajectory131Generator.GenerationStations(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, PlaneAngleUom, Boolean)', correct the spelling of 'Uom' in parameter name 'tvdUom' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="num" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Trajectories" File="Trajectory131Generator.cs" Line="60">In method 'Trajectory131Generator.GenerationStations(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, PlaneAngleUom, Boolean)', correct the spelling of 'num' in parameter name 'numOfStations' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="tvd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Trajectories" File="Trajectory131Generator.cs" Line="60">In method 'Trajectory131Generator.GenerationStations(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, PlaneAngleUom, Boolean)', correct the spelling of 'tvd' in parameter name 'tvdUom' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Trajectories" File="Trajectory131Generator.cs" Line="66">Because the behavior of 'Integer.ToString()' could vary based on the current user's locale settings, replace this call in 'Trajectory131Generator.GenerationStations(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, PlaneAngleUom, Boolean)' with a call to 'Integer.ToString(IFormatProvider)'. If the result of 'Integer.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Trajectories" File="Trajectory131Generator.cs" Line="67">Because the behavior of 'Integer.ToString()' could vary based on the current user's locale settings, replace this call in 'Trajectory131Generator.GenerationStations(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, PlaneAngleUom, Boolean)' with a call to 'Integer.ToString(IFormatProvider)'. If the result of 'Integer.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Location(System.String,System.Double,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Crs" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Trajectories" File="Trajectory131Generator.cs" Line="99">In method 'Trajectory131Generator.Location(String, Double, String)', correct the spelling of 'Crs' in parameter name 'wellCrsValue' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="uid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Trajectories" File="Trajectory131Generator.cs" Line="99">In method 'Trajectory131Generator.Location(String, Double, String)', correct the spelling of 'uid' in parameter name 'uid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Trajectories" File="Trajectory131Generator.cs" Line="99">The 'this' parameter (or 'Me' in Visual Basic) of 'Trajectory131Generator.Location(String, Double, String)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MdUom" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Md" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Md' in member name 'Trajectory131Generator.MdUom' by changing it to 'MD'.</Issue>
            </Message>
            <Message Id="Md" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Md' in member name 'Trajectory131Generator.MdUom' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Uom" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Uom' in member name 'Trajectory131Generator.MdUom' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TvdUom" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Tvd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Tvd' in member name 'Trajectory131Generator.TvdUom' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Uom" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Uom' in member name 'Trajectory131Generator.TvdUom' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Trajectory141Generator" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AngleUom" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Uom" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Uom' in member name 'Trajectory141Generator.AngleUom' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GenerationStations(System.Int32,System.Double,Energistics.DataAccess.WITSML141.ReferenceData.MeasuredDepthUom,Energistics.DataAccess.WITSML141.ReferenceData.WellVerticalCoordinateUom,Energistics.DataAccess.WITSML141.ReferenceData.PlaneAngleUom,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="inClude" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Trajectories" File="Trajectory141Generator.cs" Line="60">In member 'Trajectory141Generator.GenerationStations(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, PlaneAngleUom, Boolean)', the compound word 'inClude' in parameter name 'inCludeExtra' exists as a discrete term. If your usage is intended to be single word, case it as 'include' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Trajectories" File="Trajectory141Generator.cs" Line="60">Replace method 'Trajectory141Generator.GenerationStations(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, PlaneAngleUom, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Trajectories" File="Trajectory141Generator.cs" Line="60">Change 'List(Of TrajectoryStation)' in 'Trajectory141Generator.GenerationStations(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, PlaneAngleUom, Boolean)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="Md" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Trajectories" File="Trajectory141Generator.cs" Line="60">In member 'Trajectory141Generator.GenerationStations(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, PlaneAngleUom, Boolean)', correct the casing of 'Md' in parameter name 'startMd' by changing it to 'MD'.</Issue>
            </Message>
            <Message Id="Clude" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Trajectories" File="Trajectory141Generator.cs" Line="60">In method 'Trajectory141Generator.GenerationStations(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, PlaneAngleUom, Boolean)', correct the spelling of 'Clude' in parameter name 'inCludeExtra' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Md" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Trajectories" File="Trajectory141Generator.cs" Line="60">In method 'Trajectory141Generator.GenerationStations(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, PlaneAngleUom, Boolean)', correct the spelling of 'Md' in parameter name 'startMd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Uom" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Trajectories" File="Trajectory141Generator.cs" Line="60">In method 'Trajectory141Generator.GenerationStations(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, PlaneAngleUom, Boolean)', correct the spelling of 'Uom' in parameter name 'angleUom' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Trajectories" File="Trajectory141Generator.cs" Line="60">In method 'Trajectory141Generator.GenerationStations(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, PlaneAngleUom, Boolean)', correct the spelling of 'Uom' in parameter name 'mdUom' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Trajectories" File="Trajectory141Generator.cs" Line="60">In method 'Trajectory141Generator.GenerationStations(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, PlaneAngleUom, Boolean)', correct the spelling of 'Uom' in parameter name 'tvdUom' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="num" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Trajectories" File="Trajectory141Generator.cs" Line="60">In method 'Trajectory141Generator.GenerationStations(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, PlaneAngleUom, Boolean)', correct the spelling of 'num' in parameter name 'numOfStations' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="tvd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Trajectories" File="Trajectory141Generator.cs" Line="60">In method 'Trajectory141Generator.GenerationStations(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, PlaneAngleUom, Boolean)', correct the spelling of 'tvd' in parameter name 'tvdUom' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Trajectories" File="Trajectory141Generator.cs" Line="65">Because the behavior of 'Integer.ToString()' could vary based on the current user's locale settings, replace this call in 'Trajectory141Generator.GenerationStations(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, PlaneAngleUom, Boolean)' with a call to 'Integer.ToString(IFormatProvider)'. If the result of 'Integer.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Trajectories" File="Trajectory141Generator.cs" Line="66">Because the behavior of 'Integer.ToString()' could vary based on the current user's locale settings, replace this call in 'Trajectory141Generator.GenerationStations(Integer, Double, MeasuredDepthUom, WellVerticalCoordinateUom, PlaneAngleUom, Boolean)' with a call to 'Integer.ToString(IFormatProvider)'. If the result of 'Integer.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Location(System.String,System.Double,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Crs" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Trajectories" File="Trajectory141Generator.cs" Line="97">In method 'Trajectory141Generator.Location(String, Double, String)', correct the spelling of 'Crs' in parameter name 'wellCrsValue' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="uid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Trajectories" File="Trajectory141Generator.cs" Line="97">In method 'Trajectory141Generator.Location(String, Double, String)', correct the spelling of 'uid' in parameter name 'uid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Trajectories" File="Trajectory141Generator.cs" Line="97">The 'this' parameter (or 'Me' in Visual Basic) of 'Trajectory141Generator.Location(String, Double, String)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MdUom" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Md" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Md' in member name 'Trajectory141Generator.MdUom' by changing it to 'MD'.</Issue>
            </Message>
            <Message Id="Md" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Md' in member name 'Trajectory141Generator.MdUom' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Uom" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Uom' in member name 'Trajectory141Generator.MdUom' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TvdUom" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Tvd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Tvd' in member name 'Trajectory141Generator.TvdUom' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Uom" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Uom' in member name 'Trajectory141Generator.TvdUom' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TrajectoryDataReader" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(PDS.WITSMLstudio.Adapters.Trajectory)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Trajectories" File="TrajectoryDataReader.cs" Line="49">In externally visible method 'TrajectoryDataReader.New(Trajectory)', validate parameter 'data' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="NotCalled" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Trajectories" File="TrajectoryDataReader.cs" Line="563">Change 'TrajectoryDataReader.Dispose()' to call 'GC.SuppressFinalize(Object)'. This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetValues(System.Object[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Data\Trajectories" File="TrajectoryDataReader.cs" Line="356">In externally visible method 'TrajectoryDataReader.GetValues(Object())', validate parameter 'values' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="PDS.WITSMLstudio.Linq">
       <Types>
        <Type Name="ExpressionVisitor" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#SetPropertyValue(System.Reflection.PropertyInfo,System.Object)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="Property" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="ExpressionVisitor.cs" Line="173">In virtual/interface member 'ExpressionVisitor.SetPropertyValue(PropertyInfo, Object)', rename parameter 'property' so that it no longer conflicts with the reserved language keyword 'Property'. Using a reserved keyword as the name of a parameter on a virtual/interface member makes it harder for consumers in other languages to override/implement the member.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#VisitBinaryExpression(LinqExtender.Ast.BinaryExpression)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="ExpressionVisitor.cs" Line="117">In externally visible method 'ExpressionVisitor.VisitBinaryExpression(BinaryExpression)', validate parameter 'expression' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#VisitBlockExpression(LinqExtender.Ast.BlockExpression)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="ExpressionVisitor.cs" Line="80">In externally visible method 'ExpressionVisitor.VisitBlockExpression(BlockExpression)', validate parameter 'blockExpression' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#VisitLambdaExpression(LinqExtender.Ast.LambdaExpression)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="ExpressionVisitor.cs" Line="105">In externally visible method 'ExpressionVisitor.VisitLambdaExpression(LambdaExpression)', validate parameter 'expression' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#VisitLogicalExpression(LinqExtender.Ast.LogicalExpression)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="ExpressionVisitor.cs" Line="93">In externally visible method 'ExpressionVisitor.VisitLogicalExpression(LogicalExpression)', validate parameter 'expression' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#VisitOrderbyExpression(LinqExtender.Ast.OrderbyExpression)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Orderby" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="ExpressionVisitor.cs" Line="163">Correct the spelling of 'Orderby' in member name 'ExpressionVisitor.VisitOrderbyExpression(OrderbyExpression)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IWitsmlContext" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Witsml" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Witsml' in type name 'IWitsmlContext'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#GetActiveWellbores(Energistics.Etp.Common.Datatypes.EtpUri,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error">Replace method 'IWitsmlContext.GetActiveWellbores(EtpUri, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllWells()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'IWitsmlContext.GetAllWells()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetGrowingObjects(System.String,Energistics.Etp.Common.Datatypes.EtpUri,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error">Replace method 'IWitsmlContext.GetGrowingObjects(String, EtpUri, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetGrowingObjectsWithStatus(System.String,Energistics.Etp.Common.Datatypes.EtpUri,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error">Replace method 'IWitsmlContext.GetGrowingObjectsWithStatus(String, EtpUri, String)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetWellboreObjects(System.String,Energistics.Etp.Common.Datatypes.EtpUri,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error">Replace method 'IWitsmlContext.GetWellboreObjects(String, EtpUri, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IWitsmlQuery" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Witsml" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Witsml' in type name 'IWitsmlQuery'.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'IWitsmlQuery' to end in 'Collection'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#With(PDS.WITSMLstudio.OptionsIn)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="With" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Rename virtual/interface member 'IWitsmlQuery.With(OptionsIn)' so that it no longer conflicts with the reserved language keyword 'With'. Using a reserved keyword as the name of a virtual/interface member makes it harder for consumers in other languages to override/implement the member.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IWitsmlQuery`1" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Witsml" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Witsml' in type name 'IWitsmlQuery(Of T)'.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'IWitsmlQuery(Of T)' to end in 'Collection'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#With(PDS.WITSMLstudio.OptionsIn)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="With" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Rename virtual/interface member 'IWitsmlQuery(Of T).With(OptionsIn)' so that it no longer conflicts with the reserved language keyword 'With'. Using a reserved keyword as the name of a virtual/interface member makes it harder for consumers in other languages to override/implement the member.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Witsml131Context" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Witsml" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Witsml' in type name 'Witsml131Context'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.String,System.Double)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="Witsml131Context.cs" Line="40">Replace method 'Witsml131Context.New(String, Double)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="Witsml131Context.cs" Line="40">Change the type of parameter 'url' of method 'Witsml131Context.New(String, Double)' from string to System.Uri, or provide an overload of 'Witsml131Context.New(String, Double)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String,System.Security.SecureString,System.Double)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="username" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="Witsml131Context.cs" Line="64">In member 'Witsml131Context.New(String, String, SecureString, Double)', the discrete term 'username' in parameter name 'username' should be expressed as a compound word, 'userName'.</Issue>
            </Message>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="Witsml131Context.cs" Line="64">Replace method 'Witsml131Context.New(String, String, SecureString, Double)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="Witsml131Context.cs" Line="64">Change the type of parameter 'url' of method 'Witsml131Context.New(String, String, SecureString, Double)' from string to System.Uri, or provide an overload of 'Witsml131Context.New(String, String, SecureString, Double)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String,System.String,System.Double)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="username" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="Witsml131Context.cs" Line="52">In member 'Witsml131Context.New(String, String, String, Double)', the discrete term 'username' in parameter name 'username' should be expressed as a compound word, 'userName'.</Issue>
            </Message>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="Witsml131Context.cs" Line="52">Replace method 'Witsml131Context.New(String, String, String, Double)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="Witsml131Context.cs" Line="52">Change the type of parameter 'url' of method 'Witsml131Context.New(String, String, String, Double)' from string to System.Uri, or provide an overload of 'Witsml131Context.New(String, String, String, Double)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FormatWitsmlQuery(PDS.WITSMLstudio.Linq.IWitsmlQuery,PDS.WITSMLstudio.OptionsIn[])" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="Witsml131Context.cs" Line="142">In externally visible method 'Witsml131Context.FormatWitsmlQuery(IWitsmlQuery, ParamArray OptionsIn())', validate parameter 'query' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetWellbores(Energistics.Etp.Common.Datatypes.EtpUri)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="Witsml131Context.cs" Line="122">In member 'Witsml131Context.GetWellbores(EtpUri)', change parameter name 'uri' to 'parentUri' in order to match the identifier as it has been declared in 'WitsmlContext.GetWellbores(EtpUri)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Wellbores" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="BaseType" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="Witsml131Context.cs" Line="85">The property name 'Witsml131Context.Wellbores()' is confusing given the existence of inherited method 'WitsmlContext.GetWellbores(EtpUri)'. Rename or remove this property.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Witsml141Context" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Witsml" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Witsml' in type name 'Witsml141Context'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.String,System.Double)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="Witsml141Context.cs" Line="40">Replace method 'Witsml141Context.New(String, Double)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="Witsml141Context.cs" Line="40">Change the type of parameter 'url' of method 'Witsml141Context.New(String, Double)' from string to System.Uri, or provide an overload of 'Witsml141Context.New(String, Double)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String,System.Security.SecureString,System.Double)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="username" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="Witsml141Context.cs" Line="64">In member 'Witsml141Context.New(String, String, SecureString, Double)', the discrete term 'username' in parameter name 'username' should be expressed as a compound word, 'userName'.</Issue>
            </Message>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="Witsml141Context.cs" Line="64">Replace method 'Witsml141Context.New(String, String, SecureString, Double)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="Witsml141Context.cs" Line="64">Change the type of parameter 'url' of method 'Witsml141Context.New(String, String, SecureString, Double)' from string to System.Uri, or provide an overload of 'Witsml141Context.New(String, String, SecureString, Double)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String,System.String,System.Double)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="username" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="Witsml141Context.cs" Line="52">In member 'Witsml141Context.New(String, String, String, Double)', the discrete term 'username' in parameter name 'username' should be expressed as a compound word, 'userName'.</Issue>
            </Message>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="Witsml141Context.cs" Line="52">Replace method 'Witsml141Context.New(String, String, String, Double)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="Witsml141Context.cs" Line="52">Change the type of parameter 'url' of method 'Witsml141Context.New(String, String, String, Double)' from string to System.Uri, or provide an overload of 'Witsml141Context.New(String, String, String, Double)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetWellbores(Energistics.Etp.Common.Datatypes.EtpUri)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="Witsml141Context.cs" Line="121">In member 'Witsml141Context.GetWellbores(EtpUri)', change parameter name 'uri' to 'parentUri' in order to match the identifier as it has been declared in 'WitsmlContext.GetWellbores(EtpUri)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Wellbores" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="BaseType" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="Witsml141Context.cs" Line="85">The property name 'Witsml141Context.Wellbores()' is confusing given the existence of inherited method 'WitsmlContext.GetWellbores(EtpUri)'. Rename or remove this property.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="WitsmlContext" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Witsml" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Witsml' in type name 'WitsmlContext'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.String,System.Double,Energistics.DataAccess.WMLSVersion)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="WitsmlContext.cs" Line="44">Change the type of parameter 'url' of method 'WitsmlContext.New(String, Double, WMLSVersion)' from string to System.Uri, or provide an overload of 'WitsmlContext.New(String, Double, WMLSVersion)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String,System.Security.SecureString,System.Double,Energistics.DataAccess.WMLSVersion)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="username" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="WitsmlContext.cs" Line="72">In member 'WitsmlContext.New(String, String, SecureString, Double, WMLSVersion)', the discrete term 'username' in parameter name 'username' should be expressed as a compound word, 'userName'.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="WitsmlContext.cs" Line="72">Change the type of parameter 'url' of method 'WitsmlContext.New(String, String, SecureString, Double, WMLSVersion)' from string to System.Uri, or provide an overload of 'WitsmlContext.New(String, String, SecureString, Double, WMLSVersion)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String,System.String,System.Double,Energistics.DataAccess.WMLSVersion)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="username" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="WitsmlContext.cs" Line="58">In member 'WitsmlContext.New(String, String, String, Double, WMLSVersion)', the discrete term 'username' in parameter name 'username' should be expressed as a compound word, 'userName'.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="WitsmlContext.cs" Line="58">Change the type of parameter 'url' of method 'WitsmlContext.New(String, String, String, Double, WMLSVersion)' from string to System.Uri, or provide an overload of 'WitsmlContext.New(String, String, String, Double, WMLSVersion)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateQuery`2()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="WitsmlContext.cs" Line="342">Consider a design where 'WitsmlContext.CreateQuery(Of T, TList)()' doesn't require explicit type parameter 'TList' in any call to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateWitsmlQuery(System.String,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="Witsml" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="WitsmlContext.cs" Line="325">Correct the spelling of 'Witsml' in member name 'WitsmlContext.CreateWitsmlQuery(String, String)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="NotCalled" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="WitsmlContext.cs" Line="427">Change 'WitsmlContext.Dispose()' to call 'GC.SuppressFinalize(Object)'. This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FormatWitsmlQuery(PDS.WITSMLstudio.Linq.IWitsmlQuery,PDS.WITSMLstudio.OptionsIn[])" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="Witsml" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="WitsmlContext.cs" Line="313">Correct the spelling of 'Witsml' in member name 'WitsmlContext.FormatWitsmlQuery(IWitsmlQuery, ParamArray OptionsIn())' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetActiveWellbores(Energistics.Etp.Common.Datatypes.EtpUri,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="WitsmlContext.cs" Line="158">Replace method 'WitsmlContext.GetActiveWellbores(EtpUri, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetGrowingObjects(System.String,Energistics.Etp.Common.Datatypes.EtpUri,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="WitsmlContext.cs" Line="204">Replace method 'WitsmlContext.GetGrowingObjects(String, EtpUri, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetGrowingObjectsWithStatus(System.String,Energistics.Etp.Common.Datatypes.EtpUri,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="WitsmlContext.cs" Line="218">Replace method 'WitsmlContext.GetGrowingObjectsWithStatus(String, EtpUri, String)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetObjects`1(System.String,Energistics.Etp.Common.Datatypes.EtpUri,PDS.WITSMLstudio.OptionsIn[])" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="WitsmlContext.cs" Line="275">Because the behavior of 'Integer.ToString()' could vary based on the current user's locale settings, replace this call in 'WitsmlContext.GetObjects(Of T)(String, EtpUri, ParamArray OptionsIn())' with a call to 'Integer.ToString(IFormatProvider)'. If the result of 'Integer.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="WitsmlContext.cs" Line="280">Because the behavior of 'Integer.ToString()' could vary based on the current user's locale settings, replace this call in 'WitsmlContext.GetObjects(Of T)(String, EtpUri, ParamArray OptionsIn())' with a call to 'Integer.ToString(IFormatProvider)'. If the result of 'Integer.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="WitsmlContext.cs" Line="285">Because the behavior of 'Integer.ToString()' could vary based on the current user's locale settings, replace this call in 'WitsmlContext.GetObjects(Of T)(String, EtpUri, ParamArray OptionsIn())' with a call to 'Integer.ToString(IFormatProvider)'. If the result of 'Integer.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture()' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture()'.</Issue>
            </Message>
            <Message Id="System.Linq.Enumerable.ToDictionary&lt;Energistics.Etp.Common.Datatypes.EtpUri+Segment,System.String,System.String&gt;(System.Collections.Generic.IEnumerable`1&lt;Energistics.Etp.Common.Datatypes.EtpUri+Segment&gt;,System.Func`2&lt;Energistics.Etp.Common.Datatypes.EtpUri+Segment,System.String&gt;,System.Func`2&lt;Energistics.Etp.Common.Datatypes.EtpUri+Segment,System.String&gt;,System.Collections.Generic.IEqualityComparer`1&lt;System.String&gt;)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="StringComparer" Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="WitsmlContext.cs" Line="270">'WitsmlContext.GetObjects(Of T)(String, EtpUri, ParamArray OptionsIn())' passes 'StringComparer.InvariantCultureIgnoreCase' as the 'StringComparer' parameter to 'Enumerable.ToDictionary(Of EtpUri.Segment, String, String)(IEnumerable(Of EtpUri.Segment), Func(Of EtpUri.Segment, String), Func(Of EtpUri.Segment, String), IEqualityComparer(Of String))'. To perform a non-linguistic comparison, specify 'StringComparer.Ordinal' or 'StringComparer.OrdinalIgnoreCase' instead.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetWellboreObjects(System.String,Energistics.Etp.Common.Datatypes.EtpUri,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="WitsmlContext.cs" Line="170">Replace method 'WitsmlContext.GetWellboreObjects(String, EtpUri, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#One`1()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="WitsmlContext.cs" Line="125">Change 'List(Of T)' in 'WitsmlContext.One(Of T)()' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="WitsmlContext.cs" Line="125">The 'this' parameter (or 'Me' in Visual Basic) of 'WitsmlContext.One(Of T)()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="WitsmlQuery`2" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Witsml" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Witsml' in type name 'WitsmlQuery(Of T, TList)'.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'WitsmlQuery(Of T, TList)' to end in 'Collection'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(PDS.WITSMLstudio.Linq.WitsmlContext)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="WitsmlQuery.cs" Line="51">In externally visible method 'WitsmlQuery(Of T, TList).New(WitsmlContext)', validate parameter 'context' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Execute(LinqExtender.Ast.Expression)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="WitsmlQuery.cs" Line="106">Modify 'WitsmlQuery(Of T, TList).Execute(Expression)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="WitsmlQuery.cs" Line="83">In member 'WitsmlQuery(Of T, TList).Execute(Expression)', change parameter name 'expression' to 'exprssion' in order to match the identifier as it has been declared in 'IQueryContext(Of T).Execute(Expression)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Include(System.Action`1&lt;!0&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="WitsmlQuery.cs" Line="145">In externally visible method 'WitsmlQuery(Of T, TList).Include(Action(Of T))', validate parameter 'action' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetPropertyValue(System.Reflection.PropertyInfo,System.Object)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="WitsmlQuery.cs" Line="189">In externally visible method 'WitsmlQuery(Of T, TList).SetPropertyValue(PropertyInfo, Object)', validate parameter 'property' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#With(PDS.WITSMLstudio.OptionsIn)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="WitsmlQuery.cs" Line="156">In externally visible method 'WitsmlQuery(Of T, TList).With(OptionsIn)', validate parameter 'optionsIn' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="WitsmlQueryExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Witsml" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Witsml' in type name 'WitsmlQueryExtensions'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#GetByUid`1(PDS.WITSMLstudio.Linq.IWitsmlQuery`1&lt;!!0&gt;,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Uid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="WitsmlQueryExtensions.cs" Line="38">Correct the spelling of 'Uid' in member name 'WitsmlQueryExtensions.GetByUid(Of T)(IWitsmlQuery(Of T), String)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="uid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="WitsmlQueryExtensions.cs" Line="38">In method 'WitsmlQueryExtensions.GetByUid(Of T)(IWitsmlQuery(Of T), String)', correct the spelling of 'uid' in parameter name 'uid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetByUid`1(PDS.WITSMLstudio.Linq.IWitsmlQuery`1&lt;!!0&gt;,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Uid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="WitsmlQueryExtensions.cs" Line="51">Correct the spelling of 'Uid' in member name 'WitsmlQueryExtensions.GetByUid(Of T)(IWitsmlQuery(Of T), String, String)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="uid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="WitsmlQueryExtensions.cs" Line="51">In method 'WitsmlQueryExtensions.GetByUid(Of T)(IWitsmlQuery(Of T), String, String)', correct the spelling of 'uid' in parameter name 'uid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="WitsmlQueryExtensions.cs" Line="51">In method 'WitsmlQueryExtensions.GetByUid(Of T)(IWitsmlQuery(Of T), String, String)', correct the spelling of 'uid' in parameter name 'uidWell' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetByUid`1(PDS.WITSMLstudio.Linq.IWitsmlQuery`1&lt;!!0&gt;,System.String,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Uid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="WitsmlQueryExtensions.cs" Line="65">Correct the spelling of 'Uid' in member name 'WitsmlQueryExtensions.GetByUid(Of T)(IWitsmlQuery(Of T), String, String, String)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="uid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="WitsmlQueryExtensions.cs" Line="65">In method 'WitsmlQueryExtensions.GetByUid(Of T)(IWitsmlQuery(Of T), String, String, String)', correct the spelling of 'uid' in parameter name 'uid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="WitsmlQueryExtensions.cs" Line="65">In method 'WitsmlQueryExtensions.GetByUid(Of T)(IWitsmlQuery(Of T), String, String, String)', correct the spelling of 'uid' in parameter name 'uidWell' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Linq" File="WitsmlQueryExtensions.cs" Line="65">In method 'WitsmlQueryExtensions.GetByUid(Of T)(IWitsmlQuery(Of T), String, String, String)', correct the spelling of 'uid' in parameter name 'uidWellbore' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="PDS.WITSMLstudio.Query">
       <Types>
        <Type Name="QueryTemplates" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetTemplate(System.String,System.String,System.String,PDS.WITSMLstudio.OptionsIn+ReturnElements)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="3" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Query" File="QueryTemplates.cs" Line="55">In externally visible method 'QueryTemplates.GetTemplate(String, String, String, OptionsIn.ReturnElements)', validate parameter 'returnElementsOptionIn' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetTemplateForWitsml131(System.String,PDS.WITSMLstudio.OptionsIn+ReturnElements)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Query" File="QueryTemplates.generated.cs" Line="47">'QueryTemplates.GetTemplateForWitsml131(String, OptionsIn.ReturnElements)' has a cyclomatic complexity of 95. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="AvoidUnmaintainableCode" Category="Microsoft.Maintainability" CheckId="CA1505" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="Method" Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Query" File="QueryTemplates.generated.cs" Line="47">'QueryTemplates.GetTemplateForWitsml131(String, OptionsIn.ReturnElements)' has a maintainability index of 17. Rewrite or refactor the method to increase its maintainability index (MI). An MI below 10 indicates poor maintainability, an MI between 10 and 20 indicates moderate maintainability, and an MI above 20 indicates good maintainability.</Issue>
            </Message>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Query" File="QueryTemplates.generated.cs" Line="47">Consider changing the type of parameter 'returnElementsOptionIn' in 'QueryTemplates.GetTemplateForWitsml131(String, OptionsIn.ReturnElements)' from 'OptionsIn.ReturnElements' to its base type 'OptionsIn'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
            <Message Id="Witsml" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Query" File="QueryTemplates.generated.cs" Line="47">Correct the spelling of 'Witsml' in member name 'QueryTemplates.GetTemplateForWitsml131(String, OptionsIn.ReturnElements)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Query" File="QueryTemplates.generated.cs" Line="52">In externally visible method 'QueryTemplates.GetTemplateForWitsml131(String, OptionsIn.ReturnElements)', validate parameter 'returnElementsOptionIn' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetTemplateForWitsml141(System.String,PDS.WITSMLstudio.OptionsIn+ReturnElements)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Method" Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Query" File="QueryTemplates.generated.cs" Line="198">'QueryTemplates.GetTemplateForWitsml141(String, OptionsIn.ReturnElements)' is coupled with 32 different types from 3 different namespaces. Rewrite or refactor the method to decrease its class coupling, or consider moving the method to one of the other types it is tightly coupled with. A class coupling above 40 indicates poor maintainability, a class coupling between 40 and 30 indicates moderate maintainability, and a class coupling below 30 indicates good maintainability.</Issue>
            </Message>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Query" File="QueryTemplates.generated.cs" Line="198">'QueryTemplates.GetTemplateForWitsml141(String, OptionsIn.ReturnElements)' has a cyclomatic complexity of 136. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="AvoidUnmaintainableCode" Category="Microsoft.Maintainability" CheckId="CA1505" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="Method" Certainty="90" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Query" File="QueryTemplates.generated.cs" Line="198">'QueryTemplates.GetTemplateForWitsml141(String, OptionsIn.ReturnElements)' has a maintainability index of 7. Rewrite or refactor the method to increase its maintainability index (MI). An MI below 10 indicates poor maintainability, an MI between 10 and 20 indicates moderate maintainability, and an MI above 20 indicates good maintainability.</Issue>
            </Message>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Query" File="QueryTemplates.generated.cs" Line="198">Consider changing the type of parameter 'returnElementsOptionIn' in 'QueryTemplates.GetTemplateForWitsml141(String, OptionsIn.ReturnElements)' from 'OptionsIn.ReturnElements' to its base type 'OptionsIn'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
            <Message Id="Witsml" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Query" File="QueryTemplates.generated.cs" Line="198">Correct the spelling of 'Witsml' in member name 'QueryTemplates.GetTemplateForWitsml141(String, OptionsIn.ReturnElements)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Query" File="QueryTemplates.generated.cs" Line="203">In externally visible method 'QueryTemplates.GetTemplateForWitsml141(String, OptionsIn.ReturnElements)', validate parameter 'returnElementsOptionIn' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="QueryTemplates+Witsml131" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Witsml" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Witsml' in type name 'QueryTemplates.Witsml131'.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml131'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml131+BhaRun" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Bha" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Bha' in type name 'QueryTemplates.Witsml131.BhaRun'.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml131.BhaRun'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml131+CementJob" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml131.CementJob'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml131+ConvCore" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Conv" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Conv' in type name 'QueryTemplates.Witsml131.ConvCore'.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml131.ConvCore'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml131+FluidsReport" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml131.FluidsReport'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml131+FormationMarker" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml131.FormationMarker'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml131+Log" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml131.Log'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml131+Message" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml131.Message'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml131+MudLog" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml131.MudLog'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml131+OpsReport" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml131.OpsReport'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml131+Rig" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml131.Rig'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml131+Risk" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml131.Risk'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml131+SidewallCore" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml131.SidewallCore'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml131+SurveyProgram" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml131.SurveyProgram'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml131+Target" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml131.Target'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml131+Trajectory" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml131.Trajectory'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml131+Tubular" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml131.Tubular'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml131+WbGeometry" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Wb" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'Wb' in type name 'QueryTemplates.Witsml131.WbGeometry' by changing it to 'WB'.</Issue>
          </Message>
          <Message Id="Wb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Wb' in type name 'QueryTemplates.Witsml131.WbGeometry'.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml131.WbGeometry'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml131+Well" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml131.Well'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml131+Wellbore" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml131.Wellbore'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml131+WellLog" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml131.WellLog'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml141" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Witsml" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Witsml' in type name 'QueryTemplates.Witsml141'.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml141'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml141+Attachment" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml141.Attachment'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml141+BhaRun" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Bha" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Bha' in type name 'QueryTemplates.Witsml141.BhaRun'.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml141.BhaRun'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml141+CementJob" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml141.CementJob'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml141+ConvCore" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Conv" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Conv' in type name 'QueryTemplates.Witsml141.ConvCore'.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml141.ConvCore'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml141+DepthRegImage" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml141.DepthRegImage'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml141+DownholeComponent" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Downhole" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Downhole' in type name 'QueryTemplates.Witsml141.DownholeComponent'.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml141.DownholeComponent'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml141+DrillReport" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml141.DrillReport'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml141+FluidsReport" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml141.FluidsReport'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml141+FormationMarker" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml141.FormationMarker'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml141+Log" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml141.Log'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml141+Message" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml141.Message'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml141+MudLog" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml141.MudLog'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml141+OpsReport" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml141.OpsReport'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml141+Rig" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml141.Rig'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml141+Risk" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml141.Risk'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml141+SidewallCore" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml141.SidewallCore'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml141+StimJob" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Stim" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Stim' in type name 'QueryTemplates.Witsml141.StimJob'.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml141.StimJob'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml141+SurveyProgram" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml141.SurveyProgram'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml141+Target" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml141.Target'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml141+ToolErrorModel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml141.ToolErrorModel'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml141+ToolErrorTermSet" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml141.ToolErrorTermSet'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml141+Trajectory" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml141.Trajectory'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml141+Tubular" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml141.Tubular'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml141+WbGeometry" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Wb" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'Wb' in type name 'QueryTemplates.Witsml141.WbGeometry' by changing it to 'WB'.</Issue>
          </Message>
          <Message Id="Wb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Wb' in type name 'QueryTemplates.Witsml141.WbGeometry'.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml141.WbGeometry'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml141+Well" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml141.Well'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml141+Wellbore" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml141.Wellbore'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml141+WellboreCompletion" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml141.WellboreCompletion'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml141+WellCMLedger" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml141.WellCMLedger'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryTemplates+Witsml141+WellCompletion" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'QueryTemplates.Witsml141.WellCompletion'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="WitsmlQueryContext" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Witsml" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Witsml' in type name 'WitsmlQueryContext'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.String,Energistics.DataAccess.WMLSVersion,System.Double)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Query" File="WitsmlQueryContext.cs" Line="40">Replace method 'WitsmlQueryContext.New(String, WMLSVersion, Double)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Query" File="WitsmlQueryContext.cs" Line="40">Change the type of parameter 'url' of method 'WitsmlQueryContext.New(String, WMLSVersion, Double)' from string to System.Uri, or provide an overload of 'WitsmlQueryContext.New(String, WMLSVersion, Double)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String,System.Security.SecureString,Energistics.DataAccess.WMLSVersion,System.Double)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="username" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Query" File="WitsmlQueryContext.cs" Line="40">In member 'WitsmlQueryContext.New(String, String, SecureString, WMLSVersion, Double)', the discrete term 'username' in parameter name 'username' should be expressed as a compound word, 'userName'.</Issue>
            </Message>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Query" File="WitsmlQueryContext.cs" Line="40">Replace method 'WitsmlQueryContext.New(String, String, SecureString, WMLSVersion, Double)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Query" File="WitsmlQueryContext.cs" Line="40">Change the type of parameter 'url' of method 'WitsmlQueryContext.New(String, String, SecureString, WMLSVersion, Double)' from string to System.Uri, or provide an overload of 'WitsmlQueryContext.New(String, String, SecureString, WMLSVersion, Double)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String,System.String,Energistics.DataAccess.WMLSVersion,System.Double)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="username" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Query" File="WitsmlQueryContext.cs" Line="40">In member 'WitsmlQueryContext.New(String, String, String, WMLSVersion, Double)', the discrete term 'username' in parameter name 'username' should be expressed as a compound word, 'userName'.</Issue>
            </Message>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Query" File="WitsmlQueryContext.cs" Line="40">Replace method 'WitsmlQueryContext.New(String, String, String, WMLSVersion, Double)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Query" File="WitsmlQueryContext.cs" Line="40">Change the type of parameter 'url' of method 'WitsmlQueryContext.New(String, String, String, WMLSVersion, Double)' from string to System.Uri, or provide an overload of 'WitsmlQueryContext.New(String, String, String, WMLSVersion, Double)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteQuery(PDS.WITSMLstudio.Functions,System.String,System.String,System.String,System.String&amp;,System.String&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Query" File="WitsmlQueryContext.cs" Line="450">Modify 'WitsmlQueryContext.ExecuteQuery(Functions, String, String, String, ByRef String, ByRef String)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetActiveWellbores(Energistics.Etp.Common.Datatypes.EtpUri,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Query" File="WitsmlQueryContext.cs" Line="160">Replace method 'WitsmlQueryContext.GetActiveWellbores(EtpUri, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetGrowingObjects(System.String,Energistics.Etp.Common.Datatypes.EtpUri,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Query" File="WitsmlQueryContext.cs" Line="253">Replace method 'WitsmlQueryContext.GetGrowingObjects(String, EtpUri, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetGrowingObjectsWithStatus(System.String,Energistics.Etp.Common.Datatypes.EtpUri,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Query" File="WitsmlQueryContext.cs" Line="275">Replace method 'WitsmlQueryContext.GetGrowingObjectsWithStatus(String, EtpUri, String)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Query" File="WitsmlQueryContext.cs" Line="294">Modify 'WitsmlQueryContext.GetGrowingObjectsWithStatus(String, EtpUri, String)' to catch a more specific exception than 'Object' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetObjects`1(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,PDS.WITSMLstudio.OptionsIn[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Query" File="WitsmlQueryContext.cs" Line="372">Replace method 'WitsmlQueryContext.GetObjects(Of T)(String, String, Boolean, Boolean, Boolean, ParamArray OptionsIn())' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetWellboreObjects(System.String,Energistics.Etp.Common.Datatypes.EtpUri,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Query" File="WitsmlQueryContext.cs" Line="181">Replace method 'WitsmlQueryContext.GetWellboreObjects(String, EtpUri, Boolean)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetFilterCriteria(System.String,System.Xml.Linq.XDocument,Energistics.Etp.Common.Datatypes.EtpUri)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Linq.Enumerable.ToDictionary&lt;Energistics.Etp.Common.Datatypes.EtpUri+Segment,System.String,System.String&gt;(System.Collections.Generic.IEnumerable`1&lt;Energistics.Etp.Common.Datatypes.EtpUri+Segment&gt;,System.Func`2&lt;Energistics.Etp.Common.Datatypes.EtpUri+Segment,System.String&gt;,System.Func`2&lt;Energistics.Etp.Common.Datatypes.EtpUri+Segment,System.String&gt;,System.Collections.Generic.IEqualityComparer`1&lt;System.String&gt;)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
             <Issue Name="StringComparer" Certainty="75" Level="Error" Path="C:\Users\rarteaga\Source\Repos\witsml\src\Core\Query" File="WitsmlQueryContext.cs" Line="474">'WitsmlQueryContext.SetFilterCriteria(String, XDocument, EtpUri)' passes 'StringComparer.InvariantCultureIgnoreCase' as the 'StringComparer' parameter to 'Enumerable.ToDictionary(Of EtpUri.Segment, String, String)(IEnumerable(Of EtpUri.Segment), Func(Of EtpUri.Segment, String), Func(Of EtpUri.Segment, String), IEqualityComparer(Of String))'. To perform a non-linguistic comparison, specify 'StringComparer.Ordinal' or 'StringComparer.OrdinalIgnoreCase' instead.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
     <Resources>
      <Resource Name="PDS.WITSMLstudio.Properties.Resources.resources">
       <Messages>
        <Message Id="whitespace" TypeName="ResourceStringCompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1701" Status="Active" Created="2021-05-17 02:34:06Z" FixCategory="NonBreaking">
         <Issue Name="StringResourceShouldBeCompoundWord" Certainty="80" Level="Error">In resource 'PDS.WITSMLstudio.Properties.Resources.resx', referenced by name 'ParametersNotEncodedByRules' the discrete term 'whitespace' in string value 'The OptionsIn parameter string must be encoded utilizing a subset (semicolon separators and no whitespace) of the encoding rules for HTML form content type application/x-www-form-urlencoded.' should be expressed as a compound word. If 'whitespace' refers to an API identifier, case it as 'whiteSpace', otherwise split it into two words separated by a space.</Issue>
        </Message>
       </Messages>
      </Resource>
     </Resources>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="ArrayFieldsShouldNotBeReadOnly" Category="Microsoft.Security" CheckId="CA2105">
   <Name>Array fields should not be read only</Name>
   <Description>Read-only fields that reference arrays might not give the intended effect. Setting a field which references an array to read-only prevents the value of the field from being changed. Note that elements in the array can be changed. You can ignore this violation if protecting the contents of the array is not a concern.</Description>
   <Resolution Name="Default">Either replace {0} with a strongly typed collection that cannot be changed, or replace the public field with a method that returns a clone of a private array.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182299.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">CriticalWarning</MessageLevel>
   <File Name="securityrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>Assemblies should have valid strong names</Name>
   <Description>Either the assembly has no strong name, an invalid one, or the strong name is valid only because of the computer configuration. The assembly should not be deployed in this state. The most common causes of this are: 1) The assembly's contents were modified after it was signed. 2) The signing process failed. 3) The assembly was delay-signed. 4) A registry key existed that allowed the check to pass (where it would not have otherwise).</Description>
   <Resolution Name="NoStrongName">Sign {0} with a strong name key.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182127.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506">
   <Name>Avoid excessive class coupling</Name>
   <Description>Types and methods with a high degree of class coupling can be difficult to maintain.</Description>
   <Resolution Name="Method">{0} is coupled with {1} different types from {2} different namespaces. Rewrite or refactor the method to decrease its class coupling, or consider moving the method to one of the other types it is tightly coupled with. A class coupling above {3} indicates poor maintainability, a class coupling between {3} and {4} indicates moderate maintainability, and a class coupling below {4} indicates good maintainability.</Resolution>
   <Resolution Name="Type">{0} is coupled with {1} different types from {2} different namespaces. Rewrite or refactor this class's methods to decrease its class coupling, or consider moving some of the class's methods to some of the other types it is tightly coupled with. A class coupling above {3} indicates poor maintainability, a class coupling between {3} and {4} indicates moderate maintainability, and a class coupling below {4} indicates good maintainability.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb397994.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502">
   <Name>Avoid excessive complexity</Name>
   <Description>Method implementations that are exceedingly complex increase the challenge of understanding and maintaining code.</Description>
   <Resolution Name="Default">{0} has a cyclomatic complexity of {1}. Rewrite or refactor the method to reduce complexity to {2}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182212.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020">
   <Name>Avoid namespaces with few types</Name>
   <Description>A namespace should generally have more than five types.</Description>
   <Resolution Name="Default">Consider merging the types defined in '{0}' with another namespace.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182130.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021">
   <Name>Avoid out parameters</Name>
   <Description>Using out parameters might indicate a design flaw. Although there are legitimate times to use out parameters, their use frequently indicates a design that does not conform to the design guidelines for managed code.</Description>
   <Resolution Name="Default">Consider a design that does not require that {0} be an out parameter.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182131.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnmaintainableCode" Category="Microsoft.Maintainability" CheckId="CA1505">
   <Name>Avoid unmaintainable code</Name>
   <Description>Types and methods with a high degree of class coupling, cyclomatic complexity and/or program length can be difficult to maintain.</Description>
   <Resolution Name="Method">{0} has a maintainability index of {1}. Rewrite or refactor the method to increase its maintainability index (MI). An MI below {2} indicates poor maintainability, an MI between {2} and {3} indicates moderate maintainability, and an MI above {3} indicates good maintainability.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386043.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813">
   <Name>Avoid unsealed attributes</Name>
   <Description>Seal attribute types for improved performance. Sealing attribute types speeds up performance during reflection on custom attributes.</Description>
   <Resolution Name="Default">Seal {0}, if possible.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182267.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823">
   <Name>Avoid unused private fields</Name>
   <Description>Private fields were detected that do not appear to be accessed within the assembly. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">It appears that field {0} is never used or is only ever assigned to. Use this field or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245042.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816">
   <Name>Call GC.SuppressFinalize correctly</Name>
   <Description>Call GC.SuppressFinalize to suppress finalization of your instance once Dispose has been called. Objects that implement IDisposable should call SuppressFinalize from the IDisposable.Dispose method to prevent the garbage collector from calling Object.Finalize on an object that does not require it.</Description>
   <Resolution Name="NotCalled">Change {0} to call {1}. This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182269.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="usagerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227">
   <Name>Collection properties should be read only</Name>
   <Description>Properties that return collections should be read-only so that users cannot entirely replace the backing store. Users can still modify the contents of the collection by calling relevant methods on the collection. Note that the XmlSerializer class has special support for deserializing read-only collections. See the XmlSerializer overview for more information.</Description>
   <Resolution Name="Default">Change {0} to be read-only by removing the property setter.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182327.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702">
   <Name>Compound words should be cased correctly</Name>
   <Description>Avoid creating compound words from terms which exist in the dictionary as discrete terms. Do not create a compound word such as 'StopWatch' or 'PopUp'. These terms are recognized in the dictionary and should be cased as 'Stopwatch' and 'Popup'.</Description>
   <Resolution Name="MemberParameterShouldBeCompoundWord">In member {0}, the discrete term '{1}' in parameter name {2} should be expressed as a compound word, '{3}'.</Resolution>
   <Resolution Name="MemberParameterShouldBeDiscreteTerm">In member {0}, the compound word '{1}' in parameter name {2} exists as a discrete term. If your usage is intended to be single word, case it as '{3}' or strip the first token entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberShouldBeCompoundWord">The discrete term '{0}' in member name {1} should be expressed as a compound word, '{2}'.</Resolution>
   <Resolution Name="MemberShouldBeDiscreteTerm">The compound word '{0}' in member name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}' or strip the first token entirely if it represents any sort of Hungarian notation.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264474.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="80">Error</MessageLevel>
   <File Name="namingrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011">
   <Name>Consider passing base types as parameters</Name>
   <Description>Using base types as parameters to methods improves re-use of these methods if you only use methods &amp; properties from the parameter's base class. E.g. use Stream instead of FileStream as a parameter when only calling Stream.Read(), this makes the method work on all kind of streams instead of just File streams.</Description>
   <Resolution Name="Default">Consider changing the type of parameter {0} in {1} from {2} to its base type {3}. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/3hk32yyz.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Error</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026">
   <Name>Default parameters should not be used</Name>
   <Description>Some programming languages do not support default parameters. Replace default parameters with method overloads that supply the default argument.</Description>
   <Resolution Name="Default">Replace method {0} with an overload that supplies all default arguments.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182135.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="DefineAccessorsForAttributeArguments" Category="Microsoft.Design" CheckId="CA1019">
   <Name>Define accessors for attribute arguments</Name>
   <Description>Provide accessors for both named and positional arguments. Each positional argument on an attribute should declare a read-only property with the same name (but different casing). Each named argument should provide a read/write property with the same name (but different casing).</Description>
   <Resolution Name="Default">Add a public read-only property accessor for positional argument {0} of Attribute {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182136.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000">
   <Name>Dispose objects before losing scope</Name>
   <Description>If a disposable object is not explicitly disposed before all references to it are out of scope, the object will be disposed at some indeterminate time when the garbage collector runs the finalizer of the object. Because an exceptional event might occur that will prevent the finalizer of the object from running, the object should be explicitly disposed instead.</Description>
   <Resolution Name="ExceptionEdge">In method {0}, object {1} is not disposed along all exception paths. Call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Resolution Name="NonExceptionEdge">In method {0}, call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182289.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800">
   <Name>Do not cast unnecessarily</Name>
   <Description>Avoid duplicate casts where possible, since there is a cost associated with them.</Description>
   <Resolution Name="Local">{0}, a variable, is cast to type {1} multiple times in method {2}. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant {3} instruction.</Resolution>
   <Resolution Name="Parameter">{0}, a parameter, is cast to type {1} multiple times in method {2}. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant {3} instruction.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182271.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
   <Name>Do not catch general exception types</Name>
   <Description>You should not catch Exception or SystemException. Catching generic exception types can hide run-time problems from the library user, and can complicate debugging. You should catch only those exceptions that you can handle gracefully.</Description>
   <Resolution Name="Default">Modify {0} to catch a more specific exception than {1} or rethrow the exception.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182137.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104">
   <Name>Do not declare read only mutable reference types</Name>
   <Description>A read-only declaration for a mutable reference type does not prevent the field's instance data from being modified. For example, a read-only StringBuilder field declaration does not make sense, since the data encapsulated by the StringBuilder can be modified using the read-only reference.</Description>
   <Resolution Name="Default">Remove the read-only designation from {0} or change the field to one that is an immutable reference type. If the reference type {1} is, in fact, immutable, exclude this message.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182302.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="25">Error</MessageLevel>
   <File Name="securityrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051">
   <Name>Do not declare visible instance fields</Name>
   <Description>Instance fields that are visible outside of the type that declares them, limit your ability to change the implementation details for those data items. Use properties instead. They do not compromise usability or performance and they do provide flexibility in that they conceal the implementation details of the underlying data.</Description>
   <Resolution Name="Default">Because field {0} is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182141.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002">
   <Name>Do not expose generic lists</Name>
   <Description>Do not expose List&lt;T&gt; in object models. Use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt; instead. List&lt;T&gt; is meant to be used from implementation, not in object model API. List&lt;T&gt; is optimized for performance at the cost of long term versioning. For example, if you return List&lt;T&gt; to the client code, you will not ever be able to receive notifications when client code modifies the collection.</Description>
   <Resolution Name="Default">Change {0} in {1} to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182142.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806">
   <Name>Do not ignore method results</Name>
   <Description>The result of methods that return new instances of strings should be assigned to a variable and subsequently used. If the result of a method that creates a new object, such as String.ToLower(), is not assigned to a variable, the call is wasted.</Description>
   <Resolution Name="TryParse">{0} calls {1} but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182273.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006">
   <Name>Do not nest generic types in member signatures</Name>
   <Description>Avoid API that require users to instantiate a generic type with another generic type as type argument. The syntax gets too complex.</Description>
   <Resolution Name="Default">Consider a design where {0} doesn't nest generic type {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182144.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="EnumStorageShouldBeInt32" Category="Microsoft.Design" CheckId="CA1028">
   <Name>Enum storage should be Int32</Name>
   <Description>There is little or no benefit to using a type smaller than Int32. You might require a type that is larger than Int32 if: 1) the enumeration values are flags and there are or will be many (&amp;amp;gt;32) values, or 2) the type needs to be different from Int32 for backward compatibility. Avoid using an underlying type that is not integral.</Description>
   <Resolution Name="NotInt32">If possible, make the underlying type of {0} System.Int32 instead of {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182147.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="60">Warning</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004">
   <Name>Generic methods should provide type parameter</Name>
   <Description>Methods where the type parameter cannot be inferred from the parameters and therefore has to be defined in the method call are too difficult to understand. Methods with a formal parameter typed as the generic method type parameter support inference. Methods with no formal parameter typed as the generic method type parameter don't support inference.</Description>
   <Resolution Name="Default">Consider a design where {0} doesn't require explicit type parameter {1} in any call to it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182150.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>Identifiers should be cased correctly</Name>
   <Description>Type, namespace, and member identifiers are Pascal-cased. Parameter identifiers are camel-cased. Two letter acronyms within these identifiers should be upper-cased, for example, use System.IO instead of System.Io. Acronyms of three or more letters should be Pascal-cased, for example, use System.Xml instead of System.XML. The pascal-casing convention capitalizes the first letter of each word, as in BackColor. The camel-casing convention formats the first letter of the first word in lowercase and capitalizes the first letter of all subsequent words, as in backgroundColor. Although it may be common practice for some two letter acronyms to not be fully capitalized, violations of this rule should not be excluded for this reason. For example, 'DbConnection', is common but incorrect; use DBConnection. A violation of this rule might be required for compatibility with existing, non-managed symbol schemes. In general, however, these symbols should not be visible outside the assembly that uses them.</Description>
   <Resolution Name="Assembly">Correct the casing of '{0}' in assembly name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="Member">Correct the casing of '{0}' in member name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="MemberParameter">In member {0}, correct the casing of '{1}' in parameter name {2} by changing it to '{3}'.</Resolution>
   <Resolution Name="Namespace">Correct the casing of '{0}' in namespace name '{1}' by changing it to '{2}'.</Resolution>
   <Resolution Name="Type">Correct the casing of '{0}' in type name {1} by changing it to '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182240.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="namingrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>Identifiers should be spelled correctly</Name>
   <Description>The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</Description>
   <Resolution Name="Assembly">Correct the spelling of '{0}' in assembly name {1}.</Resolution>
   <Resolution Name="Member">Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberParameter">In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberParameterMoreMeaningfulName">In method {0}, consider providing a more meaningful name than parameter name {1}.</Resolution>
   <Resolution Name="Namespace">Correct the spelling of '{0}' in namespace name '{1}'.</Resolution>
   <Resolution Name="Type">Correct the spelling of '{0}' in type name {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264492.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="namingrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710">
   <Name>Identifiers should have correct suffix</Name>
   <Description>Types that extend certain base types have specified name suffixes. Types that extend Attribute, for example, should be suffixed in 'Attribute', as in ObsoleteAttribute. This rules checks types that extend several base types, including Attribute, Exception, EventArgs, IMembershipPermission, Stream, and others.</Description>
   <Resolution Name="Default">Rename {0} to end in '{1}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182244.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720">
   <Name>Identifiers should not contain type names</Name>
   <Description>Avoid using language-specific types name in parameters and members and data type identifiers in parameters. Types names might not be intuitive for all developers. It is recommended that you select a generic name, such as 'value', instead. If this is not sufficient, be sure to use the type name as it is defined in the .NET Framework Library and avoid language-specific type names completely. Some examples of C#-specific type names are 'float' (use 'Single' if a generic name is not sufficient), and 'ulong' (use 'UInt64' if a generic name is not sufficient).</Description>
   <Resolution Name="LanguageIndependentMemberParameter">In member {0}, consider replacing the data type identifier '{1}' in parameter name {2} with a more generic term, such as 'value'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb531486.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="namingrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716">
   <Name>Identifiers should not match keywords</Name>
   <Description>Identifiers which conflict with reserved language keywords should be avoided. Using a reserved keyword as an identifier makes it harder for consumers in other languages to use your API.</Description>
   <Resolution Name="Member">Rename virtual/interface member {0} so that it no longer conflicts with the reserved language keyword '{1}'. Using a reserved keyword as the name of a virtual/interface member makes it harder for consumers in other languages to override/implement the member.</Resolution>
   <Resolution Name="MemberParameter">In virtual/interface member {0}, rename parameter {1} so that it no longer conflicts with the reserved language keyword '{2}'. Using a reserved keyword as the name of a parameter on a virtual/interface member makes it harder for consumers in other languages to override/implement the member.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182248.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032">
   <Name>Implement standard exception constructors</Name>
   <Description>Multiple constructors are required to correctly implement a custom exception. Missing constructors can make your exception unusable in certain scenarios. For example, the serialization constructor is required for handling exceptions in XML Web services.</Description>
   <Resolution Name="MissingConstructor">Add the following constructor to {0}: {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182151.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810">
   <Name>Initialize reference type static fields inline</Name>
   <Description>Static fields should be initialized when declared. Initializing static data in explicit static constructors results in less performant code.</Description>
   <Resolution Name="Default">Initialize all static fields in {0} when those fields are declared and remove the explicit static constructor.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182275.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">CriticalWarning</MessageLevel>
   <File Name="performancerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>Mark assemblies with CLSCompliantAttribute</Name>
   <Description>Assemblies should explicitly state their CLS compliance using the CLSCompliant attribute. An assembly without this attribute is not CLS-compliant. Assemblies, modules, and types can be CLS-compliant even if some parts of the assembly, module, or type are not CLS-compliant. The following rules apply: 1) If the element is marked CLSCompliant, any noncompliant members must have the CLSCompliant attribute present with its argument set to false. 2) A comparable CLS-compliant alternative member must be supplied for each member that is not CLS-compliant.</Description>
   <Resolution Name="Default">Mark {0} with CLSCompliant(true) because it exposes externally visible types.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182156.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824">
   <Name>Mark assemblies with NeutralResourcesLanguageAttribute</Name>
   <Description>The NeutralResourcesLanguage attribute informs the ResourceManager of the language used to render the neutral culture's resources for an assembly. When looking up resources in the same culture as the neutral resources language, the ResourceManager automatically uses the resources located in the main assembly, instead of searching for a satellite assembly with the current user interface culture for the current thread. This will improve lookup performance for the first resource you load and can reduce your working set.</Description>
   <Resolution Name="Default">Because assembly {0} contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb385967.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
   <Name>Mark members as static</Name>
   <Description>Methods which do not access instance data or call instance methods can be marked as static (Shared in Visual Basic). After doing so, the compiler will emit non-virtual call sites to these members which will prevent a check at runtime for each call that ensures the current object pointer is non-null. This can result in a measurable performance gain for performance-sensitive code. In some cases, the failure to access the current object instance represents a correctness issue.</Description>
   <Resolution Name="Default">The 'this' parameter (or 'Me' in Visual Basic) of {0} is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245046.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034">
   <Name>Nested types should not be visible</Name>
   <Description>Do not use public, protected or protected internal (Protected Friend) nested types as a way of grouping types. Use namespaces for this purpose. There are very limited scenarios where nested types are the best design. Also, nested type member accessibility is not clearly understood by all audiences. Enumerators are exempt from this rule.</Description>
   <Resolution Name="Default">Do not nest type {0}. Alternatively, change its accessibility so that it is not externally visible.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182162.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211">
   <Name>Non-constant fields should not be visible</Name>
   <Description>Static fields should be constant unless you carefully manage access to the field using locks. Using static variables without making them thread safe can compromise execution state. This rule applies to managed code libraries. If the analyzed assembly is an application, it is usually safe to exclude violations of this rule.</Description>
   <Resolution Name="Default">Consider making {0} non-public or a constant.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182353.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="OnlyFlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1717">
   <Name>Only FlagsAttribute enums should have plural names</Name>
   <Description>Plural names indicate that the values of the enumeration can be combined. For example, an enumeration named 'Day' indicates a single day, and an enumeration named 'Days' indicates multiple days. Enumeration values should be combined using the bit-wise OR operator only if the Flags attribute is present on the enumeration.</Description>
   <Resolution Name="Default">If the name {0} is plural, change it to its singular form.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264487.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="namingrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="OperationsShouldNotOverflow" Category="Microsoft.Usage" CheckId="CA2233">
   <Name>Operations should not overflow</Name>
   <Description>Arithmetic operations should not be done without first validating the operands to prevent overflow.</Description>
   <Resolution Name="Default">Correct the potential overflow in the operation '{0}' in {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182354.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="usagerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815">
   <Name>Override equals and operator equals on value types</Name>
   <Description>The default System.ValueType implementation might not perform as well as a custom implementation.</Description>
   <Resolution Name="Equals">{0} should override Equals.</Resolution>
   <Resolution Name="op_Equality">{0} should override the equality (==) and inequality (!=) operators.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182276.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725">
   <Name>Parameter names should match base declaration</Name>
   <Description>For usability reasons, parameter names in overridden methods should match those of the base declaration.</Description>
   <Resolution Name="Default">In member {0}, change parameter name {1} to {2} in order to match the identifier as it has been declared in {3}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182251.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819">
   <Name>Properties should not return arrays</Name>
   <Description>Properties that return arrays are prone to code inefficiencies. Consider using a collection or making this a method. See the design guidelines for more information.</Description>
   <Resolution Name="Default">Change {0} to return a collection or make it a method.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/0fss9skc.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721">
   <Name>Property names should not match get methods</Name>
   <Description>A Get method was found with the same name as a property. Get methods and properties should have names that clearly distinguish their function. See the design guidelines for information regarding choosing properties over methods.</Description>
   <Resolution Name="BaseType">The property name {0} is confusing given the existence of inherited method {1}. Rename or remove this property.</Resolution>
   <Resolution Name="SameType">The property name {0} is confusing given the existence of method {1}. Rename or remove one of these members.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182253.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="ResourceStringCompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1701">
   <Name>Resource string compound words should be cased correctly</Name>
   <Description>Avoid creating compound words from terms which exist in the dictionary as discrete terms. Do not create a compound word such as 'StopWatch' or 'PopUp'. These terms are recognized in the dictionary and should be cased as 'Stopwatch' and 'Popup'.</Description>
   <Resolution Name="StringResourceShouldBeCompoundWord">In resource {0}, referenced by name '{1}' the discrete term '{2}' in string value '{3}' should be expressed as a compound word. If '{2}' refers to an API identifier, case it as '{4}', otherwise split it into two words separated by a space.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264481.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="80">Error</MessageLevel>
   <File Name="namingrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801">
   <Name>Review unused parameters</Name>
   <Description>Review parameters in non-virtual methods that are not used in the method body to ensure no correctness exists around failure to access them. Unused parameters incur maintenance and performance costs. Sometimes a violation of this rule can point to an implementation bug in the method (i.e. the parameter should actually have been used in the method body). Exclude warnings of this rule if the parameter has to exist because of backward compatibility.</Description>
   <Resolution Name="Default">Parameter {0} of {1} is never used. Remove the parameter or use it in the method body.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182268.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306">
   <Name>Set locale for data types</Name>
   <Description>In most cases, Locale should be explicitly set to CultureInfo.InvariantCulture on DataSet and DataTable instances. Upon creation of a DataSet or DataTable instance, the Locale is set to the current culture. In most cases, the Locale should be set to CultureInfo.InvariantCulture to guarantee proper sorting behavior in all cultures.</Description>
   <Resolution Name="Default">Be sure to set the {0} Locale property wherever {1} creates an instance of that type.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182188.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>Specify IFormatProvider</Name>
   <Description>If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="IFormatProviderAlternate">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be based on input from the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify {4}.</Resolution>
   <Resolution Name="IFormatProviderAlternateString">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182190.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307">
   <Name>Specify StringComparison</Name>
   <Description>If an overload exists that takes a StringComparison argument, it should always be called in favor of an overload that does not.</Description>
   <Resolution Name="Default">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386080.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820">
   <Name>Test for empty strings using string length</Name>
   <Description>To test for empty strings, check if String.Length is equal to zero. Constructs such as "".Equals(someString) and String.Empty.Equals(someString) are less efficient than testing the string length. Replace these with checks for someString.Length == 0.</Description>
   <Resolution Name="IsNullOrEmpty">Replace the call to {0} in {1} with a call to 'String.IsNullOrEmpty'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182279.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054">
   <Name>URI parameters should not be strings</Name>
   <Description>If a parameter name contains "uri" or "url" or "urn", and it's typed as string, the parameter type should be changed to System.Uri, unless there is an overload method where the same parameter is typed as System.Uri.</Description>
   <Resolution Name="Default">Change the type of parameter {0} of method {1} from string to System.Uri, or provide an overload of {1}, that allows {0} to be passed as a System.Uri object.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182174.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="60">Error</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="UriPropertiesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1056">
   <Name>URI properties should not be strings</Name>
   <Description>If a property name contains "uri" or "url" or "urn" and it's typed as string, it should be changed to System.Uri.</Description>
   <Resolution Name="Default">Change the type of property {0} from string to System.Uri.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182175.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="UriReturnValuesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1055">
   <Name>URI return values should not be strings</Name>
   <Description>If a function name contains "uri" or "url" or "urn" and the return type is string, the return type should be changed to System.Uri.</Description>
   <Resolution Name="Default">Change the return type of {0} from string to System.Uri.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182176.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="60">Error</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="UseLiteralsWhereAppropriate" Category="Microsoft.Performance" CheckId="CA1802">
   <Name>Use literals where appropriate</Name>
   <Description>Prefer literals over InitOnly fields if values do not have to be calculated at runtime.</Description>
   <Resolution Name="Default">Field {0} is declared as 'static readonly' but is initialized with a constant value '{1}'. Mark this field as 'const' instead.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182280.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309">
   <Name>Use ordinal StringComparison</Name>
   <Description>For non-linguistic comparisons, StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase should be used instead of the linguistically-sensitive StringComparison.InvariantCulture.</Description>
   <Resolution Name="StringComparer">{0} passes '{1}' as the 'StringComparer' parameter to {2}. To perform a non-linguistic comparison, specify 'StringComparer.Ordinal' or 'StringComparer.OrdinalIgnoreCase' instead.</Resolution>
   <Resolution Name="StringComparison">{0} passes '{1}' as the 'StringComparison' parameter to {2}. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb385972.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726">
   <Name>Use preferred terms</Name>
   <Description>Use preferred terms over deprecated alternates.</Description>
   <Resolution Name="Member">Replace the term '{0}' in member name {1} with the preferred alternate '{2}'.</Resolution>
   <Resolution Name="MemberParameter">In member {0}, replace the term '{1}' in parameter name {2} with the preferred alternate '{3}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182258.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024">
   <Name>Use properties where appropriate</Name>
   <Description>Properties should be used instead of Get/Set methods in most situations. Methods are preferable to properties in the following situations: the operation is a conversion, is expensive or has an observable side-effect; the order of execution is important; calling the member twice in succession creates different results; a member is static but returns a mutable value; or the member returns an array.</Description>
   <Resolution Name="Default">Change {0} to a property if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182181.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062">
   <Name>Validate arguments of public methods</Name>
   <Description>All reference arguments passed to externally visible methods should be checked against null (Nothing in VB). If appropriate, throw a System.ArgumentNullException when the argument is null.</Description>
   <Resolution Name="Default">In externally visible method {0}, validate parameter '{1}' before using it.</Resolution>
   <Resolution Name="Reassigned">In externally visible method {0}, validate local variable '{1}', which was reassigned from parameter '{2}', before using it.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182182.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="16.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
 <Exceptions>
  <Exception Keyword="CA0001" Kind="Rule" TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Target="PDS.WITSMLstudio.Linq.ExpressionVisitor.#Visit(LinqExtender.Ast.Expression)">
   <Type>System.ArgumentException</Type>
   <ExceptionMessage>PDS WITSMLstudio Store is not a valid assembly strong name.&#xD;&#xA;Parameter name: assemblyStrongName</ExceptionMessage>
   <StackTrace>   at Microsoft.FxCop.Sdk.AssemblyReference..ctor(String assemblyStrongName)
   at Microsoft.FxCop.Sdk.AssemblyNode.GetFriendAssemblies()
   at Microsoft.FxCop.Sdk.InternalUtilities.AnalyzingAllFriends(AssemblyNode assembly)
   at Microsoft.FxCop.Sdk.InternalUtilities.AnalyzingAllFriends(Member member)
   at Microsoft.FxCop.Sdk.InternalUtilities.IsSpeciallyInvoked(Method method)
   at Microsoft.FxCop.Sdk.InternalUtilities.IsDeadCode(Method method, Dictionary`2&amp; table)
   at Microsoft.FxCop.Rules.Performance.AvoidUncalledPrivateCode.Check(Member member)
   at Microsoft.FxCop.Engines.Introspection.AnalysisVisitor.CheckMember(Member memberToAnalyze, Member member, TargetMember target)</StackTrace>
  </Exception>
 </Exceptions>
</FxCopReport>
